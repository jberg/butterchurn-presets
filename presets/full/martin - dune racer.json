{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":6.671,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":0.1,"ob_a":1,"ib_size":0.26,"mv_x":12.8,"mv_y":9.6,"mv_l":0.05,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"y":0.6,"rad":0.43865,"tex_ang":3.01593,"tex_zoom":10.0405,"g":1,"b":1,"g2":0,"border_r":0.8,"border_g":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = min(2,1/q22);","init_eqs_eel":"","frame_eqs_eel":"rad = min(2,1/q22);"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":174,"rad":1.99863,"tex_zoom":0.49981,"g":1,"a":0.1,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.x0=0;a.y0=0;a.q17=0;","frame_eqs_str":"a.x0=div(rand(1E3),1200)+.1;a.y0=div(rand(1E3),1E3);a.x=a.x0;a.y=.45+a.y0*a.y0;a.rad=div(.02*rand(200),100);a.a=.1*a.q17;","init_eqs_eel":"","frame_eqs_eel":"x0 = rand(1000)/1200+.1;\ny0 = rand(1000)/1000;\n\nx = x0;\ny = .45+y0*y0;\nrad = .02 * rand(200)/100;\na = .1*q17;"},{"baseVals":{"enabled":1,"sides":13,"additive":1,"num_inst":117,"rad":0.73893,"tex_zoom":1.22384,"g":1,"b":1,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.k1=0;a.oz=0;a.ox=0;a.oy=0;a.fov=0;a.k2=0;a.dx=0;a.q17=0;","frame_eqs_str":"a.k1=6.28*div(a.instance,a.num_inst);a.oz=div(mod(65*a.instance+37,4096),199)+.3*a.time;a.oz=1+Math.floor(a.oz)-a.oz;a.ox=Math.sin(72*a.k1);a.oy=Math.cos(112*a.k1);a.fov=.02;a.k2=0;a.dx=div(a.fov*a.ox,a.oz+a.k2);a.x=.9*div(a.instance,a.num_inst)+.05;a.y=div(.4*a.fov*Math.abs(a.oy),a.oz+a.k2)+.5;a.rad=Math.min(div(2*a.fov,a.oz),.3);a.a=above(a.oz,0)*(.05+.01*a.q17)*Math.max(0,(1-pow(a.oz,1))*sqrt(a.oz));a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst*6.28;\n\noz = ((65*instance+37)%4096)/199 + time*.3;\noz = 1 + int(oz)-oz;\n\nox = sin(k1*72);\noy = cos(k1*112); //# Mult aendern\n\nfov = .02;\n//fov = .012/q23 + .005;\n//oz = oz*oz;\n\nk2 = .0;\ndx = fov*ox/(oz+k2);\nx = (instance/num_inst)*.9 +0.05 ;\n\ny = .4*fov*abs(oy)/(oz+k2)+.5;\nrad = min(2*fov/oz,.3);\n\na = above(oz,0)*(.05+.01*q17) * max(0,(1-pow(oz,1))*sqrt(oz));\n\na2 = 0;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":193,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"t1 = rand(100)/300+.5;\nt2 = rand(100)/100+1;","frame_eqs_str":"","point_eqs_str":"x = sample; y =.51;","init_eqs_eel":"t1 = rand(100)/300+.5;\nt2 = rand(100)/100+1;","frame_eqs_eel":"","point_eqs_eel":"x = sample; y =.51;"},{"baseVals":{"samples":232,"usedots":1,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"g":0,"b":0,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"thick":1,"scaling":0.89152,"smoothing":0.82,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.ddir=0;a.ran1__=0;a.index=0;a.q12=0;a.ddir3=0;a.dir_s=0;a.q22=0;a.height=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.ran1_=0;a.trel=0;a.q9=0;a.pos1=0;a.dec_s=0;a.vdir=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.pulse=0;a.ddir_=0;a.q10=0;a.dec_m=0;a.q4=0;a.dir=0;a.q16=0;a.q26=0;a.p2=0;a.avg=0;a.storm=0;a.trig=0;a.beat=0;a.q17=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q14=0;a.p3=0;a.speed=0;a.q3=0;a.t0=0;a.ran1=0;a.q7=0;a.q30=0;a.pos2=0;a.q8=0;a.ran1=.4;\na.ran1_=a.ran1;a.ran1__=a.ran1;a.speed=1;a.index=rand(16);a.dir=1.5*(div(rand(100),100)-.5);a.dir_s=a.sir;","frame_eqs_str":"a.dec_m=pow(.85,div(30,a.fps));a.dec_s=pow(.96,div(30,a.fps));a.beat=a.bass+a.mid+a.treb;a.avg=a.avg*a.dec_s+a.beat*(1-a.dec_s);a.is_beat=above(a.beat,1+a.avg+a.peak)*above(a.time,a.t0+.5);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_m;a.index=mod(a.index+a.is_beat,24);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.q22=Math.max(0,a.peak-0)+.01;a.q24=a.is_beat;a.q27=a.index+1;a.pulse=a.pulse*a.dec_m+(1-a.dec_m)*a.beat;a.q23=\ndiv(a.pulse,4);a.trel+=div(div(a.pulse,a.fps),2);a.q26=a.trel;a.k1=a.is_beat*bnot(mod(a.index,4));a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_m*a.p2+(1-a.dec_m)*a.p1;a.p3=a.dec_m*a.p3+(1-a.dec_m)*a.p2;a.rott=div(3.14159265359*a.p3,4);a.q13=Math.cos(a.rott);a.q14=Math.sin(a.rott);a.q15=-a.q14;a.q16=a.q13;a.trig=a.is_beat*bnot(mod(a.index,12));a.dir_s=.00001<Math.abs(a.trig)?(div(rand(100),30)-1.5)*above(rand(100),80):a.dir_s;a.storm=a.storm*a.dec_m+(1-a.dec_m)*bnot(a.dir_s)*below(Math.abs(a.dir),.1);\na.q17=a.storm;a.speed=a.speed*a.dec_s+(1-a.dec_s)*(1+3*a.storm);a.monitor=a.index;a.ddir=.2*-(a.dir-a.dir_s);a.ddir_=a.ddir_*a.dec_s+a.ddir*(1-a.dec_s);a.dir+=div(a.ddir_,a.fps)*Math.abs(a.speed);a.q9=a.dir;a.q10=.5*Math.max(Math.min(Math.tan(a.dir),1),-1)+.5;a.q12=a.dir;a.height=4;a.trig=a.is_beat*bnot(mod(a.index,8));a.ran1=.00001<Math.abs(a.trig)?div(rand(100),250)+.1:a.ran1;a.ran1_=a.ran1_*a.dec_m+(1-a.dec_m)*a.ran1;a.ran1__=a.ran1__*a.dec_s+(1-a.dec_s)*a.ran1_;a.vdir=a.ran1__;a.q7=a.vdir;a.q8=\n.00001<Math.abs(above(a.vdir,0))?a.height:a.height-4*a.vdir;a.ddir3=a.ddir3*a.dec_m+(1-a.dec_m)*(a.ddir_+.1*Math.sin(div(a.trel,4)));a.q1=Math.cos(div(a.ddir3*a.speed,2));a.q2=Math.sin(div(-a.ddir3*a.speed,2));a.q3=Math.cos(a.dir);a.q4=Math.sin(a.dir);a.pos1=a.pos1+div(a.q3,a.fps)*a.speed+div(.8,a.fps)*a.speed;a.pos2+=div(a.q4,a.fps)*a.speed;a.q5=-a.pos2;a.q6=a.pos1;a.q29=.05*Math.sin(div(a.time,7.5))+.1;a.q30=1-div(30*(.07+.04*a.q13+.02*a.q17),a.fps);a.q31=1-div(3*a.q17,a.fps);a.zoom=1;a.rot=0;a.dx=\ndiv(.005*a.q14*(4*a.q17+1)*30,a.fps);a.dy=div(.002*Math.sin(div(a.time,2))*a.q17*30,a.fps);a.warp=.1;","pixel_eqs_str":"","init_eqs_eel":"ran1 = .4;\nran1_ = ran1;\nran1__ = ran1;\nspeed = 1;\nindex = rand(16);\n\ndir = (rand(100)/100-.5)*1.5;\ndir_s = sir;","frame_eqs_eel":"dec_m = pow (0.85, 30/fps); dec_s = pow (0.96, 30/fps); \n\nbeat = bass+mid+treb; \navg = avg*dec_s + beat*(1-dec_s);\nis_beat = above(beat, 1+avg+peak) * above (time, t0+.5);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_m;\nindex = (index + is_beat) %24;\nindex2 = (index2 + is_beat*bnot(index))%8;\n\nq22 = max(0,peak-.0)+.01;\nq24 = is_beat;\nq27 = index +1;\npulse = pulse*dec_m + (1-dec_m)*beat;\nq23 = pulse/4;\ntrel = trel + pulse/fps/2;\nq26 = trel;\n\nk1 =  is_beat*bnot(index%4);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_m * p2+ (1-dec_m)*p1;\np3 = dec_m * p3+ (1-dec_m)*p2;\nrott = p3 * 3.14159265359/4;\n\nq13 = cos(rott);\nq14 = sin(rott);\nq15 = -q14;\nq16 = q13;\n\ntrig = is_beat * bnot(index%12);\ndir_s = if(trig,(rand(100)/30-1.5)*above(rand(100),80),dir_s);\nstorm = storm*dec_m + (1-dec_m)* bnot(dir_s)*below(abs(dir),.1);\nq17 = storm;\nspeed = speed*dec_s + (1-dec_s)*(1+3*storm);\nmonitor = index;\n\nddir = -(dir - dir_s)*.2;\nddir_ = ddir_ *dec_s + ddir *(1-dec_s);\ndir = dir + ddir_/fps*abs(speed) ;\n//dir = 0;\nq9 = dir;\nq10 = max(min(tan(dir),1),-1)*.5+.5;\nq12 = dir;\n\nheight = 4;\ntrig = is_beat * bnot(index%8);\nran1 = if (trig,rand(100)/250+.1,ran1);\nran1_ = ran1_*dec_m + (1-dec_m) * ran1;\nran1__ = ran1__*dec_s + (1-dec_s) * ran1_;\nvdir = ran1__;\nq7 = vdir; //Blick vertikal; verschiebt nur uv1.y\nq8 = if (above(vdir,0),height,height-4*vdir); //Flughoehe; \n\n//***** Tilt\nddir3 = ddir3*dec_m + (1-dec_m)*(ddir_+sin(trel/4)*.1);\nq1 = cos(ddir3*speed/2);\nq2 = sin(-ddir3*speed/2);\n\n//***** moving direction\nq3 = cos(dir);\nq4 = sin(dir);\n\n//***** x-y-Position\npos1 = pos1 + q3/fps*speed+.8/fps*speed;\npos2 = pos2 + q4/fps*speed;\nq5 = -pos2;\nq6 = pos1;\n\nq29 = .05*sin(time/7.5)+.1;\nq30 = 1-(.07+.04*q13 +.02*q17)*30/fps;\nq31 = 1.00-.1*q17*30/fps;\n\nzoom = 1;\nrot = 0.0;\ndx = 0.005*q14*(4*q17+1)*30/fps;\ndy = .002*sin(time/2)*q17*30/fps;\nwarp = .1;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.5;\n  float tmpvar_3;\n  tmpvar_3 = (1.0 - q17);\n  tmpvar_2.y = ((0.5 + (0.02 * tmpvar_3)) + ((q17 * 0.08) * sin(\n    (((4.0 * uv.x) + q26) + q12)\n  )));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q31;\n  tmpvar_4.y = q30;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noise_lq, (((texsize.xy * texsize_noise_lq.zw).x * uv) + rand_frame.xy));\n  ret_1 = (((texture (sampler_fw_main, \n    ((((uv - tmpvar_2) * tmpvar_4) + tmpvar_2) + ((tmpvar_5.xyz - 0.5) * 0.003).xy)\n  ).xyz + \n    (0.1 * (tmpvar_5.xyz - 0.5))\n  ) - 0.01) * (0.99 - (0.03 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  )));\n  ret_1 = (ret_1 - ((tmpvar_3 * \n    float((uv.y >= 0.5))\n  ) * 0.04));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"float lav_gnd;\nfloat xlat_mutablelavmask;\nvec3 xlat_mutableret1;\nvec3 xlat_mutablersl;\nfloat xlat_mutablesand;\nfloat xlat_mutabletmp;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = q5;\n  tmpvar_1.y = q6;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.5;\n  tmpvar_2.y = q7;\n  xlat_mutableuv1 = ((uv * aspect.xy) - tmpvar_2);\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = q1;\n  tmpvar_3[uint(0)].y = -(q2);\n  tmpvar_3[1u].x = q2;\n  tmpvar_3[1u].y = q1;\n  xlat_mutableuv1 = (xlat_mutableuv1 * tmpvar_3);\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.44;\n  tmpvar_4.x = (0.5 - q12);\n  xlat_mutableuv2 = ((xlat_mutableuv1 * vec2(0.8, 0.8)) + tmpvar_4);\n  xlat_mutablesand = dot (texture (sampler_main, xlat_mutableuv2).xyz, vec3(0.32, 0.49, 0.29));\n  float tmpvar_5;\n  tmpvar_5 = -(q4);\n  vec2 rs_6;\n  float z_7;\n  z_7 = (8.0 / (xlat_mutableuv1.y - 0.5));\n  float tmpvar_8;\n  tmpvar_8 = clamp (z_7, -32.0, 1.0);\n  z_7 = tmpvar_8;\n  rs_6.x = (xlat_mutableuv1.x * tmpvar_8);\n  rs_6.y = tmpvar_8;\n  mat2 tmpvar_9;\n  tmpvar_9[uint(0)].x = q3;\n  tmpvar_9[uint(0)].y = tmpvar_5;\n  tmpvar_9[1u].x = q4;\n  tmpvar_9[1u].y = q3;\n  rs_6 = (rs_6 * tmpvar_9);\n  vec3 tmpvar_10;\n  tmpvar_10.xy = ((-(rs_6) / 64.0) + (tmpvar_1 / 512.0));\n  tmpvar_10.z = tmpvar_8;\n  vec2 uvi_11;\n  uvi_11 = (tmpvar_10.xy * 2.0);\n  float tmpvar_12;\n  tmpvar_12 = (0.006 * time);\n  xlat_mutabletmp = clamp (dot ((texture (sampler_noise_hq, \n    (tmpvar_10.xy + (0.03 * ((\n      (dot (texture (sampler_noise_hq, uvi_11), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\n        (uvi_11 * 2.0)\n       + tmpvar_12)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\n     + \n      (dot (texture (sampler_noise_hq, ((uvi_11 * 4.0) + tmpvar_12)), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\n    ) + (\n      dot (texture (sampler_noise_hq, ((uvi_11 * 8.0) + (4.0 * tmpvar_12))), vec4(0.32, 0.49, 0.29, 0.0))\n     / 8.0))))\n  ) - 0.5), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\n  vec2 rs_13;\n  float z_14;\n  z_14 = (8.0 / ((xlat_mutableuv1.y - \n    (xlat_mutabletmp * 0.03)\n  ) - 0.5));\n  float tmpvar_15;\n  tmpvar_15 = clamp (z_14, -32.0, 1.0);\n  z_14 = tmpvar_15;\n  rs_13.x = (xlat_mutableuv1.x * tmpvar_15);\n  rs_13.y = tmpvar_15;\n  mat2 tmpvar_16;\n  tmpvar_16[uint(0)].x = q3;\n  tmpvar_16[uint(0)].y = tmpvar_5;\n  tmpvar_16[1u].x = q4;\n  tmpvar_16[1u].y = q3;\n  rs_13 = (rs_13 * tmpvar_16);\n  vec3 tmpvar_17;\n  tmpvar_17.xy = ((-(rs_13) / 64.0) + (tmpvar_1 / 512.0));\n  tmpvar_17.z = tmpvar_15;\n  vec2 uvi_18;\n  uvi_18 = (tmpvar_17.xy * 2.0);\n  xlat_mutabletmp = clamp (dot ((texture (sampler_noise_hq, \n    (tmpvar_17.xy + (0.03 * ((\n      (dot (texture (sampler_noise_hq, uvi_18), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\n        (uvi_18 * 2.0)\n       + tmpvar_12)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\n     + \n      (dot (texture (sampler_noise_hq, ((uvi_18 * 4.0) + tmpvar_12)), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\n    ) + (\n      dot (texture (sampler_noise_hq, ((uvi_18 * 8.0) + (4.0 * tmpvar_12))), vec4(0.32, 0.49, 0.29, 0.0))\n     / 8.0))))\n  ) - 0.5), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\n  vec2 rs_19;\n  float z_20;\n  z_20 = (8.0 / ((xlat_mutableuv1.y - \n    (xlat_mutabletmp * 0.03)\n  ) - 0.5));\n  float tmpvar_21;\n  tmpvar_21 = clamp (z_20, -32.0, 1.0);\n  z_20 = tmpvar_21;\n  rs_19.x = (xlat_mutableuv1.x * tmpvar_21);\n  rs_19.y = tmpvar_21;\n  mat2 tmpvar_22;\n  tmpvar_22[uint(0)].x = q3;\n  tmpvar_22[uint(0)].y = tmpvar_5;\n  tmpvar_22[1u].x = q4;\n  tmpvar_22[1u].y = q3;\n  rs_19 = (rs_19 * tmpvar_22);\n  vec3 tmpvar_23;\n  tmpvar_23.xy = ((-(rs_19) / 64.0) + (tmpvar_1 / 512.0));\n  tmpvar_23.z = tmpvar_21;\n  xlat_mutableuv2 = tmpvar_23.xy;\n  vec2 uvi_24;\n  uvi_24 = (tmpvar_23.xy * 2.0);\n  xlat_mutabletmp = clamp (dot ((texture (sampler_noise_hq, \n    (tmpvar_23.xy + (0.03 * ((\n      (dot (texture (sampler_noise_hq, uvi_24), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\n        (uvi_24 * 2.0)\n       + tmpvar_12)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\n     + \n      (dot (texture (sampler_noise_hq, ((uvi_24 * 4.0) + tmpvar_12)), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\n    ) + (\n      dot (texture (sampler_noise_hq, ((uvi_24 * 8.0) + (4.0 * tmpvar_12))), vec4(0.32, 0.49, 0.29, 0.0))\n     / 8.0))))\n  ) - 0.5), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\n  float tmpvar_25;\n  tmpvar_25 = clamp ((pow (xlat_mutabletmp, 1.4) * sign(xlat_mutabletmp)), 0.0, 1.0);\n  xlat_mutabletmp = tmpvar_25;\n  vec2 uvi_26;\n  uvi_26 = (tele * xlat_mutableuv1);\n  vec2 rs_27;\n  float z_28;\n  z_28 = ((8.0 / uvi_26.y) * q8);\n  float tmpvar_29;\n  float tmpvar_30;\n  tmpvar_30 = (100.0 * hordist);\n  tmpvar_29 = clamp (z_28, -8.0, tmpvar_30);\n  z_28 = tmpvar_29;\n  rs_27.x = (uvi_26.x * tmpvar_29);\n  rs_27.y = tmpvar_29;\n  mat2 tmpvar_31;\n  tmpvar_31[uint(0)].x = q3;\n  tmpvar_31[uint(0)].y = tmpvar_5;\n  tmpvar_31[1u].x = q4;\n  tmpvar_31[1u].y = q3;\n  rs_27 = (rs_27 * tmpvar_31);\n  vec3 tmpvar_32;\n  tmpvar_32.xy = (rs_27 / 64.0);\n  tmpvar_32.z = tmpvar_29;\n  vec3 tmpvar_33;\n  tmpvar_33.z = 0.0;\n  tmpvar_33.xy = tmpvar_1;\n  xlat_mutablersl = (tmpvar_32 + tmpvar_33);\n  lav_gnd = -(((\n    ((((\n      clamp ((texture (sampler_noise_hq, (xlat_mutablersl.xy / 16.0)) - 0.5), vec4(-0.25, -0.25, -0.25, -0.25), vec4(0.25, 0.25, 0.25, 0.25))\n     * 2.0) + (\n      (texture (sampler_noise_hq, (xlat_mutablersl.xy / 8.0)) - 0.5)\n     / 4.0)) + (texture (sampler_noise_hq, vec2((\n      (xlat_mutablersl.x + sin((2.0 * xlat_mutablersl.y)))\n     / 2.0))) / 8.0)).x / 3.0)\n   * 2.5) / sqrt(xlat_mutablersl.z)));\n  vec2 uvi_34;\n  uvi_34 = (tele * xlat_mutableuv1);\n  vec2 rs_35;\n  float z_36;\n  z_36 = ((8.0 / uvi_34.y) * (q8 - (4.0 * lav_gnd)));\n  float tmpvar_37;\n  tmpvar_37 = clamp (z_36, -8.0, tmpvar_30);\n  z_36 = tmpvar_37;\n  rs_35.x = (uvi_34.x * tmpvar_37);\n  rs_35.y = tmpvar_37;\n  mat2 tmpvar_38;\n  tmpvar_38[uint(0)].x = q3;\n  tmpvar_38[uint(0)].y = tmpvar_5;\n  tmpvar_38[1u].x = q4;\n  tmpvar_38[1u].y = q3;\n  rs_35 = (rs_35 * tmpvar_38);\n  vec3 tmpvar_39;\n  tmpvar_39.xy = (rs_35 / 64.0);\n  tmpvar_39.z = tmpvar_37;\n  vec3 tmpvar_40;\n  tmpvar_40.z = 0.0;\n  tmpvar_40.xy = tmpvar_1;\n  xlat_mutablersl = (tmpvar_39 + tmpvar_40);\n  lav_gnd = (lav_gnd - ((\n    ((((\n      clamp ((texture (sampler_noise_hq, (xlat_mutablersl.xy / 16.0)) - 0.5), vec4(-0.25, -0.25, -0.25, -0.25), vec4(0.25, 0.25, 0.25, 0.25))\n     * 2.0) + (\n      (texture (sampler_noise_hq, (xlat_mutablersl.xy / 8.0)) - 0.5)\n     / 4.0)) + (texture (sampler_noise_hq, vec2((\n      (xlat_mutablersl.x + sin((2.0 * xlat_mutablersl.y)))\n     / 2.0))) / 8.0)).x / 3.0)\n   * 2.5) / sqrt(xlat_mutablersl.z)));\n  vec2 uvi_41;\n  uvi_41 = (tele * xlat_mutableuv1);\n  vec2 rs_42;\n  float z_43;\n  z_43 = ((8.0 / uvi_41.y) * (q8 - (4.0 * lav_gnd)));\n  float tmpvar_44;\n  tmpvar_44 = clamp (z_43, -8.0, tmpvar_30);\n  z_43 = tmpvar_44;\n  rs_42.x = (uvi_41.x * tmpvar_44);\n  rs_42.y = tmpvar_44;\n  mat2 tmpvar_45;\n  tmpvar_45[uint(0)].x = q3;\n  tmpvar_45[uint(0)].y = tmpvar_5;\n  tmpvar_45[1u].x = q4;\n  tmpvar_45[1u].y = q3;\n  rs_42 = (rs_42 * tmpvar_45);\n  vec3 tmpvar_46;\n  tmpvar_46.xy = (rs_42 / 64.0);\n  tmpvar_46.z = tmpvar_44;\n  vec3 tmpvar_47;\n  tmpvar_47.z = 0.0;\n  tmpvar_47.xy = tmpvar_1;\n  xlat_mutablersl = (tmpvar_46 + tmpvar_47);\n  float tmpvar_48;\n  tmpvar_48 = (((\n    clamp ((texture (sampler_noise_hq, (xlat_mutablersl.xy / 16.0)) - 0.5), vec4(-0.25, -0.25, -0.25, -0.25), vec4(0.25, 0.25, 0.25, 0.25))\n   * 2.0) + (\n    (texture (sampler_noise_hq, (xlat_mutablersl.xy / 8.0)) - 0.5)\n   / 4.0)) + (texture (sampler_noise_hq, vec2((\n    (xlat_mutablersl.x + sin((2.0 * xlat_mutablersl.y)))\n   / 2.0))) / 8.0)).x;\n  lav_gnd = (lav_gnd - ((\n    (tmpvar_48 / 3.0)\n   * 2.5) / sqrt(xlat_mutablersl.z)));\n  vec2 uvi_49;\n  uvi_49 = (tele * xlat_mutableuv1);\n  vec2 rs_50;\n  float z_51;\n  z_51 = ((8.0 / uvi_49.y) * (q8 - (4.0 * lav_gnd)));\n  float tmpvar_52;\n  tmpvar_52 = clamp (z_51, -8.0, tmpvar_30);\n  z_51 = tmpvar_52;\n  rs_50.x = (uvi_49.x * tmpvar_52);\n  rs_50.y = tmpvar_52;\n  mat2 tmpvar_53;\n  tmpvar_53[uint(0)].x = q3;\n  tmpvar_53[uint(0)].y = tmpvar_5;\n  tmpvar_53[1u].x = q4;\n  tmpvar_53[1u].y = q3;\n  rs_50 = (rs_50 * tmpvar_53);\n  vec3 tmpvar_54;\n  tmpvar_54.xy = (rs_50 / 64.0);\n  tmpvar_54.z = tmpvar_52;\n  vec3 tmpvar_55;\n  tmpvar_55.z = 0.0;\n  tmpvar_55.xy = tmpvar_1;\n  xlat_mutablersl = (tmpvar_54 + tmpvar_55);\n  vec3 tmpvar_56;\n  tmpvar_56 = (xlat_mutablersl + vec3(0.0, 0.1, 0.0));\n  xlat_mutablelavmask = (clamp ((hordist - \n    (xlat_mutablersl.z / 100.0)\n  ), 0.0, 1.0) * float((xlat_mutablersl.z >= 0.0)));\n  xlat_mutableret1 = ((clamp (\n    (1.0 - tmpvar_25)\n  , 0.0, 1.0) * uv.y) * vec3(0.3, 0.4, 1.0));\n  xlat_mutableret1 = (xlat_mutableret1 + (vec3(tmpvar_25) * 2.0));\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - xlat_mutablelavmask), 0.0, 1.0));\n  xlat_mutableret1 = (xlat_mutableret1 + ((\n    (texture (sampler_noise_lq, (xlat_mutablersl * 8.0).xy).x * (0.3 + (4.0 * clamp (\n      ((0.2 + tmpvar_48) - (((\n        clamp ((texture (sampler_noise_hq, (tmpvar_56.xy / 16.0)) - 0.5), vec4(-0.25, -0.25, -0.25, -0.25), vec4(0.25, 0.25, 0.25, 0.25))\n       * 2.0) + (\n        (texture (sampler_noise_hq, (tmpvar_56.xy / 8.0)) - 0.5)\n       / 4.0)) + (texture (sampler_noise_hq, vec2((\n        (tmpvar_56.x + sin((2.0 * tmpvar_56.y)))\n       / 2.0))) / 8.0)).x)\n    , 0.0, 1.0))))\n   * xlat_mutablelavmask) * vec3(1.0, 0.4, 0.0)));\n  vec2 rs_57;\n  float z_58;\n  z_58 = ((8.0 / xlat_mutableuv1.y) * (q8 - (4.0 * lav_gnd)));\n  float tmpvar_59;\n  tmpvar_59 = clamp (z_58, -8.0, tmpvar_30);\n  z_58 = tmpvar_59;\n  rs_57.x = (xlat_mutableuv1.x * tmpvar_59);\n  rs_57.y = tmpvar_59;\n  mat2 tmpvar_60;\n  tmpvar_60[uint(0)].x = q3;\n  tmpvar_60[uint(0)].y = tmpvar_5;\n  tmpvar_60[1u].x = q4;\n  tmpvar_60[1u].y = q3;\n  rs_57 = (rs_57 * tmpvar_60);\n  vec3 tmpvar_61;\n  tmpvar_61.xy = (rs_57 / 64.0);\n  tmpvar_61.z = tmpvar_59;\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 - (\n    ((0.8 * clamp ((\n      ((8.0 + (12.0 * abs(\n        cos((tmpvar_61.x * 8.0))\n      ))) - (tmpvar_61.y * 8.0))\n     - \n      (24.0 * abs(tmpvar_61.x))\n    ), 0.0, 1.0)) * float((xlat_mutablersl.z >= 0.0)))\n   * \n    float((abs(tmpvar_61.x) <= 0.5))\n  )));\n  xlat_mutableret1 = ((xlat_mutableret1 * (1.0 - \n    clamp ((xlat_mutablesand * xlat_mutablesand), 0.0, 1.0)\n  )) + (xlat_mutablesand * vec3(1.0, 0.46, 0.0)));\n  vec4 tmpvar_62;\n  tmpvar_62.w = 1.0;\n  tmpvar_62.xyz = (1.0 - exp((\n    -(xlat_mutableret1)\n   * 1.5)));\n  ret = tmpvar_62.xyz;\n }","warp_hlsl":"\nsampler sampler_pw_noise_lq;\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 dis = float2 (.5,.5 +.02*(1-q17) +q17*.08*sin(4*uv.x+q26+q12));\nfloat3 ret1, ret2;\nfloat del = (uv.y>=.5);\n\nfloat2 uv1 = (uv-dis)*float2(q31,q30)+dis;\n\nuv1 += GetBlur1(uv)*0;\n\nfloat3 seed = tex2D(sampler_noise_lq,corr*uv+rand_frame +float2(0,time*0));\n\nfloat2 dz = tex2D (sampler_main, uv1+seed).xy;\ndz = (seed-.5)*.003;\n\nret1 = tex2D (sampler_fw_main, uv1+dz) + 0.1*(seed-.5);\n\nret = (ret1 - .01) * 1 * (.99-.03*GetBlur1(uv)); \nret -= (1-q17)*del*.04;\n}\n\nwritten by martin\nEND","comp_hlsl":"static const float quality = 3, depth = 2.5;\nfloat3 rsl, rsl2, rss, ret1,screen3,cloud;\nfloat2 uv0, uv1, uv2;\nfloat sand,tmp, lprof,lprof2,sprof,sprof2, n, stone,stone_lit,sun,sky;\nfloat hormask, lavmask,ilavmask,cldmask,ncloud;\nstatic float lav_gnd = 0,hordist = 8, tele = 1+0*q17;\nstatic float2 mov = float2 (q5,q6);\n\nfloat hq_n (float3 uvi) {return lum(tex2D (sampler_noise_hq ,uvi.xy));}\nfloat noise2 (float3 uvi) {return tex2D (sampler_noise_lq,uvi*8);}\n\nfloat noise4 (float2 uvi) { float n1,n2,n3,n4,zv; zv = 0.006*time;\n  n1 = lum(tex2D(sampler_noise_hq, (uvi)));\n  n2 = lum(tex2D(sampler_noise_hq, (uvi*2+zv)));\n  n3 = lum(tex2D(sampler_noise_hq, (uvi*4+zv)));\n  n4 = lum(tex2D(sampler_noise_hq, (uvi*8+4*zv)));\n  return n1 + n2/2 + n3/4 + n4/8;}\n\nfloat noise3 (float3 uvi) {float arg;\nreturn  clamp(tex2D (sampler_noise_hq,uvi.xy/16)-.5,-.25,.25)*2\n        +(tex2D (sampler_noise_hq,uvi.xy/8)-.5)/4\n        +(tex2D (sampler_noise_hq,(uvi.x + sin(2*uvi.y))/2))/8;}\n\nfloat3 rs_lav (float2 uvi, float berg) {  float z; float2 rs;\n  z = 8/(uvi.y)*(q8-4*berg); z = clamp(z,-8,100*hordist); //#final check !\n  rs.x = uvi.x*z ; rs.y = z; \n  rs = mul(rs,float2x2(q3,q4,-q4,q3));  \n  return float3(rs/64,z); } \n\nfloat3 rs_sky (float2 uvi, float berg) {  float z; float2 rs;\n  z = 8/(uvi.y - berg-.5); z = clamp(z,-32,1);\n  rs.x = (uvi.x)*z ; rs.y = z; \n  rs = mul(rs,float2x2(q3,q4,-q4,q3));\n  return float3(-rs/64+mov/512,z); }\n\nshader_body {uv0 = uv;\nuv1 = uv*aspect.xy-float2(.5,q7) ;\nuv1 = mul(uv1,float2x2(q1,q2,-q2,q1));\n\nfloat fx = .8;\nuv2 = uv1*float2(fx,fx)+float2(.5-q12,.44);\nsand = lum(GetPixel(uv2)) * (1-0*length(uv1));\nfloat sand2 =lum(GetPixel(float2(uv2.x,1-uv2.y)));\n\n//CLOUDS\nuv2 = rs_sky(uv1,0);tmp = 0;\nfor (int n = 1; n <= 3; n++) {\n  uv2 = rs_sky(uv1,tmp*.03);\n  tmp = saturate(lum(tex2D (sampler_noise_hq,uv2 +.03*noise4(uv2*2))-.5));}\ntmp = saturate(pow(tmp,1.4) * sign(tmp));\ncloud = tmp;\nncloud = saturate(1-tmp);\n\n//DUNES\nfor (n=1; n <= quality; n++) {\n  rsl = rs_lav(tele*uv1,lav_gnd)+float3(mov,0); //#spiele an uv-Vorfakt - zoom, auch bei sky !\n  lprof = noise3(rsl);\n  lav_gnd -= lprof/quality*depth/sqrt(rsl.z); } \nrsl = rs_lav(tele*uv1,lav_gnd)+float3(mov,0); \nstone = noise2(rsl);\n\nfloat3 rsl3 = rsl + float3(0,.1,0);\nlprof2 = noise3(rsl3);\nstone_lit = .3+4*saturate(.2+lprof-lprof2);\n\n//------------------- masking -----------------------------------------\nlavmask = saturate (hordist-rsl.z/100) * (rsl.z >= 0); // # !\nilavmask = saturate(1-lavmask);\n\n//---------------- skylight first-----------------\nret1 = ncloud*uv.y*float3 (.3,.4,1); \nret1 += cloud*2;\nret1 *= ilavmask;  \n\n//----------------lava / stone  -----------------\nret1 += stone *stone_lit*lavmask * float3(1,.4,.0);\n\nfloat2 uv3 = rs_lav(uv1,lav_gnd);\n\nfloat shad =  saturate (8+12*abs(cos(uv3.x*8))-uv3.y*8 -24*abs(uv3.x) );\nret1 *= 1-.8*shad*(rsl.z >= 0)*(abs(uv3.x)<=.5);\n\nret1 = ret1*(1-saturate(sand*sand)) + sand*float3(1,.46,0) ;\n\nret = 1-exp(-ret1*1.5); \n\n//ret = GetPixel(uv);\n}\n\nwritten by martin\nEND"}