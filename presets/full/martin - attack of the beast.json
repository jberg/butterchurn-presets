{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"textured":1,"y":0.66,"rad":0.34546,"tex_ang":1.50796,"tex_zoom":0.61299,"r":0.8,"g":0.8,"b":1,"a":0.08,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"num_inst":32,"y":0.67,"rad":0.02007,"tex_zoom":1.25486,"r":0.7,"a":0.5,"g2":0,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_str":"a.phase=0;a.speed=0;a.x0=0;a.q2=0;a.trel=0;a.tinst=0;a.q3=0;a.q17=0;","frame_eqs_str":"a.phase=Math.sin(3*a.instance);a.speed=2+Math.cos(12*a.instance);a.x0=.5+div(.06,a.q2)*Math.sin(17*a.instance);a.trel=div((a.time-a.phase)*a.speed,16);a.tinst=a.trel-Math.floor(a.trel);a.x=a.x0;a.y=.5-a.q3-a.tinst;a.a=Math.min(sqrt(a.tinst)+.1,1);a.a*=a.q17;","init_eqs_eel":"","frame_eqs_eel":"//blood drooling\n\n// \"random\" values per instance\nphase = sin(instance*3);\nspeed = 2+cos(instance*12);\nx0 = .5 + .06/q2*sin(instance*17);\n\ntrel = (time-phase)*speed/16;\ntinst = trel - int(trel);\n\nx = x0;\ny = .5-q3 - tinst;\n\na = min(sqrt(tinst)+.1,1);\na = a*q17;"},{"baseVals":{"sides":3,"num_inst":6,"x":0.503,"y":0.37,"rad":0.06391,"ang":0.94248,"tex_zoom":9.18052,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"k1 = instance/num_inst-.5;\n\nx = .5 + k1/8;\n\ny = .4 + (k1)*0;\nang = 0;\na = .1; a2 = .0;","init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst-.5;\n\nx = .5 + k1/8;\n\ny = .4 + (k1)*0;\nang = 0;\na = .1; a2 = .0;"},{"baseVals":{"enabled":1,"sides":9,"num_inst":2,"x":0.52,"y":0.51,"rad":0.018,"tex_zoom":1.91509,"r":0,"r2":0.5,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0},"init_eqs_str":"a.q22=0;","frame_eqs_str":"a.x=.5+.04*(a.instance-.5);a.rad=.01+.01*a.q22;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + (instance-.5)*.04;\nrad = .01+q22*.01;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"scaling":7.858,"smoothing":0.1,"g":0,"b":0,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.89152,"smoothing":0,"r":0.5,"g":0,"b":0.5,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.py__=0;a.py_=0;a.ph2a=0;a.light=0;a.crumple=0;a.px_=0;a.index2=0;a.blend=0;a.ph3=0;a.index=0;a.q18=0;a.q22=0;a.q21=0;a.q15=0;a.q6=0;a.dec_b=0;a.q1=0;a.dec_med=0;a.px__=0;a.q5=0;a.q9=0;a.mshape=0;a.blend_=0;a.dist_=0;a.is_beat=0;a.q24=0;a.mwidth=0;a.dec_slow=0;a.q11=0;a.q10=0;a.ph2=0;a.q4=0;a.q16=0;a.q26=0;a.avg=0;a.trig=0;a.q19=0;a.beat=0;a.q17=0;a.trel2=0;a.peak=0;a.q2=0;a.q27=0;a.dist=0;a.trel1=0;a.open=0;a.q3=0;a.t0=0;a.q28=0;a.q20=0;a.ph1=0;a.crumple=0;a.mwidth=.5;a.mshape=\n0;a.dist=4;a.dist_=4;","frame_eqs_str":"a.dec_med=pow(.8,div(30,a.fps));a.dec_b=pow(.9,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,32);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q24=a.is_beat;\na.q26=a.bass_att+a.mid_att+a.treb_att;a.q27=a.index+1;a.q28=a.index2;a.light=a.light*a.dec_med+(1-a.dec_med)*a.q22;a.light=Math.min(a.light,3);a.q15=div(a.light,3);a.ph1=below(a.q27,8);a.ph2=above(a.q27,8)*below(a.q27,16);a.ph2a=above(a.q27,29);a.ph3=above(a.q27,30);a.blend=above(a.q27,30)+below(a.q27,2);a.blend_=a.dec_b*a.blend_+(1-a.dec_b)*a.blend;a.q19=a.blend_;a.q18=1-a.blend_;a.dist=.00001<Math.abs(a.ph1)?3:a.dist;a.dist=.00001<Math.abs(a.ph2)?Math.max(a.dist-div(1,a.fps),1.8):a.dist;a.dist=\n.00001<Math.abs(a.ph3)?Math.max(a.dist-div(8,a.fps),-1):a.dist;a.dist_=a.dist_*a.dec_med+a.dist*(1-a.dec_med);a.q11=a.dist_;a.open=.00001<Math.abs(a.ph2a)?a.open*a.dec_slow:4;a.q16=4-a.open+div(a.q27,16)+div(a.q15,2);a.q17=above(a.q27,16);a.trel1+=div(1,a.fps)*(1+2*a.q15*(mod(a.q27,2)-.5));a.trel2+=div(1,a.fps)*(1+2*a.q15*(mod(a.q27,4)-1.5));a.px_=div(Math.sin(a.trel1),5);a.py_=div(Math.cos(a.trel2),5)-.1;a.px__=a.dec_slow*a.px__+a.px_*(1-a.dec_slow);a.py__=a.dec_slow*a.py__+a.py_*(1-a.dec_slow);\na.q5=a.px_+.1*Math.sin(a.time);a.q6=a.py_+.1*Math.cos(2*a.time);a.q9=div(a.px__*sqrt(a.dist_),2);a.q10=div(a.py__*sqrt(a.dist_),2);a.trig=equal(a.q27,31)*a.q24;a.crumple=.00001<Math.abs(a.trig)?rand(20)-5:a.crumple;a.mwidth=.00001<Math.abs(a.trig)?.2+div(rand(20),15):a.mwidth;a.mshape=.00001<Math.abs(a.trig)?div(rand(20),40):a.mshape;a.q1=a.crumple;a.q2=a.mwidth;a.q3=.1;a.q4=a.mshape;a.monitor=a.trig;","pixel_eqs_str":"","init_eqs_eel":"crumple = 0; \nmwidth = .5;\nmshape = 0;\ndist = 4;\ndist_ = 4;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\ndec_b = pow (0.9, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %32;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\nq27 = index +1;\nq28 = index2;\n\nlight = light * dec_med + (1-dec_med)*q22;\nlight = min(light,3);\nq15 = light/3;\n\nph1 = below(q27,8);\nph2 = above(q27,8)*below(q27,16);\nph2a = above(q27,29); // open mouth\nph3 = above(q27,30);\n\nblend = above(q27,30)+below(q27,2);\nblend_ = dec_b*blend_ + (1-dec_b)*blend;\nq19 = blend_;\nq18 = 1-blend_;\ndist = if(ph1,3,dist);\ndist = if(ph2,max(dist -1/fps,1.8),dist);\ndist = if(ph3,max(dist - 8/fps,-1),dist);\ndist_ = dist_ * dec_med + dist*(1-dec_med);\n\nq11 = dist_;//q11 = 2;\nopen = if(ph2a,open*dec_slow,4);\nq16 = 4-open+q27/16+q15/2;\nq17 = above(q27,16); //drool\n\ntrel1 = trel1 + 1/fps * (1 + q15*2*((q27%2)-.5));\ntrel2 = trel2 + 1/fps * (1 + q15*2*((q27%4)-1.5));\npx_ = sin(trel1)/5;\npy_ = cos(trel2)/5-.1;\n\npx__ = dec_slow*px__ + px_ * (1-dec_slow);\npy__ = dec_slow*py__ + py_ * (1-dec_slow);\n\nq5 = px_+.1*sin(time); \nq6 = py_+.1*cos(2*time); //light pos\n\nq9 = px__*sqrt(dist_)/2;  //head pos\nq10 = py__*sqrt(dist_)/2;\n\ntrig = equal(q27,31)*q24;\ncrumple = if(trig,rand(20)-5,crumple);\nmwidth =  if(trig,.2+rand(20)/15,mwidth);\nmshape =  if(trig, rand(20)/40,mshape);\n\nq1 = crumple;;\nq2 = mwidth;\nq3 = .1; //y-pos mouth\nq4 = mshape;\n\nmonitor = trig;","pixel_eqs_eel":"","warp":"float eyerad;\nvec3 xlat_mutablenoise2;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  eyerad = (0.02 + (0.01 * q22));\n  vec3 tmpvar_1;\n  tmpvar_1 = vec3((dot ((\n    (texture (sampler_blur1, fract(uv)).xyz * scale1)\n   + bias1), vec3(0.32, 0.49, 0.29)) * q1));\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((tmpvar_2 * 8.0) * tmpvar_1.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((tmpvar_4 * 8.0) * tmpvar_1.xy);\n  vec2 tmpvar_6;\n  tmpvar_6.x = dot ((texture (sampler_main, (uv + tmpvar_3)) - texture (sampler_main, (uv - tmpvar_3))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_6.y = dot ((texture (sampler_main, (uv + tmpvar_5)) - texture (sampler_main, (uv - tmpvar_5))), vec4(0.32, 0.49, 0.29, 0.0));\n  float tmpvar_7;\n  tmpvar_7 = abs((uv.x - 0.5));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (uv.y - 0.5);\n  vec2 x_9;\n  x_9 = (tmpvar_8 - vec2(0.1, -0.1));\n  float tmpvar_10;\n  tmpvar_10 = pow (clamp ((eyerad / \n    sqrt(dot (x_9, x_9))\n  ), 0.0, 1.0), 4.0);\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_8.y - q3);\n  tmpvar_11 = pow (clamp ((0.05 / \n    sqrt((((tmpvar_7 * tmpvar_7) * q2) + ((\n      ((0.05 / (0.01 + (q4 * tmpvar_7))) * (1.0 + q15))\n     / q16) * (tmpvar_12 * tmpvar_12))))\n  ), 0.0, 1.0), 3.0);\n  float tmpvar_13;\n  tmpvar_13 = max (tmpvar_10, tmpvar_11);\n  vec2 x_14;\n  x_14 = (tmpvar_8 - vec2(0.1, -0.1));\n  vec2 tmpvar_15;\n  tmpvar_15.x = 0.0;\n  tmpvar_15.y = (q10 - -0.1);\n  vec2 x_16;\n  x_16 = ((tmpvar_8 - vec2(0.1, -0.1)) - (0.02 * tmpvar_15));\n  xlat_mutableuv1 = (tmpvar_8 + (vec2((tmpvar_10 + \n    (tmpvar_11 * q16)\n  )) / 4.0));\n  xlat_mutableuv6 = (xlat_mutableuv1 + (xlat_mutableuv1 * (2.0 * texture (sampler_noise_hq, \n    ((xlat_mutableuv1 / 4.0) + (time / 400.0))\n  ).xy)));\n  xlat_mutablenoise2 = (vec3(((\n    (abs((cos(\n      (xlat_mutableuv6.y * 18.0)\n    ) + sin(\n      (xlat_mutableuv6.x * 18.0)\n    ))) / 6.0)\n   * \n    (1.0 + abs((q1 / 16.0)))\n  ) + 0.2)) * vec3(1.0, 0.9, 0.8));\n  vec3 tmpvar_17;\n  tmpvar_17 = mix (mix (xlat_mutablenoise2, vec3((\n    (sin(((tmpvar_7 * 142.0) + (1.5 * \n      sign((tmpvar_8.y - q3))\n    ))) - ((q16 * 0.008) / abs((tmpvar_8.y - q3))))\n   * tmpvar_11)), vec3(tmpvar_11)), ((\n    ((clamp (cos(\n      ((1.4 / eyerad) * sqrt(dot (x_14, x_14)))\n    ), 0.0, 1.0) / 3.0) * roam_sin)\n   * 2.0).xyz - float(\n    (sqrt(dot (x_16, x_16)) < (0.01 * q15))\n  )), vec3(tmpvar_10));\n  xlat_mutablenoise2 = tmpvar_17;\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = (((\n    (texture (sampler_main, fract((uv + (tmpvar_6 * 0.003)))).xyz + vec3(-((sqrt(\n      dot (tmpvar_6, tmpvar_6)\n    ) * 0.1))))\n   * \n    (0.99 - (tmpvar_13 / 2.0))\n  ) - 0.01) + (tmpvar_17 * (0.045 + tmpvar_13)));\n  ret = tmpvar_18.xyz;\n }","comp":"vec2 hor;\nvec2 ver;\nvec3 xlat_mutablebeast;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.y = 0.0;\n  tmpvar_1.x = texsize.z;\n  hor = (tmpvar_1 * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.0;\n  tmpvar_2.y = texsize.w;\n  ver = (tmpvar_2 * 4.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = q5;\n  tmpvar_3.y = q6;\n  vec3 ret_4;\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_5;\n  vec2 uv_in_6;\n  uv_in_6.y = xlat_mutableuv1.y;\n  uv_in_6.x = (xlat_mutableuv1.x + q9);\n  vec2 tmpvar_7;\n  tmpvar_7.x = 0.0;\n  tmpvar_7.y = (q10 + q3);\n  float tmpvar_8;\n  tmpvar_8 = (-1.0 / q11);\n  float tmpvar_9;\n  tmpvar_9 = (1.0/(q11));\n  float tmpvar_10;\n  tmpvar_10 = (4.0 * q9);\n  tmpvar_5 = (((\n    (uv_in_6 * q11)\n   * \n    ((0.4 + clamp (abs(uv_in_6.x), tmpvar_8, tmpvar_9)) + (tmpvar_10 * uv_in_6.x))\n  ) - 0.5) + tmpvar_7);\n  float x_11;\n  x_11 = (xlat_mutableuv1.x + q9);\n  vec2 tmpvar_12;\n  tmpvar_12.x = q9;\n  tmpvar_12.y = q10;\n  vec2 x_13;\n  x_13 = (xlat_mutableuv1 + tmpvar_12);\n  vec3 tmpvar_14;\n  tmpvar_14 = (texture (sampler_main, tmpvar_5) * clamp ((\n    (0.2 / q11)\n   / \n    sqrt((x_11 * x_11))\n  ), 0.0, 1.0)).xyz;\n  vec2 uv_in_15;\n  uv_in_15.y = xlat_mutableuv1.y;\n  uv_in_15.x = (xlat_mutableuv1.x + (q9 * 0.96));\n  vec2 tmpvar_16;\n  tmpvar_16.x = 0.0;\n  tmpvar_16.y = ((q10 * 0.96) + q3);\n  vec2 tmpvar_17;\n  tmpvar_17.x = dot ((texture (sampler_main, (tmpvar_5 + hor)) - texture (sampler_main, (tmpvar_5 - hor))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_17.y = dot ((texture (sampler_main, (tmpvar_5 + ver)) - texture (sampler_main, (tmpvar_5 - ver))), vec4(0.32, 0.49, 0.29, 0.0));\n  vec2 x_18;\n  x_18 = ((xlat_mutableuv1 + tmpvar_3) + (2.0 * tmpvar_17));\n  float tmpvar_19;\n  tmpvar_19 = (2.0 * clamp ((0.05 / \n    sqrt(dot (x_18, x_18))\n  ), 0.0, 1.0));\n  vec2 x_20;\n  x_20 = (xlat_mutableuv1 + tmpvar_3);\n  float tmpvar_21;\n  tmpvar_21 = clamp (((\n    ((1.0 + q15) * 0.5)\n   / q11) / sqrt(\n    dot (x_20, x_20)\n  )), 0.0, 1.0);\n  xlat_mutablebeast = (tmpvar_14 * ((tmpvar_21 * tmpvar_21) * 0.7));\n  xlat_mutablebeast = (xlat_mutablebeast + ((\n    (dot (xlat_mutablebeast, vec3(0.32, 0.49, 0.29)) * tmpvar_19)\n   * tmpvar_19) * (tmpvar_21 * tmpvar_21)));\n  ret_4 = (xlat_mutablebeast + ((\n    ((texture (sampler_main, ((\n      (((uv_in_15 * 1.1) * q11) * ((0.4 + clamp (\n        abs(uv_in_15.x)\n      , tmpvar_8, tmpvar_9)) + (tmpvar_10 * uv_in_15.x)))\n     - 0.5) + tmpvar_16)) * clamp ((1.0 - \n      (8.0 * dot (tmpvar_14, vec3(0.32, 0.49, 0.29)))\n    ), 0.0, 1.0)) * clamp (((0.05 / q11) / sqrt(\n      dot (x_13, x_13)\n    )), 0.0, 1.0))\n   / 2.0).xyz * tmpvar_21));\n  vec3 tmpvar_22;\n  tmpvar_22.yz = vec2(0.0, 0.0);\n  tmpvar_22.x = q22;\n  vec3 tmpvar_23;\n  tmpvar_23 = mix (clamp ((tmpvar_21 * tmpvar_22), 0.0, 1.0), ret_4, vec3(q18));\n  ret_4 = tmpvar_23;\n  vec4 tmpvar_24;\n  tmpvar_24.w = 1.0;\n  tmpvar_24.xyz = tmpvar_23;\n  ret = tmpvar_24.xyz;\n }","warp_hlsl":"sampler sampler_sampler_pw_noise_lq;\nfloat hole;\nfloat2 dz,uv1,uv2,uv3,uv4,uv6, mod;\nfloat3 blur, blur2, noise2, noise3;\nstatic float2 eyepos = float2(.1,-.1);\nstatic float eyerad = .02+.01*q22;\nstatic float mouth_y = q3;\nstatic float direct = 1;\nstatic float crumple = q1;\nstatic float mwidth = q2;\nstatic float mopen = q16;\nstatic float mshape= q4;\nstatic float dist = q11;\nshader_body {\n\nfloat3 blur = lum(GetBlur1(frac(uv)))*crumple;\nfloat2 hor = float2 (texsize.z,0)*8*blur;\nfloat2 ver = float2 (0,texsize.w)*8*blur;\nfloat dx = lum(tex2D(sampler_main,uv+hor) - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) - tex2D(sampler_main,uv-ver));\nfloat2 dz = float2 (dx + (uv.x-.5)*.0,dy+.0);\n\nuv1 = float2 (abs(uv.x-.5),uv.y-.5);\n\nfloat teeth = sin((uv1.x)*142+1.5*sign(uv1.y-mouth_y))-mopen*.008/abs(uv1.y-mouth_y);\n\nfloat eyes = saturate(eyerad/length(uv1-eyepos));\neyes = pow(eyes,4);\nfloat mouth = saturate(.05/sqrt(uv1.x*uv1.x*mwidth + (.05/(.01+mshape*uv1.x))*(1+q15)/mopen*pow(uv1.y-mouth_y,2)));\nmouth = pow(mouth,3);\nmod = eyes + mouth*mopen;\nhole = pow(max(eyes,mouth),1);\n\nfloat3 eyeball = saturate(cos(1.4/eyerad*length(uv1-eyepos)))/3*(2-direct)*roam_sin*2;\neyeball = eyeball - (length(uv1-eyepos-.02*float2(q9*0,q10-eyepos.y)) < .01*q15);\n\nnoise3 = lum(tex2D(sampler_noise_lq,uv1))+.5;\nuv1 += mod/4;\nteeth *= (mouth);\n\nfloat2 ang2= tex2D (sampler_noise_hq,uv1/4+time/400).xy;\n//uv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));\nuv6 = uv1 + .5*(uv1*4*ang2);\nfloat mus = cos(uv6.y*18)+(sin(uv6.x*18));\nnoise2 = abs(mus)/6*(1+abs(crumple/16))+.2;\nnoise2 *= float3 (1,.9,.8);\nnoise2 = lerp(noise2,teeth,mouth);\nnoise2 = lerp(noise2,eyeball,eyes);\nblur2 = GetBlur2(frac(noise3));\n\nfloat3 crisp = GetPixel(frac(uv+dz*.003));\n//crisp = max(crisp, .8*float3(1,1,1)*GetPixel(uv*1+.3)*saturate(1-2*lum(GetPixel(uv+.31))));\ncrisp += -0.0*blur2 - length(dz)*.1;\n\n\nret = crisp * (.99-hole/2*direct) -  .01 + noise2*(.045+hole*direct)  ;\n//ret = hole;\n//ret = 1-eyes;\n//ret = tex2D (sampler_shub1,uv1);\n}","comp_hlsl":"float dx, dy, k1;\nfloat2 uv1, uv2, uv3, uv4, tmp;\nfloat3 noise, ret1, ret2, beast, bcopy;\n\nstatic float2 hor = float2 (texsize.z,0)*4;\nstatic float2 ver = float2 (0,texsize.w)*4;\nstatic float2 lightpos = float2(q5,q6);\nstatic float vis = q18;\nstatic float dist = q11;\nstatic float mouth_y = q3;\n\nfloat2 rs (float2 uv_in) {\nuv_in.x += q9;\nreturn  uv_in*dist*(.4+clamp(abs(uv_in.x),-1/dist,1/dist)+4*q9*uv_in.x)-.5+float2(0,q10+mouth_y);}\n\nfloat2 rs2 (float2 uv_in) {\nuv_in.x += q9*.96 ;\ntmp = uv_in*1.1*dist*(.4+clamp(abs(uv_in.x),-1/dist,1/dist)+4*q9*uv_in.x)-.5+float2(0,q10*.96+mouth_y);\nreturn tmp;}\n\n\nfloat2 dz (float2 uv_in) {\n  dx = lum(tex2D(sampler_main,uv_in+hor) - tex2D(sampler_main,uv_in-hor));\n  dy = lum(tex2D(sampler_main,uv_in+ver) - tex2D(sampler_main,uv_in-ver));\n  return float2 (dx+0*(lightpos.x),dy);}\n\n\nshader_body {\nfloat2 uv4 = uv-.5+float2(q9,q10);\n\n\nfloat water = tex2D (sampler_noise_mq,uv/2+time/5);\nuv1 = (uv-.5)*aspect.xy + water *.0;\nuv3 = rs(uv1);\nfloat rad1 = saturate(.2/dist/length(uv1.x+q9));\nfloat rad2 = saturate(.05/dist/length(uv1+float2(q9,q10)));\nbeast = tex2D (sampler_main, uv3)*rad1;\nbcopy = tex2D (sampler_main, rs2(uv1))*saturate(1-8*lum(beast))*rad2/2;;\n\n\nfloat light = 2*saturate(.05/length(uv1+lightpos+2*dz(uv3)));\nfloat flatlight = saturate ((1+q15)*.5/dist/length(uv1+lightpos));\n\n\nfloat2 uv5 = normalize(uv1+float2(.1,.1)+lightpos)*1+lightpos;\nfloat3 ray = saturate(GetPixel(rs(uv5)));\n\n//flatlight = 1;\n\n\nbeast *= pow(flatlight,2)*.7;\nbeast += lum(beast)*light*light *pow(flatlight,2) ;    \n//beast = lerp(beast,.2*float3(.5,.5,1)*flatlight,4*abs(uv1.x));\n//beast = (q22/4+2*(.5-q22/4)*beast) *flatlight;\nret = (beast+bcopy*flatlight);\nret = lerp(saturate(flatlight*float3(q22,0,0)),ret, vis);\n\n//ret = tex2D (sampler_main,((uv-.5)*aspect.xy+.5));\n//ret = rad1;\n}"}