{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0,"echo_zoom":0,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0,"wave_scale":0,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":1,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":31,"mv_y":24,"mv_l":0,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0,"y":0.13,"rad":0.591236,"ang":0.628319,"tex_ang":0.628319,"tex_zoom":0.591233,"r2":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"x":0,"y":0,"rad":0,"tex_zoom":0,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"textured":1,"x":0,"y":0,"rad":1,"tex_zoom":0,"r":0,"a":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5+.3*cos(time/78);\ny = .5+.3*sin(time/78);\n\ntex_zoom = .2 / (sin(time/31)+1.1)\n\n","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/78);\ny = .5+.3*sin(time/78);\n\ntex_zoom = .2 / (sin(time/31)+1.1)\n\n"},{"baseVals":{"sides":63,"additive":1,"textured":1,"x":0,"y":0,"rad":0,"tex_zoom":0,"r":0,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"enabled":1,"samples":187,"sep":9,"usedots":1,"additive":1,"scaling":0,"smoothing":0,"r":0,"b":0},"init_eqs_str":"a.t1=0;a.t2=0;a.k1=0;a.k2=0;a.t3=0;","frame_eqs_str":"a.t1=1;a.t3=Math.sin(div(a.time,2));a.t3=Math.max(a.t3,0);a.t3=4.9*Math.min(a.t3,.2);","point_eqs_str":"a.t1=mod(67*a.t1+37,4096);a.t2=div(a.t1,4096);a.k1=mod(100*a.sample+2*a.time,2);a.k2=mod(100*a.sample+5*a.time,2);a.x=.49+.48*Math.sin(31*a.sample+div(a.t2*a.time,27));a.y=.2*a.t2+.2*Math.sin(131*a.sample+div(a.t2*a.time,7));a.a=1;a.r=.07;","init_eqs_eel":"","frame_eqs_eel":"t1 = 1;\nt3 = sin(time/2);\nt3 = max (t3,0);\nt3 = 4.9*min(t3,.2);\n","point_eqs_eel":"t1 = (t1*67+37)%4096;\nt2 = t1/4096;\n\nk1 = (100*sample+time*2)%2;\nk2 = (100*sample+time*5)%2;\n\nx = .49 + .48*sin(sample*31+t2*time/27);\ny =  0 + .2*t2 + .2*sin(sample*131+t2*time/7);\n\n\n\na = 1;\nr = .07;\n "},{"baseVals":{"enabled":1,"scaling":0,"smoothing":0,"a":0},"init_eqs_str":"a.t1=0;a.px=0;a.t2=0;a.py=0;a.k1=0;","frame_eqs_str":"a.t1=1;a.t2=7;","point_eqs_str":"a.r=.31;a.b=0;a.g=0;a.a=1;a.t1=mod(67*a.t1+37,4096);a.px=div(a.t1-2047,4096);a.t2=mod(67*a.t2+37,4096);a.py=div(a.t2-0,4096);a.k1=mod(100*a.sample,8);a.y=div(a.py,3.5)+0;a.a=below(a.y,.2);a.x=.5+.4*Math.sin(26*a.sample);","init_eqs_eel":"","frame_eqs_eel":"t1 = 1; t2 = 7;","point_eqs_eel":"r = .31;\nb = 0;\ng = .0;\n\na = 1;\n//g = 1;b=1;\n\nt1 = (t1*67 + 37)%4096;\npx = (t1-2047)/4096;\n\nt2 = (t2*67 + 37)%4096;\npy = (t2-0)/4096;\n\n\nk1 = (sample*100)%8;\n\ny = py/3.5 + .0;\na = below(y,.2);\n\nx = .5 + .4*sin(sample*26)  ;\n"},{"baseVals":{"enabled":1,"samples":100,"scaling":0,"smoothing":0,"a":0},"init_eqs_str":"a.t5=0;a.t1=0;a.bird=0;a.y0=0;a.dx=0;a.t3=0;a.ground=0;a.k1=0;a.t6=0;a.f1=0;a.trig=0;a.dy=0;a.t2=0;a.t4=0;","frame_eqs_str":"a.t1=Math.sin(3*a.time);a.t2=Math.cos(3*a.time);a.t3=Math.sin(div(a.time,3));a.t4=Math.cos(div(a.time,3));a.t5=div(Math.cos(div(a.time,4)),2);a.ground=below(a.t5,-.9);a.trig=below(rand(100),1);a.trig=a.trig*bnot(a.ground)*bnot(a.bird);a.bird*=bnot(a.ground);a.bird=bnot(a.bird)*a.trig;a.t6=a.bird;","point_eqs_str":"a.r=1;a.g=0;a.b=0;a.k1=below(a.sample,.5);a.dx=.01*a.k1*Math.sin(50*a.sample);a.f1=sqr(a.dx);a.dy=40*a.f1*a.t1+div(a.t2,150);a.dy+=.002*(1-a.k1)*Math.sin(50*a.sample);a.x=a.dx+.5+.1*a.t3;a.dy+=.2*a.dx*a.t4;a.y0=a.t5;a.y=a.dy+.5+div(a.y0,8);a.a=.04;","init_eqs_eel":"","frame_eqs_eel":"\nt1 = sin(time*3);\nt2 = cos(time*3);\n\nt3 = sin(time/3);\nt4 = cos(time/3);\n\nt5 = cos(time/4)/2;\n\n//give him a break\n//bird = 1;\n\nground = below(t5,-.9);\ntrig = below(rand(100),1);\ntrig = trig * bnot(ground) * bnot(bird);\nbird = bird * bnot(ground);\n\nbird = bnot(bird)*trig;\n\nt6 = bird;","point_eqs_eel":"\nr = 1; g = 0; b = 0;\nk1 = below(sample,.5);\n\ndx = .01*k1*sin(sample*50);\n\n\nf1 = sqr(dx);\n\ndy =  40*f1*t1 + t2/150;\ndy = dy+ (1-k1) * .002*sin(sample*50);\n\nx = dx + .5 + .1*t3;\n\ndy = dy + .2*dx*t4;\n\ny0 = t5;\ny = dy+ .5 + y0/8;\n\na = .04;\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index=0;a.q22=0;a.q21=0;a.q15=0;a.q29=0;a.q1=0;a.dec_med=0;a.q5=0;a.movx=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.sb=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.p3=0;a.q3=0;a.t0=0;a.q32=0;a.q28=0;a.q30=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.8,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),5);a.monitor=a.index2;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;\na.q26=a.bass+a.mid+a.treb;a.sb=a.sb*a.dec_med+a.q21*(1-a.dec_med);a.q29=a.sb;a.k1=a.is_beat*bnot(a.index)*bnot(a.index2);a.p1=a.index2-2;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.q5=Math.cos(div(3.14*a.p3,2));a.rott+=div(.09,a.fps)*a.p3;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.movx+=div(.06,a.fps);a.q28=a.movx;a.q15=.15*(1+Math.sin(div(a.time,23)));a.q29=4*(.5+Math.sin(div(a.time,17)));a.q30=div(5,1.2+Math.sin(div(a.time,50)));a.q31=\ndiv(Math.sin(div(a.time,38)),3);a.q32=2+Math.sin(div(a.time,18));a.warp=.06;a.zoom=.998;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%5;\nmonitor = index2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\nsb = sb*dec_med + q21*(1-dec_med);\nq29 = sb;\n\nk1 =  is_beat*bnot(index)*bnot(index2);\np1 =  (index2-2);\n\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nq5 = cos(p3*3.14/2);\n\nrott =  rott +  .003*30/fps*p3;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nmovx = movx + .002*30/fps;\nq28 = movx;\n\nq15 = (1+sin(time/23))*.15;\nq29 = 4*(.5+sin(time/17));\nq30 = 5/(1.2+sin(time/50)); \nq31 = sin(time/38)/3;\nq32 = 2+sin(time/18);\n\nwarp = .06;\nzoom = .998;","pixel_eqs_eel":"","warp":" shader_body { \n  float k1_1;\n  float ky_2;\n  vec2 uv3_3;\n  uv3_3 = (100.0 * (uv - vec2(0.5, 0.5)));\n  float tmpvar_4;\n  tmpvar_4 = dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0));\n  ky_2 = clamp (((\n    (-(uv3_3.y) / 100.0)\n   + \n    ((tmpvar_4 / 4.0) * cos((16.0 * tmpvar_4)))\n  ) + 0.23), 0.0, 1.0);\n  k1_1 = (uv3_3.x - (sign(uv3_3.x) * 24.0));\n  k1_1 = (k1_1 - (sign(k1_1) * 9.0));\n  k1_1 = (k1_1 + ((\n    (k1_1 - (12.0 * sign(k1_1)))\n   * ky_2) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((\n    (k1_1 - (24.0 * sign(k1_1)))\n   * ky_2) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((\n    (k1_1 - (36.0 * sign(k1_1)))\n   * ky_2) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((\n    (k1_1 - (48.0 * sign(k1_1)))\n   * ky_2) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((\n    (k1_1 - (60.0 * sign(k1_1)))\n   * ky_2) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  float tmpvar_5;\n  tmpvar_5 = clamp (k1_1, -1.6, 1.6);\n  k1_1 = tmpvar_5;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ((texture (sampler_main, fract(uv)).xyz * 0.5) + (vec3(0.1, 0.0, 0.0) * cos(tmpvar_5)));\n  ret = tmpvar_6.xyz;\n }","comp":"float xlat_mutablehoriz;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv5;\nvec3 xlat_mutablewater;\n shader_body { \n  vec2 uv_1;\n  vec3 clouds_2;\n  vec3 ret_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv_1.x = uv_1.x;\n  float tmpvar_4;\n  tmpvar_4 = clamp ((1.0/((uv_1.y - 0.1))), 0.0, 200.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((uv_1.x * tmpvar_4) + time);\n  tmpvar_5.y = tmpvar_4;\n  xlat_mutablers = (tmpvar_5 / 44.0);\n  xlat_mutablewater = (vec3((dot (texture (sampler_noise_lq, xlat_mutablers), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)) * clamp ((16.0 * \n    (uv_1.y - 0.1)\n  ), 0.0, 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (xlat_mutablewater / 16.0).x;\n  vec2 tmpvar_7;\n  tmpvar_7.x = (uv_1.x + q31);\n  tmpvar_7.y = (abs((uv_1.y - 0.1)) - abs((q31 / 2.0)));\n  float tmpvar_8;\n  tmpvar_8 = clamp ((1.0/(abs(\n    (uv_1.y - 0.1)\n  ))), 0.0, 200.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (tmpvar_7.x * tmpvar_8);\n  tmpvar_9.y = tmpvar_8;\n  xlat_mutablers = ((tmpvar_9 / 16.0) + tmpvar_6);\n  clouds_2 = (vec3(dot (texture (sampler_noise_hq, xlat_mutablers), vec4(0.32, 0.49, 0.29, 0.0))) * ((\n    clamp ((0.6 - (2.0 * (uv_1.y - 0.1))), 0.0, 1.0)\n   * 0.5) / (0.04 + \n    sqrt(dot (tmpvar_7, tmpvar_7))\n  )));\n  vec3 tmpvar_10;\n  tmpvar_10.xy = vec2(1.0, 0.6);\n  tmpvar_10.z = (q32 / tmpvar_8);\n  clouds_2 = (clouds_2 * tmpvar_10);\n  vec2 tmpvar_11;\n  tmpvar_11.y = 0.0;\n  tmpvar_11.x = (q28 / 4.0);\n  xlat_mutableuv5 = ((uv_1 + tmpvar_11) + tmpvar_6);\n  vec2 tmpvar_12;\n  tmpvar_12.x = (xlat_mutableuv5.x * 8.0);\n  tmpvar_12.y = (xlat_mutableuv5.y * 4.0);\n  xlat_mutablehoriz = ((abs(\n    (xlat_mutableuv5.y - 0.1)\n  ) * (1.0 + texture (sampler_noise_lq, tmpvar_12).x)) * (1.0 + texture (sampler_noise_hq, vec2((xlat_mutableuv5.x / 4.0))).x));\n  float tmpvar_13;\n  tmpvar_13 = clamp ((1.0 - (q30 * xlat_mutablehoriz)), 0.0, 1.0);\n  xlat_mutablehoriz = tmpvar_13;\n  xlat_mutableuv2.y = uv_1.y;\n  xlat_mutableuv2.x = (uv_1.x + 0.65);\n  xlat_mutableuv2 = (((1.12 * xlat_mutableuv2) - 0.1) - 0.4);\n  vec2 tmpvar_14;\n  tmpvar_14 = (q28 * vec2(1.0, 0.0));\n  xlat_mutableret1 = texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz;\n  xlat_mutableuv2.y = uv_1.y;\n  xlat_mutableuv2.x = (uv_1.x + 1.3);\n  xlat_mutableuv2 = (((0.92 * xlat_mutableuv2) - 0.1) - 0.4);\n  xlat_mutableret1 = (xlat_mutableret1 + texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz);\n  xlat_mutableuv2.y = uv_1.y;\n  xlat_mutableuv2.x = (uv_1.x + 1.95);\n  xlat_mutableuv2 = (((0.72 * xlat_mutableuv2) - 0.1) - 0.4);\n  xlat_mutableret1 = (xlat_mutableret1 + texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz);\n  ret_3 = (((\n    ((0.1 * (0.5 + xlat_mutablewater)) + (0.2 / q30))\n   * vec3(0.0, 0.5, 0.6)) + clamp (\n    (clouds_2 * (1.0 - (4.0 * tmpvar_13)))\n  , 0.0, 1.0)) + (vec3(tmpvar_13) * 0.06));\n  ret_3 = (ret_3 * clamp ((1.0 - \n    (xlat_mutableret1.x * 8.0)\n  ), 0.0, 1.0));\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_3;\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"float3 ret1, tree;\nfloat mask1;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_hq.zw * 0.05;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);\n\nfloat2 uv3 = uv1;\nfloat dist = 100 ;\n\nuv3 = dist * uv1;\n\nfloat zu = lum(tex2D (sampler_noise_lq,uv)) ;\nfloat ky = saturate(-uv3.y/100+zu/4*cos(16*zu)+.23);\n\nfloat k1 = uv3.x;\n\nk1 = k1 - sign (k1)*24; //Verdoppelung\nk1 = k1 - sign (k1)*9; //Verdoppelung\n\nint n = 1 ;\nfloat delta = .1;\nwhile (n <= 5) \n{\n  k1 += (k1-12*n*sign(k1))*ky*ky;\n  //Mult. mit n steuert \"Breitenwuchs\"\n  ky = saturate (ky - delta);\n  //delta ist vertikaler Verzweig. abstand\n  n++; \n}\n\nk1 = clamp(k1,-1.6,1.6);\n\ntree = float3 (.1,0,0) * (cos(k1));\n\n\nret = GetPixel(frac(uv))*.5 +tree;\n\n}","comp_hlsl":"float3 ret1, neu, neu2, glow, sky, water;\nfloat2 uv1,uv2,uv3,uv4,uv5,rs;\nfloat y0, k,m,n,zoom,dist,dist2,inten,mask,z1,z2,horiz;\nfloat2x2 dir;\nint i, anz;\n\nshader_body\n{\ny0 = .1;\nuv -= 0.5;\nuv *= aspect.xy;    \nuv.x = uv.x / (1+0*y0*uv.y); //Perspektive\nret1 = 0; anz = 3; n = 1; \n\n//Wasser\nz1 = clamp(1/(uv.y-y0),-0,200);\nrs = float2(uv.x *z1+ time/1 , z1)/44;\nwater = lum(tex2D(sampler_noise_lq,rs))-.5;\nwater *= saturate(16*(uv.y - y0));\nfloat refl = (water)/16;\n\n//Wolken\nuv4 = float2 (uv.x+q31,abs(uv.y-y0)-abs(q31/2)); //pos. Sonne\nz2 = clamp(1/(abs(uv.y-y0)),-0,200);\nuv4.y += refl*0;\nrs = float2(uv4.x * z2, z2)/16 +refl;\nfloat3 clouds = lum(tex2D (sampler_noise_hq,rs+.0*time));\nclouds *= saturate(.6-2*(uv.y-y0)) * 0.5/(.04+length(uv4)) ;\nclouds *= float3 (1,.6, q32/z2);\n\n//Berge\nuv5 = uv+ float2(q28/4,0) + refl;\nhoriz = abs(uv5.y-y0)\n*(1+tex2D (sampler_noise_lq,float2(uv5.x*8,uv5.y*4)).r)\n*(1+tex2D (sampler_noise_hq,uv5.x/4).x);\nhoriz = saturate(1-q30*horiz);\n\nfor (n=1;n<=anz;n++) {\n    dist = .8-.4*frac(1.0*n/anz-.2); \n\n    uv2.y = uv.y;\n    uv2.x = uv.x + n*.65;\n    uv2 = 1.5*dist*(uv2)-y0-.4; //Blickpunkt vert.\n\n    uv3 = frac(uv2+q28*float2(1,0.0)) ;\n    neu = tex2D (sampler_main, uv3);\n    ret1 = ret1 + neu;\n//n++;\n}\n\n\nret = (.1*(.5+water) + .2/q30) *float3 (0,.5,.6)\n+ saturate(clouds*(1-4*horiz)) \n+ horiz*float3(1,1,1)*.06;\nret *= saturate(1- ret1.r*8) ;\n}"}