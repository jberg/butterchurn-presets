{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.95,"echo_zoom":0.9996,"wave_mode":1,"wrap":0,"wave_a":3.072644,"wave_scale":1.285746,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.5*Math.sin(1.13*a.time);a.wave_g+=.5*Math.sin(1.23*a.time);a.wave_b+=.5*Math.sin(1.33*a.time);","pixel_eqs_str":"a.zoom+=.05*(Math.sin(6*a.ang)+.3*Math.sin(Math.sin(2*a.time*Math.sin(a.time)*a.rad))-.1*Math.cos(a.rad));a.rot+=.5*Math.sin(.5-a.rad)*Math.cos(.02*(.5-a.rad)+a.time);a.sx+=.01*(.99-a.rad)*Math.sin(.733*a.time)*below(Math.sin(a.time),0);a.sy+=.01*(.99-a.rad)*Math.cos(.953*a.time)*above(Math.sin(a.time),0);a.zoom-=.05*(1-a.rad)*below(a.rad,.5);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\nwave_g = wave_g + 0.5*sin(time*1.23);\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.05*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\nrot = rot + 0.5*sin(0.5-rad)*cos(0.02*(0.5-rad)+time);\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\nzoom = zoom - 0.05*(1-rad)*below(rad,0.5);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.03))).xyz - 0.004);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.03 + (0.94 * uv));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 0.7);\n  ret_2 = (texture (sampler_main, (uv_1 + (tmpvar_3 * vec2(3.5, 0.0)))).xyz * 3.0);\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \n    (tmpvar_3 * vec2(0.0, 3.5))\n  )).xyz * 3.0));\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \n    (tmpvar_3 * vec2(0.0, -3.5))\n  )).xyz * -2.0));\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \n    (tmpvar_3 * vec2(-3.5, 0.0))\n  )).xyz * -2.0));\n  ret_2 = (ret_2 / 2.0);\n  ret_2 = (ret_2 * (1.0 + (0.15 * \n    ((texture (sampler_noise_lq, (rand_frame.xy + (\n      (uv_1 * texsize.xy)\n     * texsize_noise_lq.zw))).xxx * 2.0) - 1.0)\n  )));\n  vec3 tmpvar_4;\n  tmpvar_4 = pow (ret_2, vec3(0.5, 0.8, 1.0));\n  ret_2 = tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = tmpvar_4;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.03;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    // darken over time\n    ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    uv = 0.03 + 0.94*uv;\n\n    float2 d = float2(1,1)*texsize.zw*0.7;\n    ret = 0;\n    ret += tex2D(sampler_main, uv + d*float2(  3.5, 0)).xyz*3;\n    ret += tex2D(sampler_main, uv + d*float2(  0, 3.5)).xyz*3;\n    ret += tex2D(sampler_main, uv + d*float2(  0,-3.5)).xyz*-2;\n    ret += tex2D(sampler_main, uv + d*float2( -3.5, 0)).xyz*-2;\n    ret /= 2;\n\n    ret *= 1 + 0.15*(tex2D(sampler_noise_lq, rand_frame.xy \n           + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);\n\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.8, 1.0));\n   \n    //ret.xyz *= 2; // a little bit of overbright\n}\n\n"}