{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":1,"echo_orient":1,"wave_thick":1,"wave_a":7.015,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.4,"warpanimspeed":5.996,"warpscale":1.331,"zoomexp":1.01,"zoom":0.99853,"rot":0.002,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.1,"wave_y":0.9,"ob_g":0.9,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.201,"ib_g":0.5,"ib_b":0.5,"ib_a":1,"mv_x":63.936,"mv_y":48,"mv_l":1,"mv_r":0.63,"mv_g":0.2,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beateven=0;a.xpos=0;a.yamptarg=0;a.ydir=0;a.meanbass_att=0;a.q6=0;a.q1=0;a.box=0;a.lastbeat=0;a.beatrate=0;a.mode=0;a.yaccel=0;a.peakbass_att=0;a.xamptarg=0;a.xamp=0;a.xspeed=0;a.bass_effect=0;a.beatcounter=0;a.q4=0;a.ypos=0;a.xaccel=0;a.volume=0;a.beat=0;a.q2=0;a.yamp=0;a.q7=0;a.xdir=0;a.yspeed=0;a.beatcounter=0;","frame_eqs_str":"a.ob_r=.21-.2*(.5*Math.sin(.701*a.time)+.3*Math.cos(.438*a.time));a.ob_g=.5-.46*Math.sin(1.724*a.time);a.ob_b=.65-.3*Math.cos(1.816*a.time);a.warp=0;a.ib_size=.025;a.ib_r+=.2*(.6*Math.sin(3.034*a.time)+.4*Math.cos(2.14*a.time));a.ib_g+=.5*(.6*Math.sin(3.147*a.time)+.4*Math.cos(2.015*a.time));a.ib_b-=.5*(.6*Math.sin(3.431*a.time)+.4*Math.cos(1.842*a.time));a.dx=a.dx+.001+Math.abs(.003*(.6*Math.sin(.234*a.time)+.4*Math.cos(.437*a.time)));a.dy+=Math.abs(.003*(.7*Math.sin(.213*\na.time)+.3*Math.cos(.315*a.time)));a.volume=.15*(a.bass+a.bass_att+a.treb+a.treb_att+a.mid+a.mid_att);a.xamptarg=.00001<Math.abs(equal(mod(a.frame+.5,15),0))?Math.min(.5*a.volume*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xaccel=a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*\nbelow(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;a.q2=a.xpos;a.yamptarg=.00001<Math.abs(equal(mod(a.frame+.5,15),0))?Math.min(.3*a.volume*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yaccel=a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=\n.001*a.yspeed;a.q4=a.ypos;a.bass_effect=Math.max(Math.max(a.bass,a.bass_att)-1.2,0);a.echo_zoom=1.32+.3*(.59*Math.sin(a.q4+.865*a.time)+.41*Math.cos(a.q2+1.192*a.time))+.05*a.bass_effect;a.volume=.15*(a.bass_att+a.bass+a.mid+a.mid_att);a.beatrate=.00001<Math.abs(equal(a.beatrate,0))?1:.00001<Math.abs(below(a.volume,.01))?1:a.beatrate;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,0))?a.time:a.lastbeat;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=.00001<Math.abs(above(a.bass_att,a.peakbass_att))?\na.bass_att:a.peakbass_att;a.beat=.00001<Math.abs(above(a.volume,.8))?.00001<Math.abs(below(a.peakbass_att-a.bass_att,.05*a.peakbass_att))?.00001<Math.abs(above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1)))?1:0:0:0;a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=.00001<Math.abs(equal(a.beat,0))?.00001<Math.abs(above(a.time-a.lastbeat,2*a.beatrate))?.95*a.peakbass_att:.995*a.peakbass_att:\na.bass_att;a.lastbeat=.00001<Math.abs(a.beat)?a.time:a.lastbeat;a.peakbass_att=Math.max(.00001<Math.abs(a.beat)?a.bass_att:a.peakbass_att,1.1*a.meanbass_att);a.beatcounter=.00001<Math.abs(above(a.beat,0))?a.beatcounter+1:a.beatcounter;a.beatcounter=.00001<Math.abs(above(a.beatcounter,7))?0:a.beatcounter;a.beateven=mod(a.beatcounter+.5,2);a.mode=.00001<Math.abs(a.beat)?mod(a.mode+(Math.floor(rand(3))+1)+.5,4):a.mode;a.echo_orient=a.mode;a.wave_a=.00001<Math.abs(a.beat)?1:0;a.wave_r=a.wave_r+.2*Math.sin(.7854*\na.time)-.2*a.beateven;a.wave_b=a.wave_b+.1*Math.sin(.8254*a.time)+.2*a.beateven;a.wave_g=a.wave_g+.1*Math.sin(.854*a.time)+.2*a.beateven;a.q6=a.beat;a.wave_mode=.00001<Math.abs(a.beateven)?7:0;a.mv_a=.00001<Math.abs(a.beat)?.00001<Math.abs(equal(a.beatcounter,6))?1:0:0;a.mv_r=.00001<Math.abs(a.mv_a)?Math.floor(rand(2)):0;a.mv_b=.00001<Math.abs(a.mv_a)?Math.floor(rand(2)):0;a.mv_g=.00001<Math.abs(a.mv_a)?Math.floor(rand(2)):0;","pixel_eqs_str":"a.box=.5+.8*(mod(2*a.x+.5,4)+mod(2*a.y+.5,2));a.q1=8.45+.3*(Math.sin(pow(a.x,3)+.177*a.time)-Math.cos(pow(a.y,3)+.223*a.time));a.q7=above(a.box,1);a.zoom=.00001<Math.abs(a.q7)?.1*a.q1+6*a.q6:a.zoom;a.rot=.00001<Math.abs(a.q7)?.63*Math.sin(.385*a.time+.12*Math.sin(.67*a.time)+.1*a.q4+.12*a.q2+50*a.q6):a.rot;a.cx-=.15*Math.sin(2*a.q4);a.cy+=.14*Math.sin(2*a.q2);a.sx=.00001<Math.abs(a.q7)?a.sx+18*a.q6:a.sx;a.sy=.00001<Math.abs(a.q7)?a.sy+18*a.q6:a.sy;","init_eqs_eel":"beatcounter =0;","frame_eqs_eel":"ob_r = 0.21 - 0.2*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\nob_g = 0.5 - 0.46*sin(time*1.724);\nob_b = 0.65 - 0.3*cos(time*1.816);\nwarp =0;\nib_size = 0.025;\nib_r = ib_r + 0.2*(0.6*sin(time*3.034)+0.4*cos(time*2.14));\nib_g = ib_g + 0.5*(0.6*sin(time*3.147)+0.4*cos(time*2.015));\nib_b = ib_b - 0.5*(0.6*sin(time*3.431)+0.4*cos(time*1.842));\ndx = dx +0.001+abs(0.003*(0.6*sin(time*0.234) + 0.4*cos(time*0.437)));\ndy = dy + abs(0.003*(0.7*sin(time*0.213) + 0.3*cos(time*0.315)));\nvolume = 0.15*(bass+bass_att+treb+treb_att+mid+mid_att);\nxamptarg = if(equal((frame+.5)%15,0),min(0.5*volume*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nq2 = xpos;\nyamptarg = if(equal((frame+.5)%15,0),min(0.3*volume*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nq4 = ypos;\nbass_effect = max(max(bass,bass_att)-1.2,0);\necho_zoom = 1.32 + 0.3*(0.59*sin(q4+time*0.865) + 0.41*cos(q2+time*1.192)) + 0.05*bass_effect;\nvolume = 0.15*(bass_att+bass+mid+mid_att);\nbeatrate = if(equal(beatrate,0),1,if(below(volume,0.01),1,beatrate));\nlastbeat = if(equal(lastbeat,0),time,lastbeat);\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = if(above(bass_att,peakbass_att),bass_att,peakbass_att);\nbeat = if(above(volume,0.8),if(below(peakbass_att - bass_att, 0.05*peakbass_att),if(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = if(equal(beat,0),if(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);\nlastbeat = if(beat,time,lastbeat);\npeakbass_att = max(if(beat,bass_att,peakbass_att),1.1*meanbass_att);\nbeatcounter = if(above(beat,0),beatcounter +1, beatcounter);\nbeatcounter = if(above(beatcounter,7), 0, beatcounter);\nbeateven = (beatcounter+.5)%2;\nmode = if(beat,(mode+(int(rand(3))+1)+.5)%4,mode);\necho_orient = mode;\nwave_a = if(beat,1,0);\nwave_r = wave_r + 0.2*sin(time*0.7854) - 0.2*beateven;\nwave_b = wave_b + 0.1*sin(time*0.8254) + 0.2*beateven;\nwave_g = wave_g + 0.1*sin(time*0.854) + 0.2*beateven;\nq6 = beat;\nwave_mode = if(beateven,7,0);\nmv_a = if(beat,if(equal(beatcounter,6),1,0),0);\nmv_r = if(mv_a,int(rand(2)),0);\nmv_b = if(mv_a,int(rand(2)),0);\nmv_g= if(mv_a,int(rand(2)),0);","pixel_eqs_eel":"box =0.5+0.8*((2*x+.5)%4+(2*y+.5)%2);\nq1 = 8.45+0.3*(sin(pow(x,3)+0.177*time)-cos(pow(y,3)+0.223*time));\nq7 = above(box,1);\nzoom = if(q7,(q1*.1) + q6*6 ,zoom);\nrot = if(q7,0.63*sin(0.385*time + 0.12*sin(0.67*time) + 0.1*q4 + 0.12*q2 +q6*50),rot);\ncx = cx - 0.15*sin(2*q4);\ncy = cy + 0.14*sin(2*q2);\nsx = if(q7,sx+q6*18,sx);\nsy = if(q7,sy+q6*18,sy);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 8.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 8.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 8.0));\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n  ).x * 0.02));\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  ).y * 0.02));\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ).z * 0.02));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.2) - 0.06));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\n  ret_2 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret_2 = (1.0 - pow (ret_2, vec3(0.5, 0.5, 0.5)));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 4;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\n\n    float2 my_uv =  lerp(uv_orig,uv,1) ;\n    float2 uv_x= my_uv + float2(dx.x,dy.x)*texsize.zw  *8;\n    float2 uv_y= my_uv + float2(dx.y,dy.y)*texsize.zw  *8;\n    float2 uv_z= my_uv + float2(dx.z,dy.z)*texsize.zw  *8;\n    ret.x = GetPixel(uv_x).x - (GetPixel(uv_x) - GetBlur3(uv_x)).x  * 0.02;\n    ret.y = GetPixel(uv_y).y - (GetPixel(uv_y) - GetBlur3(uv_y)).y  * 0.02;\n    ret.z = GetPixel(uv_z).z - (GetPixel(uv_z) - GetBlur3(uv_z)).z  * 0.02;\n\n//    ret += - 0.004  +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0;\nret -= ret.yzx*0.2 - 0.06;\n\n}","comp_hlsl":"shader_body\n{\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret *= lum(noise)*3; \nret = pow(ret,0.5);\nret=1-ret;\n}"}