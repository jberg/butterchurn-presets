{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.94,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.20321,"tex_zoom":1.22019,"a":0,"a2":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_str":"a.oldmd=0;a.md=0;a.mx=0;a.my=0;a.mx=.5;a.my=.4;a.md=3;","frame_eqs_str":"","point_eqs_str":"a.oldmd=a.md;a.md=mod(a.md+rand(4),4);a.md=.00001<Math.abs(equal(a.md,a.oldmd))?mod(a.md+1,4):a.md;a.mx+=.002*equal(a.md,0)*a.bass;a.mx-=.002*equal(a.md,1)*a.bass;a.my+=.002*equal(a.md,2)*a.treb;a.my-=.002*equal(a.md,3)*a.treb;a.mx=.00001<Math.abs(above(a.mx,.9))?.5:a.mx;a.mx=.00001<Math.abs(below(a.mx,.1))?.5:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.5:a.my;a.my=.00001<Math.abs(below(a.my,.1))?.5:a.my;a.x=a.mx;a.y=a.my;a.a=Math.cos(Math.tan(a.treb+.1*a.bass));","init_eqs_eel":"mx=.5;\nmy=.4;\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\nmd=(md+rand(4))%4;\nmd=if(equal(md,oldmd),(md+1)%4,md);\n\nmx=mx+(equal(md,0)*.002*bass);\nmx=mx-(equal(md,1)*.002*bass);\nmy=my+(equal(md,2)*.002*treb);\nmy=my-(equal(md,3)*.002*treb);\n\nmx=if(above(mx,.9),.5,mx);\nmx=if(below(mx,.1),.5,mx);\nmy=if(above(my,.9),.5,my);\nmy=if(below(my,.1),.5,my);\n\nx=mx;\ny=my;\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_str":"a.oldmd=0;a.md=0;a.mx=0;a.my=0;a.mx=.5;a.my=.4;a.md=3;","frame_eqs_str":"","point_eqs_str":"a.oldmd=a.md;a.md=mod(a.md+rand(4),4);a.md=.00001<Math.abs(equal(a.md,a.oldmd))?mod(a.md+1,4):a.md;a.mx+=.002*equal(a.md,0)*a.bass;a.mx-=.002*equal(a.md,1)*a.bass;a.my+=.002*equal(a.md,2)*a.treb;a.my-=.002*equal(a.md,3)*a.treb;a.mx=.00001<Math.abs(above(a.mx,.9))?.5:a.mx;a.mx=.00001<Math.abs(below(a.mx,.1))?.5:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.5:a.my;a.my=.00001<Math.abs(below(a.my,.1))?.5:a.my;a.x=a.mx;a.y=a.my;a.a=Math.cos(Math.tan(a.treb+.1*a.bass));","init_eqs_eel":"mx=.5;\nmy=.4;\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\nmd=(md+rand(4))%4;\nmd=if(equal(md,oldmd),(md+1)%4,md);\n\nmx=mx+(equal(md,0)*.002*bass);\nmx=mx-(equal(md,1)*.002*bass);\nmy=my+(equal(md,2)*.002*treb);\nmy=my-(equal(md,3)*.002*treb);\n\nmx=if(above(mx,.9),.5,mx);\nmx=if(below(mx,.1),.5,mx);\nmy=if(above(my,.9),.5,my);\nmy=if(below(my,.1),.5,my);\n\nx=mx;\ny=my;\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_str":"a.oldmd=0;a.md=0;a.mx=0;a.my=0;a.mx=.5;a.my=.4;a.md=3;","frame_eqs_str":"","point_eqs_str":"a.oldmd=a.md;a.md=mod(a.md+rand(4),4);a.md=.00001<Math.abs(equal(a.md,a.oldmd))?mod(a.md+1,4):a.md;a.mx+=.002*equal(a.md,0)*a.bass;a.mx-=.002*equal(a.md,1)*a.bass;a.my+=.002*equal(a.md,2)*a.treb;a.my-=.002*equal(a.md,3)*a.treb;a.mx=.00001<Math.abs(above(a.mx,.9))?.5:a.mx;a.mx=.00001<Math.abs(below(a.mx,.1))?.5:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.5:a.my;a.my=.00001<Math.abs(below(a.my,.1))?.5:a.my;a.x=a.mx;a.y=a.my;a.a=Math.cos(Math.tan(a.treb+.1*a.bass));","init_eqs_eel":"mx=.5;\nmy=.4;\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\nmd=(md+rand(4))%4;\nmd=if(equal(md,oldmd),(md+1)%4,md);\n\nmx=mx+(equal(md,0)*.002*bass);\nmx=mx-(equal(md,1)*.002*bass);\nmy=my+(equal(md,2)*.002*treb);\nmy=my-(equal(md,3)*.002*treb);\n\nmx=if(above(mx,.9),.5,mx);\nmx=if(below(mx,.1),.5,mx);\nmy=if(above(my,.9),.5,my);\nmy=if(below(my,.1),.5,my);\n\nx=mx;\ny=my;\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_str":"a.oldmd=0;a.md=0;a.mx=0;a.my=0;a.mx=.5;a.my=.4;a.md=3;","frame_eqs_str":"","point_eqs_str":"a.oldmd=a.md;a.md=mod(a.md+rand(4),4);a.md=.00001<Math.abs(equal(a.md,a.oldmd))?mod(a.md+1,4):a.md;a.mx+=.002*equal(a.md,0)*a.bass;a.mx-=.002*equal(a.md,1)*a.bass;a.my+=.002*equal(a.md,2)*a.treb;a.my-=.002*equal(a.md,3)*a.treb;a.mx=.00001<Math.abs(above(a.mx,.9))?.5:a.mx;a.mx=.00001<Math.abs(below(a.mx,.1))?.5:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.5:a.my;a.my=.00001<Math.abs(below(a.my,.1))?.5:a.my;a.x=a.mx;a.y=a.my;a.a=Math.cos(Math.tan(a.treb+.1*a.bass));","init_eqs_eel":"mx=.5;\nmy=.4;\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\nmd=(md+rand(4))%4;\nmd=if(equal(md,oldmd),(md+1)%4,md);\n\nmx=mx+(equal(md,0)*.002*bass);\nmx=mx-(equal(md,1)*.002*bass);\nmy=my+(equal(md,2)*.002*treb);\nmy=my-(equal(md,3)*.002*treb);\n\nmx=if(above(mx,.9),.5,mx);\nmx=if(below(mx,.1),.5,mx);\nmy=if(above(my,.9),.5,my);\nmy=if(below(my,.1),.5,my);\n\nx=mx;\ny=my;\na=cos(tan(treb + bass*.1));"}],"init_eqs_str":"a.index2=0;a.index=0;a.q22=0;a.q21=0;a.q1=0;a.dec_med=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.stag=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.drot=0;a.p3=0;a.q3=0;a.t0=0;a.q32=0;a.q28=0;a.q30=0;a.q20=0;a.p4=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.4+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,12);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.q27=a.index+1;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.drot=div(30*(mod(a.index,4)-2),a.fps);a.p3=a.p3*a.dec_slow+div(30*(1-a.dec_slow),a.fps)*a.drot;a.q30=a.p3;a.stag=a.q27+1*a.index2;a.stag=Math.max(a.stag,1);a.p4=a.dec_med*a.p4+(1-a.dec_med)*\na.stag;a.q31=a.p4;a.zoom=1+.05*a.q1;a.rot=-.007*a.index;a.q32=pow(.996,div(30,a.fps));a.monitor=a.index2;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %12;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nq27 = index + 1;\nq28 = index2;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\ndrot = (index%4-2) * 30/fps;\np3 = p3*dec_slow + (1-dec_slow)*30/fps * drot;\nq30 = p3 ;\n\nstag = (q27+index2*1);\nstag = max(stag,1);\np4 = dec_med*p4 + (1-dec_med)*stag;\nq31 = p4;\n\nzoom = 1 + .05*q1;\nrot = -0.007 * index;\n\nq32 = pow(0.996, 30/fps); //fade\n\nmonitor = index2;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((ret_2.y - \n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\n  .y) * 0.2));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 0.0;\n  tmpvar_17.xyz = ret_2;\n  vec3 tmpvar_18;\n  tmpvar_18 = mix (tmpvar_17, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\n  ret_2 = tmpvar_18;\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = tmpvar_18;\n  ret = tmpvar_19.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 2.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_3.z;\n  tmpvar_4.y = -(tmpvar_2.z);\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + ((tmpvar_4 * texsize.zw) * 64.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.z;\n  tmpvar_6.y = -(tmpvar_2.z);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 32.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (mix (mix (\n    (mix (mix (vec3(0.2, 0.02, 0.6), vec3(0.6, 0.6, 0.0), vec3((\n      ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n    .y * 8.0))), vec3(1.0, 1.0, 2.0), vec3(((\n      (texture (sampler_blur1, tmpvar_5).xyz * scale1)\n     + bias1).y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_5).y * 2.0))))\n  , vec3(0.0, 1.0, 0.0), vec3(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 1.2)\n  )), vec3(1.4, 0.0, 0.0), vec3((\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_7).x * 2.0))));\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x += 0.004;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z += 0.004;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n\n\n\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.2 + 0.0;\n    ret = lerp(ret, tex2D(sampler_main,uv_orig), 0.2); //motionblur\n\n//ret = 0;\n}","comp_hlsl":"sampler sampler_manyfish;\nshader_body\n{\n    float2 d = texsize.zw*2;\n    float3 dx = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\n    float2 uv_dz = uv + float2(dy.z,-dx.z)*texsize.zw*64;\n    float2 uv_dy = uv - float2(dy.z,-dx.z)*texsize.zw*32;\n\nret = GetPixel(uv).y*.92;\nret = lerp(float3(0.2,0.02,0.6),float3(0.6,0.6,0),GetBlur3(uv_dz).y*8); \nret = lerp(ret,float3(1,1,2),GetBlur1(uv_dz).y*6); \nret = lerp(ret,float3(0,0,0),GetPixel(uv_dz).y*2); \n\nret = lerp(ret,float3(0,1,0),GetBlur2(uv).z*1.2);\n//ret = lerp(ret,float3(-.02,-4,2),GetPixel(uv).z);\n\nret = lerp(ret,float3(1.4,0,0),GetBlur1(uv_dy).x*2);\nret = lerp(ret,0,GetPixel(uv_dy).x*2);\n\n}\n"}