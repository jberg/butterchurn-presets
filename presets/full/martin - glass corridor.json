{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":1.740724,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.71,"rad":0.657209,"tex_zoom":0.391734,"g":1,"b":1,"a":0.8,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.264578,"tex_ang":1.4451,"tex_zoom":1.493308,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = rand(10)/10;\ny = rand(10)/10;\n\nr = 0;\ng = 0;\nb = 0;\n\nr2= .5;\nb2 = 0;\ng2 = 0;\na = 0; a2 = 1;\nrad = bass_att/30;","init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\ny = rand(10)/10;\n\nr = 0;\ng = 0;\nb = 0;\n\nr2= .5;\nb2 = 0;\ng2 = 0;\na = 0; a2 = 1;\nrad = bass_att/30;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.5,"a":0.9,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"k1 = (sample*100)%2;\n\nxi = value1*k1 + xi*(1-k1);\nyi = value2*(1-k1) + yi*k1;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\n\na = bass + mid + treb ;\na = a/10 * sqrt(xi*xi+yi*yi);","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\n\nxi = value1*k1 + xi*(1-k1);\nyi = value2*(1-k1) + yi*k1;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\n\na = bass + mid + treb ;\na = a/10 * sqrt(xi*xi+yi*yi);"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x0 = .5 + (-1) * q1/1;\ny0 = .0 - (-1)* .5;\n\n//x0 = .5; y0 = .5;\n\nk1 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = k1%2;\nf1 = rand(100)/200-.25;\nf2 = rand(100)/200-.25;\n\nx = x0 + k1* f1;;\ny = y0 + k1* f2;\na = k2%2 /4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x0 = .5 + (-1) * q1/1;\ny0 = .0 - (-1)* .5;\n\n//x0 = .5; y0 = .5;\n\nk1 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = k1%2;\nf1 = rand(100)/200-.25;\nf2 = rand(100)/200-.25;\n\nx = x0 + k1* f1;;\ny = y0 + k1* f2;\na = k2%2 /4;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.index2=0;a.index4=0;a.index=0;a.q22=0;a.q21=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.t_rel=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.p3=0;a.t_rel=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.monitor=a.index4;\na.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att+1;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.14159265359*a.p3,2);a.q27=8-a.index;a.q28=a.index2+1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.t_rel+=div(.6,a.fps)*a.q1*a.q1;a.q5=Math.cos(a.t_rel);a.q6=Math.sin(a.t_rel);a.q7=-a.q6;a.q8=a.q5;a.movez+=div(div(.6,\na.fps),(1.4-a.q5)*(1.4-a.q5));a.q30=a.movez;a.zoom=1;","pixel_eqs_str":"a.dx=div(0*a.q28,8);","init_eqs_eel":"p3 = 0;\nt_rel = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb);\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nmonitor = index4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att+1;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3 * 3.14159265359/2;\n\n\nq27 = 8-index;\nq28 = index2+1;\n\n//q28 = sin(time)+1;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nt_rel = t_rel + .02*30/fps*q1*q1;\n\nq5 = cos(t_rel);\nq6 = sin(t_rel);\nq7 = -q6;\nq8 = q5;\n\nmovez = movez + .02*30/fps / ((1.4-q5)*(1.4-q5));\nq30 = movez;\n\n\nzoom = 1.0;","pixel_eqs_eel":"dx = 0*q28/8;","warp":"vec3 xlat_mutablenoise;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\n shader_body { \n  float z_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qb.xy;\n  tmpvar_2[1u] = _qb.zw;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv * tmpvar_2) - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (0.4 / abs(tmpvar_3.y));\n  xlat_mutablers.x = (tmpvar_3.x * tmpvar_4);\n  xlat_mutablers.y = (tmpvar_4 + q30);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\n  xlat_mutablenoise = (tmpvar_5.xyz * vec3(greaterThanEqual (tmpvar_5.xyz, vec3(0.9, 0.9, 0.9))));\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\n  )));\n  xlat_mutableret1 = xlat_mutablenoise;\n  z_1 = (1.2 / abs(tmpvar_3.y));\n  xlat_mutablers.x = (tmpvar_3.x * z_1);\n  xlat_mutablers.y = (z_1 + q30);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\n  xlat_mutablenoise = (tmpvar_6.xyz * vec3(greaterThanEqual (tmpvar_6.xyz, vec3(0.9, 0.9, 0.9))));\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\n  z_1 = (0.4 / abs(tmpvar_3.x));\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\n  xlat_mutablers.x = (z_1 + q30);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\n  xlat_mutablenoise = (tmpvar_7.xyz * vec3(greaterThanEqual (tmpvar_7.xyz, vec3(0.9, 0.9, 0.9))));\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\n  )));\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\n  z_1 = (1.2 / abs(tmpvar_3.x));\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\n  xlat_mutablers.x = (z_1 + q30);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\n  xlat_mutablenoise = (tmpvar_8.xyz * vec3(greaterThanEqual (tmpvar_8.xyz, vec3(0.9, 0.9, 0.9))));\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = xlat_mutableret1;\n  ret = tmpvar_9.xyz;\n }","comp":"uniform sampler2D sampler_clouds2;\n shader_body { \n  vec2 uv_1;\n  vec2 uv1_2;\n  uv_1 = (uv * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (dot (texture (sampler_main, (uv_1 - tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)));\n  tmpvar_5.y = (dot (texture (sampler_main, (uv_1 - tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)));\n  uv1_2 = ((0.3 * sin(\n    ((uv_1 + (0.02 * time)) * 6.0)\n  )) + (0.2 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_clouds2, (uv_orig + tmpvar_5));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((-2.0 * \n    (0.1 * texture (sampler_main, uv_1))\n  .xyz) + (\n    clamp (((0.004 * q26) / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\n   * vec3(1.0, 0.8, 0.4))) + (0.4 * (tmpvar_6.xyz + \n    (dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29)) - 0.7)\n  )));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat2 rs;\nfloat3 noise, ret1;\n\nshader_body {\nfloat2 p0 = -.0*float2(q6,q6);\nuv = mul(uv,float2x2(_qb));\n\n\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = (uv-.5+p0 );\n\nfloat h1 = .4;\n\nfloat z = +h1/abs(uv1.y);\nrs.x = uv1.x * z;\nrs.y = z + q30;\nnoise = tex2D(sampler_pw_noise_lq,rs/32);\nnoise *= (noise >= .9);\nnoise *= 1+.5*(lum(tex2D(sampler_noise_hq,16*rs))-.5);\nret1 = noise;\n\nz = 3*h1/abs(uv1.y);\nrs.x = uv1.x * z;\nrs.y = z + q30;\nnoise = tex2D(sampler_pw_noise_lq,rs/32);\nnoise *= (noise >= .9);\nret1 += noise;\n\nz = h1/abs(uv1.x);\nrs.y = uv1.y * z;\nrs.x = z + q30;\nnoise = tex2D(sampler_pw_noise_lq,rs/32);\nnoise *= (noise >= .9);\nnoise *= 1+.5*(lum(tex2D(sampler_noise_hq,16*rs))-.5);\nret1 += noise;\n\nz = 3*h1/abs(uv1.x);\nrs.y = uv1.y * z;\nrs.x = z + q30;\nnoise = tex2D(sampler_pw_noise_lq,rs/32);\nnoise *= (noise >= .9);\nret1 += noise;\n\n\nret = ret1;\n}","comp_hlsl":"float2 rs;\nsampler sampler_clouds2;\nfloat4 texsize_clouds2;\nshader_body\n{\nuv *= aspect.xy;\nfloat2 uv1 = (uv-.5);\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = lum(GetPixel (uv-hor)) - lum(GetPixel (uv+hor));\nfloat dy = lum(GetPixel (uv-ver)) - lum(GetPixel (uv+ver));\nfloat2 dz = float2 (dx,dy);\n\nuv1 = .3*sin((uv+.02*time)*6) + .2*dz;\nfloat3 dots = saturate(.004*q26/length(uv1))*float3(1,.8,.4);\n\nfloat3 clouds = (tex2D (sampler_clouds2, uv_orig+dz));\nclouds += lum(clouds)-.7;\n\nfloat3 ret1 = .1*tex2D(sampler_main, uv) ;\n\nret = -2*ret1 + dots  + .4*clouds;\n\n}"}