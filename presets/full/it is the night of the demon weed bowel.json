{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.573,"wave_smoothing":0,"modwavealphastart":0.24,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":1.48886,"zoom":1.0196,"warp":0.24146,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_x":28,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":2.27969,"smoothing":0.7,"b":0},"init_eqs_str":"a.d4=0;a.dx=0;a.d1=0;a.tt=0;a.d3=0;a.d2=0;a.ddy=0;a.t=0;a.dy=0;a.t8=a.time;","frame_eqs_str":"","point_eqs_str":"a.d1=95.13*a.sample;a.d2=111.52*a.sample*a.value1;a.d3=84.45*a.sample;a.d4=143.23*a.sample;a.x=a.sample;a.y=.5+a.value1;a.dx=1.2*Math.cos(27.43*a.sample+1+6.28*(a.d1-Math.floor(a.d1)));a.dy=.4+Math.cos(73.92*a.sample+4+6.28*(a.d2-Math.floor(a.d2)));a.ddy=.85;a.t=.3*a.time+.25*Math.sin(64.21*a.sample+5)+.25*Math.sin(123.56*a.sample+3)+a.d4-Math.floor(a.d4);a.t-=Math.floor(a.t);a.t=.4;a.tt=a.t;a.x=.5+a.dx*a.t;a.y=.2+a.dy*a.t+a.ddy*a.t*a.t;a.a=1;a.g=.5*Math.sin(513.32*a.sample)+\n.4*Math.sin(3*a.time);a.b=.5*Math.sin(53.32*a.sample)+.3*Math.sin(5*a.time);a.r=.5*Math.sin(23.32*a.sample)+.2*Math.sin(2*a.time);","init_eqs_eel":"t8 = time;","frame_eqs_eel":"","point_eqs_eel":"d1 = sample*95.13;\nd2 = sample*111.52*value1;\nd3 = sample*84.45;\nd4 = sample*143.23;\nx = sample;\ny = 0.5 + value1;\ndx = 1.2*cos(sample*27.43 + 1 + 6.28*(d1-int(d1)));\ndy = .4 + 1*cos(sample*73.92 + 4 + 6.28*(d2-int(d2)));\nddy = .85;     // acceleration downward\nt = time*0.3 + 0.25*sin(sample*64.21+5) + 0.25*sin(sample*123.56+3) + d4-int(d4);\nt = t - int(t);\nt=.3+1*.1;\ntt=t;\n// simple particle physics: x = x0 + dx*t and y = y0 + dy*t + ddy*t*t\nx = 0.5 + dx*t;\ny = .2 + dy*t + ddy*t*t;\na = 1;//1-t*t;\n// for some easy audio sync:\n//a = min(1,a * bass);\ng = 0 + 0.5*sin(sample*513.32)+.4*sin(time*3);\nb = 0 + 0.5*sin(sample*53.32)+.3*sin(time*5);\nr = 0 + 0.5*sin(sample*23.32)+.2*sin(time*2);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.tic=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.meanbass_att=0;a.q29=0;a.q6=0;a.tim=0;a.bt=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.mid_avg=0;a.chng=0;a.mq28=0;a.dis=0;a.tt=0;a.my=0;a.tin=0;a.lastbeat=0;a.mq23=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.bass_avg=0;a.peakbass_att=0;a.vav=0;a.atime=0;a.an=0;a.q4=0;a.mox=0;a.q26=0;a.mt=0;a.mq27=0;a.ra=0;a.mq25=0;a.mx=0;a.treb_avg=0;a.volume=0;a.mq22=0;a.beat=0;a.vol=0;a.mq26=0;a.q2=0;\na.q27=0;a.moy=0;a.q3=0;a.q7=0;a.q28=0;a.q8=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q4=Math.sin(.03*\na.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.volume=.3*(a.bass+a.mid);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.05*(19*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<\nMath.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.96*above(a.time-a.lastbeat,2*a.beatrate)+.996*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.tim=.00001<Math.abs(a.beat)?a.time:a.tim;a.q5=below(a.time-a.tim,.1);a.warp=0;a.tic=Math.min(a.time-a.tin,.1);\na.tin=a.time;a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.q1=a.treb_avg;a.q2=a.mid_avg;a.q3=a.bass_avg;a.monitor=a.q5;a.mx=.00001<Math.abs(a.beat)?.0005*Math.floor(rand(1001))+.0005*Math.floor(rand(1001)):\na.mx;a.my=.00001<Math.abs(a.beat)?.0005*Math.floor(rand(1001))+.0005*Math.floor(rand(1001)):a.my;a.cx=a.mx;a.cy=a.my;a.mox=a.mx-.5;a.moy=a.my-.5;a.an=Math.atan(div(a.moy,a.mox))+(.00001<Math.abs(above(a.mox,0))?6.2832*above(a.moy,0):3.1416);a.dis=pow(a.mox*a.mox+a.moy*a.moy,.5);a.dis=Math.max(.17,a.dis);a.q7=.5+a.dis*Math.cos(a.an);a.q8=.5+a.dis*Math.sin(a.an);a.warp=.2*a.bass;a.warp+=above(a.bass,1)*a.bass*.2;a.echo_alpha=.3*above(a.bass,a.q1);a.q6+=above(a.bass,1.3)*Math.sin(a.time)*.02;a.rot+=\na.q6;a.zoom+=above(a.bass,1.3)*a.bass*.03;","pixel_eqs_str":"a.mx=a.x-a.q7;a.my=a.y-a.q8;a.an=a.ang;a.ra=pow(a.mx*a.mx+a.my*a.my,.5);a.rot=.02*Math.sin(12.5664*a.ra-4*a.time)*(a.mid+a.treb)*(a.mid+a.treb)*.5;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\n\n//begin beat code\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\n//Adjust responsiveness: To increase responsiveness, set the \"0.96 and \"0.996\" on the next line to slightly lower values. Higher values decrease responsiveness.\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\n//end beat code\n\ntim = if(beat,time,tim);\nq5 = below(time - tim,.1);\n\nwarp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nq1 = treb_avg;\nq2 = mid_avg;\nq3 = bass_avg;\n\nmonitor = q5;\n\nmx = if(beat,int(rand(1001))*.001*.5 + int(rand(1001))*.001*.5,mx);\nmy = if(beat,int(rand(1001))*.001*.5 + int(rand(1001))*.001*.5,my);\ncx = mx;\ncy = my;\n\nmox = mx - .5;\nmoy = my - .5;\nan = atan(moy/mox) + if(above(mox,0),above(moy,0)*6.2832,3.1416);\ndis = pow(mox*mox + moy*moy,.5);\ndis = max(.17,dis);\n\nq7 = .5 + dis*cos(an);\nq8 = .5 + dis*sin(an);\nwarp=bass*.2;\nwarp=warp+(above(bass,1)*bass*.2);\n\necho_alpha=(above(bass,q1)*.3);\n\n// nao usar mv_a=(above(bass,1)*bass*.5);\n\nq6=q6+(above(bass,1.3)*sin(time)*.02);\nrot=rot+q6;\n\nzoom=zoom+(above(bass,1.3)*bass*.03);\n\n//sy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));\n//sx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));","pixel_eqs_eel":"mx = x - q7;\nmy = y - q8;\n\nan = ang;\n//zoom = 1 + pow(sin(an*5 - time),1)*.02*bass*bass;\n\nra = pow(mx*mx + my*my,.5);\nrot = .02*sin(ra*6.2832*2 - time*4)*(mid + treb)*(mid + treb)*.5;","warp":" shader_body { \n  vec2 tmp_1;\n  vec3 ret_2;\n  tmp_1.x = (ang * 3.0);\n  tmp_1.y = rad;\n  vec3 tmpvar_3;\n  tmpvar_3 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\n  tmpvar_5.y = tmpvar_4.y;\n  ret_2 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\n   - \n    (tmpvar_3 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_4 * 0.01)\n  .xy)).xyz + (tmpvar_3 * 0.1)));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmp_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y - (tmpvar_6.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z - (tmpvar_6.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x - (tmpvar_6.z * 0.5));\n  };\n  float tmpvar_7;\n  tmpvar_7 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_2 = (ret_2 * (0.98 * (tmpvar_7 * tmpvar_7)));\n  ret_2 = (ret_2 - 0.04);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_4)).xyz - texture (sampler_main, (uv - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\n  uv2_1 = (uv - 0.5);\n  vec2 tmpvar_5;\n  tmpvar_5.y = 0.0;\n  float tmpvar_6;\n  tmpvar_6 = (time / 8.0);\n  tmpvar_5.x = tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (q27 * 2.0);\n  xlat_mutableuv3 = (((tmpvar_7 * uv2_1) * 0.1) + tmpvar_5);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\n  xlat_mutableuv3 = ((0.1 * cos(\n    (22.0 * xlat_mutableuv3)\n  )) + (18.0 * xlat_mutabledz));\n  float tmpvar_8;\n  tmpvar_8 = clamp ((0.02 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  vec4 tmpvar_9;\n  tmpvar_9 = (1.0 + roam_cos);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_8)) + ((0.45 * \n    dot (vec3(tmpvar_8), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_9).xyz);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\n  vec2 tmpvar_10;\n  tmpvar_10.y = 0.0;\n  tmpvar_10.x = tmpvar_6;\n  xlat_mutableuv3 = (((tmpvar_7 * uv2_1) * 0.1) + tmpvar_10);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\n  xlat_mutableuv3 = ((0.1 * cos(\n    (22.0 * xlat_mutableuv3)\n  )) + (18.0 * xlat_mutabledz));\n  float tmpvar_11;\n  tmpvar_11 = clamp ((0.02 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_11)) + ((0.45 * \n    dot (vec3(tmpvar_11), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_9).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\n  ret_2 = (xlat_mutableret1 + clamp ((\n    (texture (sampler_main, uv).xyz * 4.0)\n   * \n    (0.2 + xlat_mutableret1)\n  ), 0.0, 1.0));\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\n    ret_2.z = (ret_2.z - (tmpvar_12.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\n    ret_2.x = (ret_2.x - (tmpvar_12.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (ret_2.y - (tmpvar_12.z * 0.5));\n  };\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"float z;\nfloat3 ret1, neu, mus;\nfloat2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;\nshader_body\n{\nfloat2 uv2;\n//uv = (uv-0.5) * aspect.xy + .5;    \ndz = 0;\n\nfloat2 hor = float2(texsize.z,0);\nfloat2 ver = float2(0,texsize.w);\n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nfloat anz = 1;\nfloat n = 0;\nuv4 = (uv);\n    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));\n    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));\n\n\nmus = .5*GetPixel(uv4-0*dz)-0*dz.x;\n\nuv2 = uv-.5;\nwhile (n <= anz) {\n    dist = 1-frac(1.0/anz*n-.1); //evtl sqrt !;\n\n    inten =  sqrt(dist)*(1-dist*dist)*4;\n\n    uv3 = q27*2*uv2*dist + float2 (time/8,0);\n    uv3 = frac(uv3);\n    uv3 *= aspect.yx;\n    uv3 = .1 * cos(22*uv3) + 18 *dz ;\n    neu = saturate(.02/length(uv3));\n    neu = dist*neu + (1-dist)*lum(neu)* .5*(1+roam_cos);\n    ret1 = max(ret1,neu*inten);\nn++;\n}\n\nret = ret1  +  saturate(8*mus*(.2+ret1)) ;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n}"}