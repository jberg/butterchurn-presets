{"version":2,"baseVals":{"rating":0,"wave_mode":6,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.069,"wave_scale":2.115,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.772,"zoomexp":5.00873,"zoom":1.04163,"rot":0.003,"warp":0,"wave_r":0,"wave_g":0.3,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":1,"sides":30,"textured":1,"x":0.24,"rad":0.47209,"tex_ang":0.62832,"tex_zoom":0.81952,"r2":0.6,"g2":0.6,"b2":0.9,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5*Math.sin(.5*a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"x=(sin(time*.5)*.5)+.5;"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":1.79142,"tex_ang":1.5708,"r2":0.3,"g2":0.2,"b2":0.8,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"rad":0.80814,"r":0.4,"g":0.4,"b":0.8,"r2":0.7,"g2":0.6,"b2":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.36457,"tex_zoom":0.49831,"a":0,"a2":0.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.tscale=0;a.tp1x=0;a.tp3y=0;a.tri_point=0;a.tp1y=0;a.trot=0;a.t_y=0;a.tp2x=0;a.tp2y=0;a.t_x=0;a.tp3x=0;","frame_eqs_str":"","point_eqs_str":"a.tscale=.45+.02*a.bass;a.trot=3;a.a=above(a.sample,0);a.tp1x=.5+Math.cos(a.time*a.trot)*a.tscale*.75;a.tp1y=.5+Math.sin(a.time*a.trot)*a.tscale;a.tp2x=.5+Math.cos(2.09443805+a.time*a.trot)*a.tscale*.75;a.tp2y=.5+Math.sin(2.09443805+a.time*a.trot)*a.tscale*Math.sin(a.time);a.tp3x=.5+Math.cos(4.18856195+a.time*a.trot)*a.tscale*.75;a.tp3y=.5+Math.sin(4.18856195+a.time*a.trot)*a.tscale*Math.sin(a.time);a.tri_point=rand(3);a.t_x+=equal(a.tri_point,0)*(a.tp1x-a.t_x)*.5;a.t_y+=equal(a.tri_point,\n0)*(a.tp1y-a.t_y)*.5;a.t_x+=equal(a.tri_point,1)*(a.tp2x-a.t_x)*.5;a.t_y+=equal(a.tri_point,1)*(a.tp2y-a.t_y)*.5;a.t_x+=equal(a.tri_point,2)*(a.tp3x-a.t_x)*.5;a.t_y+=equal(a.tri_point,2)*(a.tp3y-a.t_y)*.5;a.x=a.t_x;a.y=a.t_y;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"tscale=.45+(bass*.02);\ntrot=3;\na=above(sample,0);\n\ntp1x=.5+(cos(3.1415*0+(time*trot))*tscale*.75);\ntp1y=.5+(sin(3.1415*0+(time*trot))*tscale);\n\ntp2x=.5+(cos(3.1415*.6667+(time*trot))*tscale*.75);\ntp2y=.5+(sin(3.1415*.6667+(time*trot))*tscale*sin(time)); //spin\n\ntp3x=.5+(cos(3.1415*1.3333+(time*trot))*tscale*.75);\ntp3y=.5+(sin(3.1415*1.3333+(time*trot))*tscale*sin(time)); //spin\n\n\n//draw via random walk\ntri_point=rand(3);\n\n//point 1\nt_x=t_x+(equal(tri_point,0)*(tp1x-t_x)*.5);\nt_y=t_y+(equal(tri_point,0)*(tp1y-t_y)*.5);\n\n//point 2\nt_x=t_x+(equal(tri_point,1)*(tp2x-t_x)*.5);\nt_y=t_y+(equal(tri_point,1)*(tp2y-t_y)*.5);\n\n//point 3\nt_x=t_x+(equal(tri_point,2)*(tp3x-t_x)*.5);\nt_y=t_y+(equal(tri_point,2)*(tp3y-t_y)*.5);\n\nx=t_x;\ny=t_y;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.tscale=0;a.tp1x=0;a.tp3y=0;a.tri_point=0;a.tp1y=0;a.trot=0;a.t_y=0;a.tp2x=0;a.tp2y=0;a.t_x=0;a.tp3x=0;","frame_eqs_str":"","point_eqs_str":"a.tscale=.45+.02*a.bass;a.trot=3;a.a=above(a.sample,0);a.tp1x=.5+Math.cos(a.time*a.trot)*a.tscale*.75;a.tp1y=.5+Math.sin(a.time*a.trot)*a.tscale;a.tp2x=.5+Math.cos(2.09443805+a.time*a.trot)*a.tscale*.75;a.tp2y=.5+Math.sin(2.09443805+a.time*a.trot)*a.tscale*Math.sin(a.time);a.tp3x=.5+Math.cos(4.18856195+a.time*a.trot)*a.tscale*.75;a.tp3y=.5+Math.sin(4.18856195+a.time*a.trot)*a.tscale*Math.sin(a.time);a.tri_point=rand(3);a.t_x+=equal(a.tri_point,0)*(a.tp1x-a.t_x)*.5;a.t_y+=equal(a.tri_point,\n0)*(a.tp1y-a.t_y)*.5;a.t_x+=equal(a.tri_point,1)*(a.tp2x-a.t_x)*.5;a.t_y+=equal(a.tri_point,1)*(a.tp2y-a.t_y)*.5;a.t_x+=equal(a.tri_point,2)*(a.tp3x-a.t_x)*.5;a.t_y+=equal(a.tri_point,2)*(a.tp3y-a.t_y)*.5;a.x=a.t_x;a.y=a.t_y;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"tscale=.45+(bass*.02);\ntrot=3;\na=above(sample,0);\n\ntp1x=.5+(cos(3.1415*0+(time*trot))*tscale*.75);\ntp1y=.5+(sin(3.1415*0+(time*trot))*tscale);\n\ntp2x=.5+(cos(3.1415*.6667+(time*trot))*tscale*.75);\ntp2y=.5+(sin(3.1415*.6667+(time*trot))*tscale*sin(time)); //spin\n\ntp3x=.5+(cos(3.1415*1.3333+(time*trot))*tscale*.75);\ntp3y=.5+(sin(3.1415*1.3333+(time*trot))*tscale*sin(time)); //spin\n\n\n//draw via random walk\ntri_point=rand(3);\n\n//point 1\nt_x=t_x+(equal(tri_point,0)*(tp1x-t_x)*.5);\nt_y=t_y+(equal(tri_point,0)*(tp1y-t_y)*.5);\n\n//point 2\nt_x=t_x+(equal(tri_point,1)*(tp2x-t_x)*.5);\nt_y=t_y+(equal(tri_point,1)*(tp2y-t_y)*.5);\n\n//point 3\nt_x=t_x+(equal(tri_point,2)*(tp3x-t_x)*.5);\nt_y=t_y+(equal(tri_point,2)*(tp3y-t_y)*.5);\n\nx=t_x;\ny=t_y;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.tscale=0;a.tp1x=0;a.tp3y=0;a.tri_point=0;a.tp1y=0;a.trot=0;a.t_y=0;a.tp2x=0;a.tp2y=0;a.t_x=0;a.tp3x=0;","frame_eqs_str":"","point_eqs_str":"a.tscale=.45+.02*a.bass;a.trot=3;a.a=above(a.sample,0);a.tp1x=.5+Math.cos(a.time*a.trot)*a.tscale*.75;a.tp1y=.5+Math.sin(a.time*a.trot)*a.tscale;a.tp2x=.5+Math.cos(2.09443805+a.time*a.trot)*a.tscale*.75;a.tp2y=.5+Math.sin(2.09443805+a.time*a.trot)*a.tscale*Math.sin(a.time);a.tp3x=.5+Math.cos(4.18856195+a.time*a.trot)*a.tscale*.75;a.tp3y=.5+Math.sin(4.18856195+a.time*a.trot)*a.tscale*Math.sin(a.time);a.tri_point=rand(3);a.t_x+=equal(a.tri_point,0)*(a.tp1x-a.t_x)*.5;a.t_y+=equal(a.tri_point,\n0)*(a.tp1y-a.t_y)*.5;a.t_x+=equal(a.tri_point,1)*(a.tp2x-a.t_x)*.5;a.t_y+=equal(a.tri_point,1)*(a.tp2y-a.t_y)*.5;a.t_x+=equal(a.tri_point,2)*(a.tp3x-a.t_x)*.5;a.t_y+=equal(a.tri_point,2)*(a.tp3y-a.t_y)*.5;a.x=a.t_x;a.y=a.t_y;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"tscale=.45+(bass*.02);\ntrot=3;\na=above(sample,0);\n\ntp1x=.5+(cos(3.1415*0+(time*trot))*tscale*.75);\ntp1y=.5+(sin(3.1415*0+(time*trot))*tscale);\n\ntp2x=.5+(cos(3.1415*.6667+(time*trot))*tscale*.75);\ntp2y=.5+(sin(3.1415*.6667+(time*trot))*tscale*sin(time)); //spin\n\ntp3x=.5+(cos(3.1415*1.3333+(time*trot))*tscale*.75);\ntp3y=.5+(sin(3.1415*1.3333+(time*trot))*tscale*sin(time)); //spin\n\n\n//draw via random walk\ntri_point=rand(3);\n\n//point 1\nt_x=t_x+(equal(tri_point,0)*(tp1x-t_x)*.5);\nt_y=t_y+(equal(tri_point,0)*(tp1y-t_y)*.5);\n\n//point 2\nt_x=t_x+(equal(tri_point,1)*(tp2x-t_x)*.5);\nt_y=t_y+(equal(tri_point,1)*(tp2y-t_y)*.5);\n\n//point 3\nt_x=t_x+(equal(tri_point,2)*(tp3x-t_x)*.5);\nt_y=t_y+(equal(tri_point,2)*(tp3y-t_y)*.5);\n\nx=t_x;\ny=t_y;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.tscale=0;a.tp1x=0;a.tp3y=0;a.tri_point=0;a.tp1y=0;a.trot=0;a.t_y=0;a.tp2x=0;a.tp2y=0;a.t_x=0;a.tp3x=0;","frame_eqs_str":"","point_eqs_str":"a.tscale=.45+.02*a.bass;a.trot=3;a.a=above(a.sample,0);a.tp1x=.5+Math.cos(a.time*a.trot)*a.tscale*.75;a.tp1y=.5+Math.sin(a.time*a.trot)*a.tscale;a.tp2x=.5+Math.cos(2.09443805+a.time*a.trot)*a.tscale*.75;a.tp2y=.5+Math.sin(2.09443805+a.time*a.trot)*a.tscale*Math.sin(a.time);a.tp3x=.5+Math.cos(4.18856195+a.time*a.trot)*a.tscale*.75;a.tp3y=.5+Math.sin(4.18856195+a.time*a.trot)*a.tscale*Math.sin(a.time);a.tri_point=rand(3);a.t_x+=equal(a.tri_point,0)*(a.tp1x-a.t_x)*.5;a.t_y+=equal(a.tri_point,\n0)*(a.tp1y-a.t_y)*.5;a.t_x+=equal(a.tri_point,1)*(a.tp2x-a.t_x)*.5;a.t_y+=equal(a.tri_point,1)*(a.tp2y-a.t_y)*.5;a.t_x+=equal(a.tri_point,2)*(a.tp3x-a.t_x)*.5;a.t_y+=equal(a.tri_point,2)*(a.tp3y-a.t_y)*.5;a.x=a.t_x;a.y=a.t_y;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"tscale=.45+(bass*.02);\ntrot=3;\na=above(sample,0);\n\ntp1x=.5+(cos(3.1415*0+(time*trot))*tscale*.75);\ntp1y=.5+(sin(3.1415*0+(time*trot))*tscale);\n\ntp2x=.5+(cos(3.1415*.6667+(time*trot))*tscale*.75);\ntp2y=.5+(sin(3.1415*.6667+(time*trot))*tscale*sin(time)); //spin\n\ntp3x=.5+(cos(3.1415*1.3333+(time*trot))*tscale*.75);\ntp3y=.5+(sin(3.1415*1.3333+(time*trot))*tscale*sin(time)); //spin\n\n\n//draw via random walk\ntri_point=rand(3);\n\n//point 1\nt_x=t_x+(equal(tri_point,0)*(tp1x-t_x)*.5);\nt_y=t_y+(equal(tri_point,0)*(tp1y-t_y)*.5);\n\n//point 2\nt_x=t_x+(equal(tri_point,1)*(tp2x-t_x)*.5);\nt_y=t_y+(equal(tri_point,1)*(tp2y-t_y)*.5);\n\n//point 3\nt_x=t_x+(equal(tri_point,2)*(tp3x-t_x)*.5);\nt_y=t_y+(equal(tri_point,2)*(tp3y-t_y)*.5);\n\nx=t_x;\ny=t_y;"}],"init_eqs_str":"a.t=0;","frame_eqs_str":"a.t=12.3*a.time;a.rot+=.03*(.6*Math.sin(.38*a.time)+.4*Math.sin(.54*a.time));a.dx+=.002*(.6*Math.sin(.434*a.time)+.4*Math.sin(.277*a.time));a.dy+=.002*(.6*Math.sin(.384*a.time)+.4*Math.sin(.477*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"t = time*12.3;\n//wave_x = wave_x + 0.350*( 0.70*sin(2.221*time*5) + 0.30*sin(1.821*time*15) );\n//wave_y = wave_y + 0.350*( 0.30*sin(1.942*time*5) + 0.70*sin(2.522*time*15) );\n//wave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\n//wave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\n//wave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\nrot = rot + 0.030*( 0.60*sin(0.38*time) + 0.40*sin(0.54*time) );\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );\n//rot = 0;\n//wave_a = 0;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_smalltiled_ensign_meat;\n shader_body { \n  float tmpvar_1;\n  tmpvar_1 = fract((time * 0.5));\n  float tmpvar_2;\n  tmpvar_2 = pow (0.5, tmpvar_1);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (mix (texture (sampler_fc_main, uv).xyz, (\n    mix (texture (sampler_smalltiled_ensign_meat, (((\n      (tmpvar_3 * tmpvar_2)\n     + 0.5) * texsize.xy) * texsize_smalltiled_ensign_meat.zw)).xyz, texture (sampler_smalltiled_ensign_meat, (((\n      (tmpvar_3 * (tmpvar_2 * 2.0))\n     + 0.5) * texsize.xy) * texsize_smalltiled_ensign_meat.zw)).xyz, vec3(tmpvar_1))\n   * \n    (clamp ((rad * 1.3), 0.0, 1.0) * 1.1)\n  ), vec3(0.15, 0.15, 0.15)) * 0.8);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_2.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = mix ((texture (sampler_fc_main, (uv - \n    (tmpvar_2 * 0.4)\n  )).x * (hue_shader.zxy * hue_shader.zxy)), mix ((\n    pow (hue_shader, vec3(4.0, 4.0, 4.0))\n   * 1.2), vec3(3.0, 3.0, 3.0), texture (sampler_main, uv).zzz), ((texture (sampler_blur1, uv).xyz * scale1) + bias1).yyy);\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_smalltiled_ensign_meat;\nfloat4 texsize_smalltiled_ensign_meat;\n\nshader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n\n    // this creates an endless texture zoom:\n    {  // the { } block creates a local, temporary scope for any new variables\n     float t = frac(time*0.5);\n     float zoom1 = pow(0.5, t);\n     float zoom2 = zoom1*2;\n     float2 uv1 = (uv-0.5) * zoom1 + 0.5;\n     float2 uv2 = (uv-0.5) * zoom2 + 0.5;    \n     float3 c  = tex2D(sampler_smalltiled_ensign_meat, \n                  uv1*texsize.xy*texsize_smalltiled_ensign_meat.zw).xyz;\n     float3 c2 = tex2D(sampler_smalltiled_ensign_meat, \n                  uv2*texsize.xy*texsize_smalltiled_ensign_meat.zw).xyz;\n     c = lerp(c, c2, t);\n     c *= saturate(rad*1.3)*1.1; //darken @ center\n     ret = lerp(ret, c, 0.15);\n    }\n   \n    // darken over time\n    ret *= 0.80; //or try: ret -= 0.004;\n\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*4;\n    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;\n    float2 uv_y = uv-float2(dx,dy)*0.4;\n\nret = lerp(tex2D(sampler_fc_main, uv_y).x*pow(hue_shader.zxy,2),\n           lerp(pow(hue_shader,4)*1.2,3,GetPixel(uv).z),\n           GetBlur1(uv).y);\n}\n"}