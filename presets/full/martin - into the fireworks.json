{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":3.3,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"thickoutline":1,"textured":1,"rad":1.85483,"ang":1.5708,"tex_zoom":0.53907,"g":0.94,"b":0.89,"r2":0.84,"g2":0.93,"b2":1,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .4998;\ny = .5002;\n\nti = time*.3;\nr = .925 + .05*sin(ti*1.721);\ng = .925 + .05*sin(ti*1.838);\nb = .925 + .05*sin(ti*1.968);\n\nr2 = 1.875 - r;\ng2 = 1.875 - g;\nb2 = 1.875 - b;\n","init_eqs_eel":"","frame_eqs_eel":"x = .4998;\ny = .5002;\n\nti = time*.3;\nr = .925 + .05*sin(ti*1.721);\ng = .925 + .05*sin(ti*1.838);\nb = .925 + .05*sin(ti*1.968);\n\nr2 = 1.875 - r;\ng2 = 1.875 - g;\nb2 = 1.875 - b;\n"},{"baseVals":{"sides":63,"textured":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":189,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.6},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.t3=0;a.my=0;a.oz=0;a.ofs=0;a.mz=0;a.oy=0;a.mul=0;a.mx=0;a.t2=0;a.zang=0;a.monitor=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.ofs=0;a.t1=2*Math.sin(div(a.time,15)-a.ofs);a.t2=2*Math.sin(div(a.time,11)-a.ofs);a.t3=2*Math.sin(div(a.time,19)-a.ofs);a.monitor=a.time;","point_eqs_str":"a.mul=10;a.t_abs=a.sample*a.mul;a.ampl=2;a.ox=a.ampl*Math.sin(68*a.t_abs);a.oy=a.ampl*Math.cos(28*a.t_abs);a.oz=2+a.ampl*Math.cos(128*a.t_abs);a.r=Math.min(Math.sin(335*a.t_abs)+1,1);a.g=Math.min(Math.sin(783*a.t_abs)+1,1);a.b=Math.min(Math.sin(456*a.t_abs)+1,1);a.a=.5+.02*(rand(10)-5);a.xang=a.t1;a.yang=a.t2;a.zang=a.t3;a.fov=.12;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+\na.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"ofs = 0;\n\nt1 = 2*sin(time/15-ofs);\nt2 = 2*sin(time/11-ofs);\nt3 = 2*sin(time/19-ofs);\nmonitor = time;","point_eqs_eel":"\nmul = 10;\nt_abs = (sample)*mul;\nampl = 2;\n\nox = ampl*sin (t_abs*68);\noy = ampl*cos (t_abs*28);\noz = 2+ampl*cos (t_abs*128);\n\n\nr = min(sin(t_abs*335)+1,1);\ng = min(sin(t_abs*783)+1,1) ;\nb = min(sin(t_abs*456)+1,1);\n\na=.5 + .02*(rand(10)-5);\n\nxang = t1;\nyang = t2;\nzang = t3;\nfov = 0.12;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;"},{"baseVals":{"samples":189,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1 = 2*sin(time/15);\nt2 = 2*sin(time/11);\nt3 = 2*sin(time/19);\nmonitor = time;","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\nt2 = 2*sin(time/11);\nt3 = 2*sin(time/19);\nmonitor = time;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.fx=0;a.index=0;a.q22=0;a.q21=0;a.q15=0;a.q29=0;a.q6=0;a.fade=0;a.q1=0;a.dec_med=0;a.q5=0;a.trel=0;a.q9=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q10=0;a.sb=0;a.q4=0;a.fy=0;a.q16=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.trig=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.fade=.1;","frame_eqs_str":"a.dec_med=pow(.5,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,0+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.monitor=a.index2;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;\na.q26=a.bass+a.mid+a.treb;a.q27=a.index;a.q28=a.index2;a.sb=a.sb*a.dec_med+a.q21*(1-a.dec_med);a.q29=a.sb;a.k1=a.is_beat*bnot(a.index)*bnot(a.index2);a.p1=a.index2-2;a.p2=a.dec_slow*a.p2+(1-a.dec_slow)*a.p1;a.p3=a.dec_slow*a.p3+(1-a.dec_slow)*a.p2;a.rott+=div(.09,a.fps)*a.p3;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.trel=div(a.time,10);a.q5=Math.cos(a.trel);a.q6=Math.sin(a.trel);a.q7=-a.q6;a.q8=a.q5;a.q9=.01*Math.sin(div(a.time,7));a.movez+=div(.12,a.fps)*(a.p3+4);a.q10=a.movez;\na.q30=.3*(Math.sin(div(a.time,45))+1.5);a.mv_a=0;a.q32=pow(.98,div(30,a.fps));a.q31=equal(mod(a.frame,10),0);a.trig=a.q24*bnot(mod(a.index,3));a.fx=a.fx*bnot(a.trig)+div(a.trig*rand(100),100);a.fy=a.fy*bnot(a.trig)+div(a.trig*rand(100),100);a.q15=a.fx-.5;a.q16=a.fy-.5;a.fade*=a.dec_slow;a.q32=1-a.fade;a.monitor=a.q32;","pixel_eqs_str":"a.zoom=1+.01*Math.sin(div(a.time,8));a.warp=0*(1-a.rad);a.warp=.05;a.rot=0;a.dx=0;a.dy=0;","init_eqs_eel":"fade = .1;","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .0+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%4;\nmonitor = index2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nq27 = index;\nq28 = index2;\nsb = sb*dec_med + q21*(1-dec_med);\nq29 = sb;\n\nk1 =  is_beat*bnot(index)*bnot(index2);\np1 =  (index2-2);\n\np2 = dec_slow * p2+ (1-dec_slow)*p1;\np3 = dec_slow * p3+ (1-dec_slow)*p2;\nrott =  rott +  .003*30/fps*p3;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\ntrel = time/10;\nq5 = cos(trel);\nq6 = sin(trel);\nq7 = -q6;\nq8 = q5;\n\nq9 = .01*sin(time/7);\nmovez = movez + .004*30/fps*(p3+4);\nq10 = movez;\nq30 = .3* (sin(time/45) + 1.5);\n\nmv_a = 0;\n\nq32 = pow(0.98, 30/fps); //fade\n\nq31 = equal(frame%10,0);\n\ntrig = q24*bnot(index%3);\nfx = fx*bnot(trig) + trig*rand(100)/100;\nfy = fy*bnot(trig) + trig*rand(100)/100;\nq15 = fx-.5;\nq16 = fy-.5;\n\nfade = fade * dec_slow;\nq32 = 1-fade;\nmonitor = q32;","pixel_eqs_eel":"zoom = 1 + .01*sin(time/8);\nwarp = .0 * (1-rad);\nwarp = 0.05;\nrot = .0;\ndx = 0; dy = 0;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = dot ((texture (sampler_main, (uv + vec2(0.002, 0.0))) - texture (sampler_main, (uv - vec2(0.002, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_1.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.002))) - texture (sampler_main, (uv - vec2(0.0, 0.002)))), vec4(0.32, 0.49, 0.29, 0.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (((-0.1 * tmpvar_2) * tmpvar_2) + (0.47 * ((texture (sampler_main, \n      (uv + (tmpvar_1 * 0.0003))\n    ).xyz + texture (sampler_main, uv).xyz) + (tmpvar_2 / 8.0))))\n   * q32) - (0.003 * q31)) - ((0.01 * q31) * (rad * rad)));\n  ret = tmpvar_3.xyz;\n }","comp":"float xlat_mutablem;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float maskn_2;\n  float inten_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  mat2 tmpvar_4;\n  tmpvar_4[uint(0)] = _qa.xy;\n  tmpvar_4[1u] = _qa.zw;\n  uv_1 = (uv_1 * tmpvar_4);\n  int tmpvar_5;\n  tmpvar_5 = int(q10);\n  xlat_mutablem = (1.0 - float(tmpvar_5));\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = -(q10);\n  tmpvar_6 = fract((0.75 + (\n    fract(tmpvar_7)\n   / 4.0)));\n  inten_3 = ((4.0 * (1.0 - tmpvar_6)) * pow (tmpvar_6, 0.2));\n  vec2 tmpvar_8;\n  tmpvar_8 = fract(((\n    ((3.0 * uv_1) * tmpvar_6)\n   + \n    (xlat_mutablem * 0.35)\n  ) + (\n    (q7 * tmpvar_6)\n   * tmpvar_6)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1));\n  xlat_mutableret1 = ((xlat_mutableneu * inten_3) * 0.7);\n  xlat_mutablem = (2.0 - float(tmpvar_5));\n  float tmpvar_9;\n  tmpvar_9 = fract((0.5 + (\n    fract(tmpvar_7)\n   / 4.0)));\n  inten_3 = ((4.0 * (1.0 - tmpvar_9)) * pow (tmpvar_9, 0.2));\n  vec2 tmpvar_10;\n  tmpvar_10 = fract(((\n    ((3.0 * uv_1) * tmpvar_9)\n   + \n    (xlat_mutablem * 0.35)\n  ) + (\n    (q7 * tmpvar_9)\n   * tmpvar_9)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_10).xyz + ((texture (sampler_blur1, tmpvar_10).xyz * scale1) + bias1));\n  maskn_2 = (1.0 - (pow (tmpvar_9, 0.1) * clamp (\n    (8.0 * xlat_mutableneu)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\n  xlat_mutablem = (3.0 - float(tmpvar_5));\n  float tmpvar_11;\n  tmpvar_11 = fract((0.25 + (\n    fract(tmpvar_7)\n   / 4.0)));\n  inten_3 = ((4.0 * (1.0 - tmpvar_11)) * pow (tmpvar_11, 0.2));\n  vec2 tmpvar_12;\n  tmpvar_12 = fract(((\n    ((3.0 * uv_1) * tmpvar_11)\n   + \n    (xlat_mutablem * 0.35)\n  ) + (\n    (q7 * tmpvar_11)\n   * tmpvar_11)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_12).xyz + ((texture (sampler_blur1, tmpvar_12).xyz * scale1) + bias1));\n  maskn_2 = (1.0 - (pow (tmpvar_11, 0.1) * clamp (\n    (8.0 * xlat_mutableneu)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\n  xlat_mutablem = (4.0 - float(tmpvar_5));\n  float tmpvar_13;\n  tmpvar_13 = fract((fract(tmpvar_7) / 4.0));\n  inten_3 = ((4.0 * (1.0 - tmpvar_13)) * pow (tmpvar_13, 0.2));\n  vec2 tmpvar_14;\n  tmpvar_14 = fract(((\n    ((3.0 * uv_1) * tmpvar_13)\n   + \n    (xlat_mutablem * 0.35)\n  ) + (\n    (q7 * tmpvar_13)\n   * tmpvar_13)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\n  maskn_2 = (1.0 - (pow (tmpvar_13, 0.1) * clamp (\n    (8.0 * xlat_mutableneu)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\n  vec2 tmpvar_15;\n  tmpvar_15.x = q15;\n  tmpvar_15.y = q16;\n  vec2 tmpvar_16;\n  tmpvar_16 = sin(((tmpvar_15 + \n    (2.0 * uv_1)\n  ) + (0.2 * rand_frame).xy));\n  float tmpvar_17;\n  tmpvar_17 = ((dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29)) * (1.0 - \n    dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29))\n  )) * 4.0);\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ((pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5)) + (\n    clamp (((0.01 * (q21 - 2.0)) / sqrt(dot (tmpvar_16, tmpvar_16))), 0.0, 1.0)\n   * \n    clamp ((1.0 - (tmpvar_17 / 2.0)), 0.0, 1.0)\n  )) + ((\n    (clamp ((1.0 - tmpvar_17), 0.0, 1.0) * q29)\n   * \n    float((q27 == 2.0))\n  ) * float(\n    (q28 <= 2.0)\n  )));\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n//float2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\n\nfloat2 hor = float2 (.002,0);\nfloat2 ver = float2 (0,.002);\nfloat dx = lum(tex2D(sampler_main,uv+hor) - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) - tex2D(sampler_main,uv-ver));\n\n\nfloat2 dz = float2 (dx,dy);\n\nfloat3 noise1 = lum(tex2D(sampler_noise_lq, \n                    corr*uv*4+ rand_frame));\n\n\n\nfloat3 blur = GetBlur1(frac(uv));\n\n\nfloat2 zz = dz * (1-blur*0);\n\nfloat2 ang2 = 3*(1-blur) * tex2D(sampler_noise_lq,uv).xy-.5;\nfloat ca = cos(ang2); float sa = sin(ang2);\n//zz = mul (zz,float2x2(ca,-sa,sa,ca));\n\n\nfloat3 crisp = tex2D(sampler_main,uv+zz*.0003);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp = .47*(crisp + crisp2 + blur/8);\n\ncrisp += length(zz)*.0;\n\nfloat3 fb = 1*(blur+0*lum(blur));\n\nfloat3 ret1 = -.1*fb*fb+ crisp;\n\nret = ret1 * q32 - .003*q31 - .01*q31*pow(rad,2);\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 ret1, neu, neu2;\nfloat2 uv0, uv1, uv2, uv3, uv4;\nfloat m,n;\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv0 = uv;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat dist = 1;\nfloat inten = 1;\nfloat maskn = 1; float maskp = 0;\nret1 = 0;\nint anz = 4;\nn = 1; \n\nuv = mul(uv,float2x2(_qa));\n\nfloat t_rel = q10;\nwhile (n <= anz) {\n    m =  n-int(t_rel);\n\n    dist = frac(1-n*1.0/anz+frac(-t_rel)/anz); //evtl sqrt !\n    inten =  4*(1-dist)*pow(dist,.2);\n    uv2 = frac(3*uv*dist +m*.35 + q7*dist*dist);\n    neu = GetPixel (uv2) + GetBlur1(uv2);\n    maskn = 1-pow(dist,.1)*saturate(8*neu);\n\n    ret1 = ret1*maskn + neu*inten*.7;\nn++;\n}\n\n\nfloat flash = saturate(.01*(q21-2)/length(sin(float2(q15,q16) + 2*uv+.2*rand_frame)));\n\nfloat smoke = lum(ret1)*(1-lum(ret1))*4;\nret = pow(ret1,1.5)\n+ flash*saturate(1-smoke/2) + saturate(1-smoke)*q29*(q27==2)*(q28<=2);\n//ret = GetPixel(uv0*2)*6;\n}"}