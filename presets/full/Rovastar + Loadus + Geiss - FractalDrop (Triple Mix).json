{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.1,"wave_scale":3.815,"wave_smoothing":0.9,"modwavealphastart":0,"modwavealphaend":1.1,"zoom":1.0099,"warp":0.04177,"wave_r":0.65,"wave_g":0.65,"ob_size":0.007,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"x":0.37,"rad":6.81129,"ang":3.64425,"r":0,"a":0.5,"g2":0,"a2":0.5,"border_a":1},"init_eqs_str":"a.q1=0;a.t1=0;a.t1=.01*rand(100);a.t2=.01*rand(100);","frame_eqs_str":"a.ang=a.q1*(.303+.01*a.t1);a.r=Math.min(1,Math.max(0,.1*Math.sin(.417*a.time+1)));a.g=Math.min(1,Math.max(0,.1*Math.sin(.391*a.time+2)));a.b=Math.min(1,Math.max(0,.1*Math.sin(.432*a.time+4)));a.r2=Math.min(1,Math.max(0,a.r2+.02*Math.sin(.657*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.02*Math.sin(.737*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.02*Math.sin(.884*a.time+6)));a.additive=.5+.15*(a.bass+a.bass_att);","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = q1*(0.303 + 0.01*t1);\nr = min(1,max(0,0+ 0.1*sin(time*0.417 + 1)));\ng = min(1,max(0,0 + 0.1*sin(time*0.391 + 2)));\nb = min(1,max(0,0 + 0.1*sin(time*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.02*sin(time*0.657 + 3)));\ng2 = min(1,max(0,g2 + 0.02*sin(time*0.737 + 5)));\nb2 = min(1,max(0,b2 + 0.02*sin(time*0.884 + 6)));\nadditive =0.5+0.15*(bass+bass_att);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.37,"rad":0.89796,"ang":3.64425,"g":1,"b":1,"a":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.t1=0;a.t1=.01*rand(100);a.t2=.01*rand(100);","frame_eqs_str":"a.x+=.07*Math.sin(.15*a.q1+3);a.y+=.03*Math.sin(.19*a.q1+1);a.tex_ang=a.q1*(.01+.0001*a.t1);a.r=Math.min(1,Math.max(0,a.r+.01*Math.sin(.0417*a.time+1)));a.g=Math.min(1,Math.max(0,a.g+.01*Math.sin(.391*a.time+2)));a.b=Math.min(1,Math.max(0,a.b+.01*Math.sin(.432*a.time+4)));a.r2=Math.min(1,Math.max(0,a.r2+.01*Math.sin(.457*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.01*Math.sin(.0437*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.01*Math.sin(.484*a.time+6)));","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.07*sin(q1*0.15+3);\ny = y + 0.03*sin(q1*0.19+1);\ntex_ang = q1*(0.01 + 0.0001*t1);\nr = min(1,max(0,r + 0.01*sin(time*0.0417 + 1)));\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.0437 + 5)));\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.51386,"ang":4.20974,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.t1=0;a.t2=0;a.t1=.01*rand(100);a.t2=.01*rand(100);","frame_eqs_str":"a.x+=.05*Math.sin(.017*a.q1);a.y+=.09*Math.sin(.013*a.q1);a.tex_ang=a.q1*(.02+.0001*a.t1);a.rad*=.9+.2*a.t2;a.r=Math.min(1,Math.max(0,a.r+.01*Math.sin(.417*a.time+1)));a.g=Math.min(1,Math.max(0,a.g+.01*Math.sin(.391*a.time+2)));a.b=Math.min(1,Math.max(0,a.b+.01*Math.sin(.432*a.time+4)));a.r2=Math.min(1,Math.max(0,a.r2+.01*Math.sin(.457*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.01*Math.sin(.437*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.01*Math.sin(.484*a.time+6)));","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(q1*0.017);\ny = y + 0.09*sin(q1*0.013);\ntex_ang = q1*(0.02 + 0.0001*t1);\nrad = rad * (0.9 + 0.2*t2);\nr = min(1,max(0,r + 0.01*sin(time*0.417 + 1)));\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.437 + 5)));\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.22298,"r":0.6,"g":0.8,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.x+=.08*Math.sin(.25*a.q1);a.y+=.1*Math.sin(.5*a.q1+2);a.ang=a.time;","init_eqs_eel":"","frame_eqs_eel":"x = x + 0.08*sin(q1*0.25);\ny = y + 0.1*sin(q1*0.5+2);\nang = time;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.movement=0;a.q1=0;","frame_eqs_str":"a.movement=a.movement+.1*Math.max(0,a.bass+a.bass_att-2)+.15*pow(a.bass,3)+.005;a.q1=a.movement;a.monitor=a.q1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\nq1 = movement;\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.5));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 12.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time,\n    // basically by breaking up big blocks of white color.\n    ret += (ret - GetBlur1(uv))*0.5;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 12 * saturate(treb_att-1);\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.08);\n}","comp_hlsl":"shader_body\n{\n    float2 uv2, uv3;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\n    ang2 = 6.28*0.333;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    ang2 = 6.28*0.667;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv3.x =  uv.x*c - uv.y*s;\n    uv3.y =  uv.x*s + uv.y*c;\n\n    ret = tex2D(sampler_main, uv + 0.5).xyz;\n    ret = max(ret, tex2D(sampler_main,uv2 + 0.5).xyz);\n    ret = max(ret, tex2D(sampler_main,uv3 + 0.5).xyz);\n\n    //ret *= 1.3; // a little bit of overbright\n}\n\n"}