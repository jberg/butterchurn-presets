{"version":2,"baseVals":{"rating":4,"decay":0.99,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":100,"warpscale":4.142,"zoomexp":0.85437,"zoom":0.99951,"warp":0.01,"sx":1.01,"sy":1.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.sounds=.3*(a.bass+a.treb+a.mid);a.rad=a.rad*a.sounds*.6;a.r+=Math.sin(a.bass)*a.g;a.g+=Math.sin(a.mid)*a.g;a.x+=.414*Math.cos(a.time*a.bass*.5);a.y+=.414*Math.sin(a.time*a.bass*.5);a.r=a.bass_att;a.g=a.mid;a.b=a.treb;","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)*.3;\n\nrad=rad*sounds*0.6;\n\nr=r+sin(bass)*g;\ng=g+sin(mid)*g;\n\n\nx=x+0.207*cos(time*bass*0.5)*2;\ny=y+0.207*sin(time*bass*0.5)*2;\n\nr = bass_att;\ng = mid;\nb = treb;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.g2+=.09*Math.sin(1.23*(a.treb+a.mid));a.g+=.09*Math.cos(1.37*(a.bass+a.mid));a.sounds=div(a.bass+a.mid+a.treb,3);a.rad=div(a.rad*(a.treb+a.mid),3);a.x+=.3*Math.sin(a.time*a.bass);a.y+=.317*Math.cos(a.time*a.bass);a.r=a.treb;a.g=a.mid;a.b=a.bass_att;","init_eqs_eel":"","frame_eqs_eel":"\ng2=g2+0.09*sin((treb+mid)*1.23);\ng=g+0.09*cos((bass+mid)*1.37);\n\nsounds=(bass+mid+treb)/3;\n\nrad=rad*(treb+mid)/3;\n\nx=x+0.300*sin(time*bass);\ny=y+0.317*cos(time*bass);\n\nr = treb;\ng = mid;\nb = bass_att;"},{"baseVals":{"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"sounds=(bass+treb+mid)/3;\natt=(bass_att+treb_att+mid_att)/3;\natt=(bass_att+treb_att+mid_att)/3;\nr2=r2+(0.25*sin(time*6.28))-bass;\ng2=g2+(0.25*sin(time*6.28))-bass;\n\nrad=rad;\nx=x+0.217*cos(time*2.3)+sounds*0.1;\ny=y+0.217*sin((time*3.5)+(sounds*0.3));","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\natt=(bass_att+treb_att+mid_att)/3;\natt=(bass_att+treb_att+mid_att)/3;\nr2=r2+(0.25*sin(time*6.28))-bass;\ng2=g2+(0.25*sin(time*6.28))-bass;\n\nrad=rad;\nx=x+0.217*cos(time*2.3)+sounds*0.1;\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dec_med=0;a.is_beat=0;a.dec_slow=0;a.fr=0;a.avg=0;a.beat=0;a.peak=0;a.q2=0;a.t0=0;","frame_eqs_str":"a.warp=.2*a.bass;a.warp+=above(a.bass,1)*a.bass*.2;a.echo_alpha=.9*above(a.bass,1.25);a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.fr=.00001<Math.abs(a.is_beat)?.00001<Math.abs(above(a.fr,0))?-1:1:a.fr;a.q2+=\nabove(a.bass,1.3)*Math.sin(a.time)*.02;a.rot=(a.rot+a.q2)*a.fr;a.zoom+=above(a.bass,1.3)*a.bass*.03;a.sy+=above(a.treb_att,1.2)*a.treb_att*.002*Math.sin(a.time);a.sx+=above(a.treb_att,1.2)*a.treb_att*.002*Math.sin(a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp=bass*.2;\nwarp=warp+(above(bass,1)*bass*.2);\n\necho_alpha=(above(bass,1.25)*.9);\n\n//mv_a=(above(bass,1)*bass*.5);\n\n// Awesome beat code by martin!\ndec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\n\nFR = if(is_beat,if(above(FR,0),-1,1),FR);\n\nq2=q2+(above(bass,1.3)*sin(time)*.02);\n\nrot=(rot+q2)*FR;\n\nzoom=zoom+(above(bass,1.3)*bass*.03);\n\nsy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));\nsx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (0.02 * aspect.zw);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur2, \n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\n  ).xyz * scale2) + bias2));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur2, \n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\n  ).xyz * scale2) + bias2));\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = tmpvar_5.y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.x;\n  tmpvar_8.y = -(tmpvar_4.x);\n  vec2 tmpvar_9;\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.02));\n  ret_2.y = texture (sampler_fc_main, (tmpvar_9 - floor(tmpvar_9))).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - tmpvar_6.y)\n   * 0.02) + 0.005));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.x;\n  tmpvar_10.y = tmpvar_5.x;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_5.z;\n  tmpvar_11.y = -(tmpvar_4.z);\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.02));\n  ret_2.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\n  ret_2.x = (ret_2.x + ((\n    (ret_2.x - tmpvar_6.x)\n   * 0.02) + 0.005));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_4.z;\n  tmpvar_12.y = tmpvar_5.z;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_5.y;\n  tmpvar_13.y = -(tmpvar_4.y);\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.02));\n  ret_2.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_2.z = (ret_2.z + ((\n    (ret_2.z - tmpvar_6.z)\n   * 0.02) + 0.005));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_2;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * 2.0) + 1.7)\n  )) - (2.0 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * (-0.08 + tmpvar_2)));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float2 d = 0.02*aspect.zw;\n    float3 dx = ( GetBlur2(uv+float2(1,0)*d-floor(uv+float2(1,0)*d))-GetBlur2(uv-float2(1,0)*d-floor(uv-float2(1,0)*d)) );\n    float3 dy = ( GetBlur2(uv+float2(0,1)*d-floor(uv+float2(0,1)*d))-GetBlur2(uv-float2(0,1)*d-floor(uv-float2(0,1)*d)) );\n    float3 b1 = GetBlur1(uv) - 0;\n    d = 0.01;\n    float d2 = -0.02;\n    float1 thr = 0;\n    float1 c = 0.005;\n\n\n    float2 my_uv = uv - float2(dx.y,dy.y)*d - float2(dy.x,-dx.x)*d2;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n    ret.y += (ret.y - b1.y - thr)*.02 +c;\n\n\n    my_uv = uv - float2(dx.x,dy.x)*d - float2(dy.z,-dx.z)*d2;\n    ret.x = tex2D( sampler_fc_main, my_uv-floor(my_uv)).x;\n    ret.x += (ret.x - b1.x - thr)*.02 +c;\n\n\n    my_uv = uv - float2(dx.z,dy.z)*d - float2(dy.y,-dx.y)*d2;\n    ret.z = tex2D( sampler_fc_main, my_uv-floor(my_uv)).z;\n    ret.z += (ret.z - b1.z - thr)*.02 +c;\n\n\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv-.5;\n\nfloat3 ret1 = tex2D(sampler_main, uv) +tex2D(sampler_main, 1-uv)*0;\n\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = .3*cos(uv1*2+1.7) -2*dz;;\nfloat3 dots = saturate(.03/length(uv1));\n\n\nret1 = (-ret1/4) + 6*dots*(-0.08+ret1);\n\nret = ret1;\n}"}