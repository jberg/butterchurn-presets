{"version":2,"baseVals":{"rating":1,"gammaadj":2.7,"decay":0.715,"wrap":0,"solarize":1,"wave_a":0.001,"modwavealphastart":0.848,"warpanimspeed":2.472,"warpscale":3.209,"zoomexp":1.0018,"zoom":1.01,"cx":0.465,"dy":0.00001,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_y":9.72,"mv_r":1.19,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":410,"rad":0.0082,"r":0,"b":1,"a":1.09,"g2":0,"a2":0.1,"border_b":0.87,"border_a":0.006},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.xs=0;a.x1=0;a.q1=0;a.q5=0;a.nc=0;a.z3=0;a.zs=0;a.x3=0;a.ys=0;a.q4=0;a.x2=0;a.y2=0;a.size=0;a.q2=0;a.z1=0;a.q3=0;","frame_eqs_str":"a.q1=div(a.time,5);a.q2=div(a.time,6);a.rad=.005+div(a.bass,100);a.q5=div(a.bass_att,70);a.b2=.79*a.treb-div(a.bass,2);a.r=div(a.instance,a.num_inst);a.g=Math.abs(div(a.treb_att,5)-a.bass);a.size=.3+div(a.bass_att,300);a.nc=sqrt(a.num_inst);a.xs=Math.sin(div(7.662*mod(a.instance,a.nc),a.nc))*Math.sin(div(3.705*Math.floor(div(a.instance,a.nc)),a.nc));a.ys=Math.cos(div(6.28*mod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.zs=Math.cos(div(3.14*\nMath.floor(div(a.instance,a.nc)),a.nc));a.y1=a.ys*Math.cos(a.q1)-a.zs*Math.sin(a.q1);a.z1=a.ys*Math.sin(a.q1)+a.zs*Math.cos(a.q1);a.x1=a.z1*Math.sin(a.q2)+a.xs*Math.cos(a.q2);a.z2=a.z1*Math.cos(a.q2)-a.xs*Math.sin(a.q2);a.x2=a.x1*Math.cos(a.q3)-a.y1*Math.sin(a.q3);a.y2=a.y1*Math.cos(a.q3)+a.x1*Math.sin(a.q3);a.x3=a.x2+a.q4;a.y3=a.y2;a.z3=a.z2+a.q5;a.x=.5+a.size*div(a.x3,1+a.z3*a.size);a.y=.42+a.size*div(a.y3,1+a.z3*a.size);a.a=below(a.z3,0);","init_eqs_eel":"","frame_eqs_eel":"q1 = time/5;\nq2 = time/6;\nrad = 0.005+bass/100;\nq5 = bass_att/70;\nb2 = treb*0.79-bass/2;\nr = instance/num_inst;\ng = abs(treb_att/5-bass);\n//b = abs(treb_att/5-bass);\nsize = 0.3+bass_att/300;\n\nnc = sqrt(num_inst);\nxs=sin(7.662*(instance%nc)/nc)*sin(3.705*int(instance/nc)/nc);\nys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\nzs=cos(3.14*int(instance/nc)/nc);\n\n//modulate to allow rotation\ny1 = ys*cos(q1)-zs*sin(q1);\nz1 = ys*sin(q1)+zs*cos(q1);\nx1 = z1*sin(q2)+xs*cos(q2);\nz2 = z1*cos(q2)-xs*sin(q2);\nx2 = x1*cos(q3)-y1*sin(q3);\ny2 = y1*cos(q3)+x1*sin(q3);\n\n//translate shape\nx3 = x2+q4;\ny3 = y2;\nz3 = z2+q5;\n\nx = 0.5 + size*(x3/(1+z3*size));\ny = 0.42 + size*(y3/(1+z3*size));\na=below(z3,0);"},{"baseVals":{"rad":0.102,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"x":0.53,"rad":0.091,"tex_zoom":0.76,"r":1.16,"a":1.05,"g2":0.86,"border_r":0.87,"border_g":0.89,"border_b":1.22,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.49,"rad":0.089,"tex_zoom":0.78,"a":0.95,"g2":0.81,"border_a":0.114,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"r":0.8,"g":1.05,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0.93,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.1,"r":1.15,"g":0.92,"b":1.22,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.84,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q12=0;a.q13=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.q11=0;a.q4=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.q1=Math.sin(.5*a.time);a.q2=Math.sin(.2*a.time);a.q3=Math.sin(.34*a.time);a.q4=Math.abs(Math.sin(40*a.time));a.bt+=div(a.bass,a.fps);a.bt*=above(100,a.bt);a.q5=Math.sin(a.bt);a.q6=a.bt;a.q11=Math.floor(rand(200));a.q11*=equal(a.q11,1);a.q12=Math.floor(rand(100));a.q12*=equal(a.q12,1);a.q13=Math.floor(rand(150));a.q13*=equal(a.q13,1);a.rot-=.048*Math.sin(.08*a.bass_att)*Math.sin(.37*a.time);a.dy=.002*Math.sin(.623*a.time)+.002*Math.cos(.31*a.time);a.dx=.002*Math.cos(.442*a.time)+\n.002*Math.sin(.52*a.time);","pixel_eqs_str":"a.zoom+=.0075*a.x*Math.sin(a.rad*a.time*2);a.zoom+=.008236*(1-a.x)*Math.sin(a.rad*a.time*2);","init_eqs_eel":"","frame_eqs_eel":"q1=sin(.5*time);\nq2=sin(.2*time);\nq3=sin(0.34*time);\nq4=abs(sin(40*time));\n\nbt=bt+bass/fps;\nbt=bt*above(100,bt);\nq5=sin(bt);\nq6=bt;\n\nq11=int(rand(200)); q11=q11*equal(q11,1);\nq12=int(rand(100)); q12=q12*equal(q12,1);\nq13=int(rand(150)); q13=q13*equal(q13,1);\n\nrot=rot-0.048*sin(bass_att*0.08)*sin(0.37*time);\n\ndy=.002*sin(time*.623)+.002*cos(time*.31);\ndx=.002*cos(time*.442)+.002*sin(time*.52);","pixel_eqs_eel":"//zoom=10.1242-0.038*above(rad,0.12);\n//zoom=zoom+0.042*above(rad,0.131);\n//zoom=zoom-.05*above(rad,.2);\n//zoom=zoom+.05*above(rad,.21);\n//zoom=zoom-0.039*above(rad,0.33);\n//zoom=zoom+.05*above(rad,.31);\n//zoom=zoom-0.059*above(rad,0.34);\n//zoom=zoom+.05*above(rad,.41);\n//zoom=zoom-.05*above(rad,.49);\n//zoom=zoom+.05*above(rad,.50);\n//zoom=zoom-.05*above(rad,.6);\n//zoom=zoom+.05*above(rad,.61);\n//zoom=zoom-0.055*above(rad,0.61);\n//zoom=zoom+0.047*above(rad,0.575);\n//zoom=zoom-0.049*above(rad,0.8);\n//zoom=zoom+.05*above(rad,.805);\n//zoom=zoom-.05*above(rad,.9);\n//zoom=zoom+0.051*above(rad,1.046);\n\n\nzoom=zoom+.15*x*.05*sin(rad*time*2);\nzoom=zoom+0.142*(1-x)*0.058*sin(rad*time*2);","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.469, 0.469));\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 300.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = dot (((\n    (texture (sampler_blur1, ((tmpvar_1 + vec2(1.0, 2.0)) + tmpvar_2)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_3.y = dot (((\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\n    (tmpvar_3 * texsize.zw)\n   * 50.0))) - 0.01).xyz;\n  ret = tmpvar_4.xyz;\n }","comp":"float xlat_mutablesmask;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv3;\nvec2 xlat_mutableuv4;\n shader_body { \n  float dist_1;\n  float stars_2;\n  vec3 ret_3;\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (0.109 * time);\n  float tmpvar_5;\n  tmpvar_5 = (0.24 * rad);\n  dist_1 = ((1.0 - fract(\n    (0.2425 + tmpvar_4)\n  )) * (1.0 - tmpvar_5));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q1;\n  tmpvar_6.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_6);\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\n  vec2 tmpvar_7;\n  tmpvar_7 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_2 = max (0.0, clamp ((\n    (1.0 - dist_1)\n   * \n    ((0.1 / sqrt(dot (tmpvar_7, tmpvar_7))) * xlat_mutablesmask)\n  ), 0.0, 1.0));\n  dist_1 = ((1.0 - fract(\n    (0.485 + tmpvar_4)\n  )) * (1.0 - tmpvar_5));\n  vec2 tmpvar_8;\n  tmpvar_8.x = q1;\n  tmpvar_8.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_8);\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\n  vec2 tmpvar_9;\n  tmpvar_9 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_2 = (stars_2 + max (stars_2, clamp (\n    ((1.0 - dist_1) * ((0.1 / sqrt(\n      dot (tmpvar_9, tmpvar_9)\n    )) * xlat_mutablesmask))\n  , 0.0, 1.0)));\n  dist_1 = ((1.0 - fract(\n    (0.7275 + tmpvar_4)\n  )) * (1.0 - tmpvar_5));\n  vec2 tmpvar_10;\n  tmpvar_10.x = q1;\n  tmpvar_10.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_10);\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\n  vec2 tmpvar_11;\n  tmpvar_11 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_2 = (stars_2 + max (stars_2, clamp (\n    ((1.0 - dist_1) * ((0.1 / sqrt(\n      dot (tmpvar_11, tmpvar_11)\n    )) * xlat_mutablesmask))\n  , 0.0, 1.0)));\n  dist_1 = ((1.0 - fract(\n    (0.97 + tmpvar_4)\n  )) * (1.0 - tmpvar_5));\n  vec2 tmpvar_12;\n  tmpvar_12.x = q1;\n  tmpvar_12.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_12);\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\n  vec2 tmpvar_13;\n  tmpvar_13 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_2 = (stars_2 + max (stars_2, clamp (\n    ((1.0 - dist_1) * ((0.1 / sqrt(\n      dot (tmpvar_13, tmpvar_13)\n    )) * xlat_mutablesmask))\n  , 0.0, 1.0)));\n  vec3 tmpvar_14;\n  tmpvar_14 = max ((texture (sampler_main, uv).xyz * 2.0), ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * 2.0));\n  ret_3 = (ret_3 + clamp ((stars_2 * stars_2), 0.0, 1.0));\n  ret_3 = (ret_3 * clamp ((1.0 - \n    (2.0 * dot (tmpvar_14, vec3(0.32, 0.49, 0.29)))\n  ), 0.0, 1.0));\n  ret_3 = (ret_3 + tmpvar_14);\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_3;\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"shader_body\n{\nuv = lerp(uv_orig,uv,0.469);\n\nfloat2 d = texsize.zw * 300;\nfloat3 dx = ( GetBlur1(uv + float2(1,2)+d) - GetBlur1(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\nuv += float2(lum(dx),lum(dy))*texsize.zw*50;\nret = tex2d(sampler_fc_main, uv) - 0.01;\n\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 ret1;\nfloat2 zz, uv0, uv1,uv2,uv3,uv4;\nfloat smask;\n\nfloat aTan2(float y, float x) {float angle;\t float abs_y = abs(y);\nif (x >= 0) {float r = (x - abs_y) / (x + abs_y); angle = 1-r;} \nelse {float r = (x + abs_y) / (abs_y - x); angle = 3-r; }\t\nangle = angle * .25;\nreturn y < 0 ? -angle : angle;}\n\nshader_body { ;\nuv0 = uv;\nuv1 = (uv-.5)*aspect.xy;\n\nuv1 = (uv - .5) * aspect.xy;    \nfloat stars = 0; float dist, inten;\nint n = 1;\nint anz = 4;\nwhile (n <= anz) {\n  dist = (1-frac(0.97/anz*n+0.109*time)) * (1-0.24*rad);\n  inten =  (1-dist);\n  uv3 = (uv1+float2(q1,q2));\n   uv4 = 64*dist*uv3;\n  smask = (tex2D (sampler_pw_noise_lq,uv4/256)).g-0.81;\n  stars += max(stars,saturate(inten*(.1/length(abs(frac(uv4)-.5))*smask)));\nn++;\n}\nuv2 = uv1 - float2(q5,q6);\nfloat beat = (mid - .5) * (mid > 0.5)*2;\nfloat flash = 0.012/(length(uv2))*min(3,pow(beat,1));\nflash *= flash/(abs(frac(3*aTan2(uv2.x,uv2.y)+time*2)-.5));\nret1 = max(GetPixel(uv0)*2,GetBlur2(uv0)*2);\n//ret = saturate(.025/length(sin(uv3)))*float3(0.4,2.8,2.9); //MilkDrop2077 color mod\nret += saturate(pow(stars,2));\nret *= saturate(1-2*lum(ret1));\nret +=  ret1;\n//ret += 2*saturate(flash)*float3(2.9,2.3,2.7); //MilkDrop2077 color mod\n}"}