{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.5,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"wave_a":0.001,"wave_scale":0.64,"wave_smoothing":0.27,"warpanimspeed":0.01,"warpscale":0.01,"zoom":9.86086,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.96,"ob_size":0.015,"ob_r":0.84,"ob_g":0.7,"ob_b":1,"ob_a":0.18,"ib_size":0.5,"ib_r":0.98,"ib_g":0.27,"ib_b":0.24,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"rad":0.2,"b":0.4,"a":0.5,"a2":0.2,"border_a":0},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.ang=.4*a.time;a.x=.5+.3*Math.cos(1.23*a.time)+.03*Math.cos(.7*a.time);a.y=.5+.3*Math.sin(1.43*a.time)+.03*Math.sin(.7*a.time);a.r=.5+.5*Math.sin(.613*a.q8+1);a.g=.5+.5*Math.sin(.763*a.q8+2);a.b=.5+.5*Math.sin(.771*a.q8+5);a.r2=.5+.5*Math.sin(.635*a.q8+4);a.g2=.5+.5*Math.sin(.616*a.q8+1);a.b2=.5+.5*Math.sin(.538*a.q8+3);","init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\nx = 0.5 + 0.3*cos(time*1.23) + 0.03*cos(time*0.7);\ny = 0.5 + 0.3*sin(time*1.43) + 0.03*sin(time*0.7);\nr =0.5 + 0.5*sin(q8*0.613 + 1);\ng = 0.5 + 0.5*sin(q8*0.763 + 2);\nb = 0.5 + 0.5*sin(q8*0.771 + 5);\nr2 = 0.5 + 0.5*sin(q8*0.635 + 4);\ng2 = 0.5 + 0.5*sin(q8*0.616+ 1);\nb2 = 0.5 + 0.5*sin(q8*0.538 + 3);"},{"baseVals":{"enabled":1,"sides":32,"rad":0.2,"a":0.5,"a2":0.2},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.ang=.4*a.time;a.x=.5+.3*Math.cos(1.104*a.time)+.03*Math.cos(.7*a.time);a.y=.5+.3*Math.sin(1.27*a.time)+.03*Math.sin(.7*a.time);a.r=.5+.5*Math.sin(.613*a.q8+1);a.g=.5+.5*Math.sin(.763*a.q8+2);a.b=.5+.5*Math.sin(.771*a.q8+5);a.r2=.5+.5*Math.sin(.635*a.q8+4);a.g2=.5+.5*Math.sin(.616*a.q8+1);a.b2=.5+.5*Math.sin(.538*a.q8+3);","init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\nx = 0.5 + 0.3*cos(time*1.104) + 0.03*cos(time*0.7);\ny = 0.5 + 0.3*sin(time*1.27) + 0.03*sin(time*0.7);\nr =0.5 + 0.5*sin(q8*0.613 + 1);\ng = 0.5 + 0.5*sin(q8*0.763 + 2);\nb = 0.5 + 0.5*sin(q8*0.771 + 5);\nr2 = 0.5 + 0.5*sin(q8*0.635 + 4);\ng2 = 0.5 + 0.5*sin(q8*0.616+ 1);\nb2 = 0.5 + 0.5*sin(q8*0.538 + 3);"},{"baseVals":{"enabled":1,"rad":0.2,"a":0.5,"a2":0.2},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.ang=.4*a.time;a.x=.5+.3*Math.cos(1.23*a.time)+.03*Math.cos(.9*a.time);a.y=.5+.3*Math.sin(1.18*a.time)+.03*Math.sin(.9*a.time);a.r=.5+.5*Math.sin(.413*a.q8+1);a.g=.5+.5*Math.sin(.363*a.q8+2);a.b=.5+.5*Math.sin(.871*a.q8+5);a.r2=.5+.5*Math.sin(.835*a.q8+4);a.g2=.5+.5*Math.sin(.686*a.q8+1);a.b2=.5+.5*Math.sin(.938*a.q8+3);a.sides=360;","init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\nx = 0.5 + 0.3*cos(time*1.23) + 0.03*cos(time*0.9);\ny = 0.5 + 0.3*sin(time*1.18) + 0.03*sin(time*0.9);\nr =0.5 + 0.5*sin(q8*0.413 + 1);\ng = 0.5 + 0.5*sin(q8*0.363 + 2);\nb = 0.5 + 0.5*sin(q8*0.871 + 5);\nr2 = 0.5 + 0.5*sin(q8*0.835 + 4);\ng2 = 0.5 + 0.5*sin(q8*0.686+ 1);\nb2 = 0.5 + 0.5*sin(q8*0.938 + 3);\nsides = 360;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.gamma=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.vb=0;a.q9=0;a.v=0;a.mm=0;a.tt=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.q4=0;a.q16=0;a.q26=0;a.q19=0;a.q17=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.sparkadv=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass_att*a.treb_att*a.mid_att,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid_att,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb_att,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=2*a.vvt;a.v=2;a.bb-=a.vvb*a.v;a.mm-=a.vvm*a.v;a.tt-=a.vvt*a.v;a.q4=-a.bb;a.q5=-a.mm;\na.q6=-a.tt;a.q4=5*(a.q1+a.q2+a.q3);a.q5=5*(a.q1+a.q2+a.q3);a.q6=5*(a.q1+a.q2+a.q3);a.q7=1*(a.q1+a.q2+a.q3);a.q8=5*(a.q1+a.q2+a.q3);a.q9=5*(a.q1+a.q2+a.q3);a.q10=5*(a.q1+a.q2+a.q3);a.q11=5*(a.q1+a.q2+a.q3);a.q12=5*(a.q1+a.q2+a.q3);a.q13=5*(a.q1+a.q2+a.q3);a.q14=5*(a.q1+a.q2+a.q3);a.q15=5*(a.q1+a.q2+a.q3);a.q16=5*(a.q1+a.q2+a.q3);a.q17=5*(a.q1+a.q2+a.q3);a.q18=5*(a.q1+a.q2+a.q3);a.q19=5*(a.q1+a.q2+a.q3);a.q20=5*(a.q1+a.q2+a.q3);a.q21=5*(a.q1+a.q2+a.q3);a.q22=5*(a.q1+a.q2+a.q3);a.q23=5*(a.q1+a.q2+a.q3);\na.q24=5*(a.q1+a.q2+a.q3);a.q25=5*(a.q1+a.q2+a.q3);a.q26=5*(a.q1+a.q2+a.q3);a.q27=5*(a.q1+a.q2+a.q3);a.q28=5*(a.q1+a.q2+a.q3);a.q29=5*(a.q1+a.q2+a.q3);a.q30=5*(a.q1+a.q2+a.q3);a.q31=5*(a.q1+a.q2+a.q3);a.q32=5*(a.q1+a.q2+a.q3);a.echo_orient=1+above(Math.sin(div(a.time,2)),0);a.wrap=above(Math.sin(div(a.time,1)),0);a.warp=0;a.zoom=1+div(Math.sin(div(a.time,1)),30);a.mv_x=12*Math.sin(div(a.time,10))+52;a.mv_y=8*Math.cos(div(a.time,10))+40;a.sparkadv=a.sparkadv-.03+below(a.sparkadv,1);a.gamma=1+a.bass*\na.bass_att;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nv=2;\nbb = bb - vvb*v;\nmm = mm - vvm*v;\ntt = tt - vvt*v;\nq4 = -bb;\nq5 = -mm;\nq6 = -tt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*1;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*5;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\n\necho_orient=1 + above(sin(time/2), 0 );\nwrap=above(sin(time/1), 0 );\nwarp=0.0;\nzoom=1.00 + sin(time/1)/30;\nmv_x=sin(time/10)*12 + 52;\nmv_y=cos(time/10)*8 + 40;\nsparkadv=sparkadv-0.03 + below(sparkadv, 1);\ngamma=1 + bass*bass_att","pixel_eqs_eel":"","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\n  ).y * 1280.0) * texsize.z);\n  tmpvar_3.y = (((\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\n  ).y * 1024.0) * texsize.w);\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\n  ret_2.y = (ret_2.y + ((\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\n   * 0.1) + 0.02));\n  vec2 tmpvar_4;\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\n  ret_2.z = (texture (sampler_fc_main, (uv - tmpvar_4)).z - 0.004);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + tmpvar_4)).x);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\n  conway_1 = (conway_1 - fract(conway_1));\n  float tmpvar_5;\n  tmpvar_5 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\n  ret_2.x = (clamp ((1.0 - \n    abs((conway_1 - 3.0))\n  ), 0.0, 1.0) * (1.0 - tmpvar_5));\n  ret_2.x = (ret_2.x + (clamp (\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\n  , 0.0, 1.0) * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 moebius_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q11;\n  tmpvar_3.y = q12;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q17;\n  tmpvar_4.y = q18;\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - 0.5);\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\n  vec2 tmpvar_8;\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\n  vec2 tmpvar_9;\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\n  moebius_1 = (((tmpvar_9 / \n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\n  ) + tmpvar_3) * 0.5);\n  float tmpvar_10;\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\n  moebius_1 = (0.5 + ((\n    (1.0 - abs(((\n      fract((moebius_1 * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.95));\n  vec2 tmpvar_11;\n  tmpvar_11 = (0.5 + (tmpvar_6 * 0.2));\n  ret_2 = (texture (sampler_main, tmpvar_11).z * vec3(0.4, 0.0, 0.7));\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 1.0), vec3(clamp (texture (sampler_fc_main, moebius_1).y, 0.0, 1.0))) * (1.4 - pow (\n    (tmpvar_10 * 0.8)\n  , 0.3)));\n  ret_2 = (mix (mix (\n    mix (ret_2, vec3(4.0, 1.0, 0.0), vec3(((clamp (\n      (texture (sampler_fc_main, tmpvar_11).y - texture (sampler_pc_main, tmpvar_11).y)\n    , 0.0, 1.0) * 4.0) * (tmpvar_10 * tmpvar_10))))\n  , vec3(-4.0, -4.0, -4.0), texture (sampler_main, tmpvar_11).xxx), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_pc_main, tmpvar_11).x * 0.75))) - (roam_sin.zyx * roam_cos.ywx));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_2;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float1 d = 0.02;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*1280*texsize.z;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*1024*texsize.w;\n    float2 my_uv = uv - float2(dx,dy)*0.004;\n\n\n\n    ret.y = tex2D( sampler_pc_main, my_uv).y;\n    ret.y += (ret.y - GetBlur1(uv).y - 0.1)*.1 +0.02;\n\nret.z = tex2d(sampler_fc_main, uv - float2(0,1)*texsize.zw).z - 0.004;\n\n\nuv = uv_orig;\nfloat2 pixelsize = texsize.zw;\nfloat1 conway = tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).x;\n       conway += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).x;\n       conway += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).x;\n       conway += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).x;\n       conway += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).x;\n       conway += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).x;\n       conway += tex2D( sampler_pw_main, uv + float2(0,1)*pixelsize).x;\n       conway += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).x;\nconway -= frac(conway);\nfloat1 p = saturate (tex2D( sampler_pc_main, uv).x);\nret.x = saturate((1-abs(conway-3)))*(1-p);\nret.x += saturate(max(1-abs(conway-2),1-abs(conway-3)))*p;\n\n\n}","comp_hlsl":"shader_body\n{\n\nfloat2 ac = float2(q11,q12);\nfloat2 mu = float2(q13,q14);\nfloat2 c = float2(q15,q16);\nfloat2 d = float2(q17,q18);\n\nfloat2 z = (uv-0.5)*aspect.xy;\n\n// (c*z + d)\nfloat2 czd = float2(z.x*c.x-z.y*c.y,z.x*c.y-z.y*c.x) + d;\n// mu/(cz+d)\nfloat2 moebius = float2( mu.x*czd.x + mu.y*czd.y , mu.y*czd.x-mu.x*czd.y )/(czd.x*czd.x+czd.y*czd.y) + ac;\n\nmoebius*=0.5;\nfloat l = length(moebius);\nmoebius = 0.5 + (1.0 - abs( frac( moebius * 0.5 ) * 2 - 1.0 )-0.5)*0.95;\n\nfloat2 uvr = 0.5 + (uv-0.5)*0.2;\n\nret = GetPixel(uvr).z*float3(0.4,0,0.7);\nret = lerp(ret,float3(0,1,1),saturate(tex2d(sampler_fc_main,moebius).y))*(1.4-pow(l*0.8,0.3));\nret = lerp(ret,float3(4,1,0),saturate(tex2d(sampler_fc_main,uvr).y-tex2d(sampler_pc_main,uvr).y)*4*(l*l));\nret = lerp(ret,-4,GetPixel(uvr).x);\nret = lerp(ret,2,tex2d(sampler_pc_main,uvr).x*0.75);\nret-=roam_sin.zyx*roam_cos.ywx;\n//ret = GetPixel(uv);\n}"}