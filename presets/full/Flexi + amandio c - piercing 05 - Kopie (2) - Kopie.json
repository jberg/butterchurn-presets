{"version":2,"baseVals":{"rating":4,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.78903,"ang":0.62832,"tex_zoom":1.02009,"r":0,"g":1,"b":1,"r2":0.7,"b2":1,"border_a":0},"init_eqs_str":"a.vx=0;a.vy=0;","frame_eqs_str":"","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.y3=0;a.y1=0;a.xx=0;a.res=0;a.q12=0;a.x1=0;a.vx3=0;a.q13=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.c_x=0;a.c_y=0;a.q9=0;a.d1=0;a.v=0;a.si1=0;a.vx4=0;a.diff=0;a.x3=0;a.q23=0;a.q24=0;a.d2=0;a.q11=0;a.q10=0;a.xx2=0;a.q4=0;a.yy1=0;a.vy4=0;a.dir=0;a.x4=0;a.r=0;a.x2=0;a.beat=0;a.vol=0;a.vy2=0;a.y2=0;a.size=0;a.q2=0;a.q14=0;a.si2=0;a.vx2=0;a.q3=0;a.yy=0;a.y4=0;a.q7=0;a.vy3=0;a.strength=0;a.xx1=0;a.velocity=0;a.q8=0;a.c_x=.5;a.c_y=.5;","frame_eqs_str":"a.sx=1+.01*mod(8*a.bass,8)*equal(mod(a.time,Math.floor(24-2*a.bass)),0);a.sy=1+.01*mod(8*a.mid,8)*equal(mod(a.time,12+Math.floor(24-2*a.bass)),0);a.q1=a.aspectx;a.q2=a.aspecty;a.rot=0;a.zoom=1;a.warp=0;a.vol=8*a.bass+4*a.mid+2*a.treb;a.vol*=above(a.vol,17);a.monitor=a.vol;a.beat=above(a.vol,a.res);a.diff=(1-a.beat)*a.diff+a.beat*(a.vol-a.res);a.res=a.beat*(a.vol+2*a.diff)+(1-a.beat)*(a.res-div(60*(.04*a.diff+.12),a.fps));a.res=Math.max(0,a.res);a.monitor=a.res;a.r=.00001<Math.abs(a.beat)?\n.0001*(rand(200)-100):a.r;a.rot=a.r;a.c_x=.00001<Math.abs(a.beat)?.5+.005*(rand(200)-100):a.c_x;a.c_y=.00001<Math.abs(a.beat)?.5+.005*(rand(200)-100):a.c_y;a.q23=a.c_x;a.q24=a.c_y;a.xx1=.9*a.xx1+.01*a.bass;a.xx2=.9*a.xx2+.01*a.treb;a.yy1=.94*a.yy1+.0075*(a.treb+a.bass);a.x1=.5+2*(a.xx1-a.xx2);a.y1=.4+1.5*a.yy1;a.dt=div(.03,a.fps);a.vx2=a.vx2*(1-2*a.dt)+10*a.dt*(a.x1+a.x3-2*a.x2);a.vy2=a.vy2*(1-2*a.dt)+a.dt*(10*(a.y1+a.y3-2*a.y2)-.5);a.vx3=a.vx3*(1-2*a.dt)+10*a.dt*(a.x2+a.x4-2*a.x3);a.vy3=a.vy3*(1-\n2*a.dt)+a.dt*(10*(a.y2+a.y4-2*a.y3)-.5);a.vx4=a.vx4*(1-2*a.dt)+10*a.dt*(a.x3-a.x4);a.vy4=a.vy4*(1-2*a.dt)+a.dt*(10*(a.y3-a.y4)-.5);a.x2+=a.vx2;a.y2+=a.vy2;a.x3+=a.vx3;a.y3+=a.vy3;a.x4+=a.vx4;a.y4+=a.vy4;a.vx2=.00001<Math.abs(above(a.x2,0))?a.vx2:.5*Math.abs(a.vx2);a.vx2=.00001<Math.abs(below(a.x2,1))?a.vx2:.5*-Math.abs(a.vx2);a.vx3=.00001<Math.abs(above(a.x3,0))?a.vx3:.5*Math.abs(a.vx3);a.vx3=.00001<Math.abs(below(a.x3,1))?a.vx3:.5*-Math.abs(a.vx3);a.vx4=.00001<Math.abs(above(a.x4,0))?a.vx4:.5*Math.abs(a.vx4);\na.vx4=.00001<Math.abs(below(a.x4,1))?a.vx4:.5*-Math.abs(a.vx4);a.vy2=.00001<Math.abs(above(a.y2,0))?a.vy2:.5*Math.abs(a.vy2);a.vy2=.00001<Math.abs(below(a.y2,1))?a.vy2:.5*-Math.abs(a.vy2);a.vy3=.00001<Math.abs(above(a.y3,0))?a.vy3:.5*Math.abs(a.vy3);a.vy3=.00001<Math.abs(below(a.y3,1))?a.vy3:.5*-Math.abs(a.vy3);a.vy4=.00001<Math.abs(above(a.y4,0))?a.vy4:.5*Math.abs(a.vy4);a.vy4=.00001<Math.abs(below(a.y4,1))?a.vy4:.5*-Math.abs(a.vy4);a.q1=a.x1;a.q2=a.x2;a.q3=a.x3;a.q4=a.x4;a.q5=a.y1;a.q6=a.y2;a.q7=\na.y3;a.q8=a.y4;a.q9=div(1,a.aspectx);a.q10=div(1,a.aspecty);a.q11=a.aspectx;a.q12=a.aspecty;a.q13=.8*sqrt(a.vx4*a.vx4+a.vy4*a.vy4);a.q14=Math.atan2(a.vx4,a.vy4);","pixel_eqs_str":"a.d=pow(sqrt(sqr(a.x-a.q3)+sqr(a.y-a.q4)),2)-0;a.v=.03;a.dx=a.v*(a.x-a.q23)*a.d;a.dy=a.v*(a.y-a.q24)*a.d;a.x=.5+(a.x-.5)*a.q11;a.y=.5+(a.y-.5)*a.q12;a.dir=-a.q14+Math.asin(1);a.velocity=a.q13;a.strength=100;a.size=.07;a.xx=a.q4;a.yy=1-a.q8;a.x1=a.xx+Math.cos(a.dir+1.5708)*a.size;a.y1=a.yy-Math.sin(a.dir+1.5708)*a.size;a.x2=a.xx-Math.cos(a.dir+1.5708)*a.size;a.y2=a.yy+Math.sin(a.dir+1.5708)*a.size;a.d1=sqrt((a.x1-a.x)*(a.x1-a.x)+(a.y1-a.y)*(a.y1-a.y))-2*a.size;a.si1=1-div(1,\n1+pow(2,100*-a.d1));a.d2=sqrt((a.x2-a.x)*(a.x2-a.x)+(a.y2-a.y)*(a.y2-a.y))-2*a.size;a.si2=1-div(1,1+pow(2,100*-a.d2));a.dx+=(a.si1*Math.sin(a.y1-a.y)*a.d1-a.si2*Math.sin(a.y2-a.y)*a.d2)*a.strength*a.velocity;a.dy+=(-a.si1*Math.sin(a.x1-a.x)*a.d1+a.si2*Math.sin(a.x2-a.x)*a.d2)*a.strength*a.velocity;","init_eqs_eel":"c_x = 0.5;\nc_y = 0.5;","frame_eqs_eel":"sx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\n\nq1 = aspectx;\nq2 = aspecty;\nrot = 0;\nzoom = 1;\nwarp = 0;\n\n\nvol = bass*8 + mid*4 + treb*2;\nvol = vol*above(vol,17);\nmonitor = vol;\nbeat = above(vol,res);\ndiff = (1-beat)*diff + beat*(vol-res);\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\nres = max(0,res);\nmonitor = res;\n\nr = if(beat, 0.01*(rand(200)-100)*0.01,r);\nrot = r;\n\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\n\n\nq23 = c_x;\nq24 = c_y;\n\n// elastic thread code by Flexi\n\nxx1 = xx1*0.9 + (bass)*0.01;\nxx2 = xx2*0.9 + (treb)*0.01;\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\nx1 = 0.5 + (xx1-xx2)*2;\ny1 = 0.4 + yy1*1.5;\ndt = 0.03/fps;\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\nx2 = x2 + vx2; y2 = y2 + vy2;\nx3 = x3 + vx3; y3 = y3 + vy3;\nx4 = x4 + vx4; y4 = y4 + vy4;\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\nq9 = 1/aspectx;\nq10 = 1/aspecty;\nq11 = aspectx;\nq12 = aspecty;\nq13 = sqrt(vx4*vx4 + vy4*vy4)*0.8;\nq14 = atan2(vx4,vy4);","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),2)-0);\nv = 0.03;\ndx = v*(x-q23)*d;\ndy = v*(y-q24)*d;\n\n\nx = 0.5 + (x-0.5)*q11;\ny = 0.5 + (y-0.5)*q12;\ndir = -q14*1 + asin(1)*1;\n\nvelocity = q13;\nstrength = 100;\nsize = 0.07;\n\nxx = q4;\nyy = 1-q8;\n\n\nx1 = xx   +cos(dir+1.5708)*size;\ny1 = yy -sin(dir+1.5708)*size;\n\nx2 = xx   -cos(dir+1.5708)*size;\ny2 = yy +sin(dir+1.5708)*size;\n\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-size*2;\nsi1 = 1- 1/(1+pow(2,-d1*100));\n\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-size*2;\nsi2 = 1- 1/(1+pow(2,-d2*100));\n\ndx += (si1*sin(y1-y)*d1  - si2*sin(y2-y)*d2)*strength*velocity;\ndy += (-si1*sin(x1-x)*d1 + si2*sin(x2-x)*d2)*strength*velocity;","warp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabled = uv;\n  vec2 tmpvar_3;\n  tmpvar_3.x = xlat_mutabledx.y;\n  tmpvar_3.y = xlat_mutabledy.y;\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv_orig);\n  ret_1.y = ((texture (sampler_main, (uv - \n    ((tmpvar_3 * texsize.zw) * 6.0)\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\n  ret_1.z = ((texture (sampler_main, (uv - \n    ((tmpvar_4 * texsize.zw) * 6.0)\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\n   * 0.15) + (tmpvar_2 * 0.0042)).x);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = q3;\n  tmpvar_1.y = q4;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q6;\n  tmpvar_2.y = q7;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q9;\n  tmpvar_3.y = q10;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q12;\n  tmpvar_4.y = q13;\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 1.25);\n  vec3 tmpvar_6;\n  tmpvar_6 = (texture (sampler_main, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz);\n  vec3 tmpvar_7;\n  tmpvar_7 = (texture (sampler_main, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  vec2 x_9;\n  x_9 = ((uv - (tmpvar_8 * 8.0)) - tmpvar_1);\n  vec2 tmpvar_10;\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  vec2 x_11;\n  x_11 = ((uv - (tmpvar_10 * 8.0)) - tmpvar_2);\n  vec2 tmpvar_12;\n  tmpvar_12.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_12.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  vec2 x_13;\n  x_13 = ((uv - (tmpvar_12 * 8.0)) - tmpvar_3);\n  vec2 tmpvar_14;\n  tmpvar_14.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_14.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  vec2 x_15;\n  x_15 = ((uv - (tmpvar_14 * 8.0)) - tmpvar_4);\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = mix (texture (sampler_main, uv).xyz, max (max (\n    (vec3((1.0 - pow (sqrt(\n      dot (x_9, x_9)\n    ), 0.2))) * vec3(2.0, 1.0, -1.0))\n  , \n    (vec3((1.0 - pow (sqrt(\n      dot (x_11, x_11)\n    ), 0.2))) * vec3(2.0, -1.0, 1.0))\n  ), max (\n    (vec3((1.0 - pow (sqrt(\n      dot (x_13, x_13)\n    ), 0.2))) * vec3(-1.0, 1.0, 2.0))\n  , \n    (vec3((1.0 - pow (sqrt(\n      dot (x_15, x_15)\n    ), 0.2))) * vec3(1.0, -1.0, 2.0))\n  )), vec3(0.5, 0.5, 0.5));\n  ret = tmpvar_16.xyz;\n }","warp_hlsl":"float2 d, uv_y, uv_z;\nfloat3 dx, dy;\n\nshader_body\n{\n\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n   float3 rand = tex2D(sampler_noise_lq, dither_uv).xyz-0.5;\n\n   d = texsize.zw*4;\n   dx = GetBlur1(uv_orig + float2(1,0)*d) - GetBlur1(uv_orig - float2(1,0)*d);\n   dy = GetBlur1(uv_orig + float2(0,1)*d) - GetBlur1(uv_orig - float2(0,1)*d);\n\n   d = lerp(uv_orig,uv,1);\n   uv_y = d - float2(dx.y,dy.y)*texsize.zw*6;\n   uv_z = d - float2(dx.z,dy.z)*texsize.zw*6;\n\n\n   ret.y = GetPixel(uv_y).y - 0.008 + (1-GetPixel(uv_orig).x)*0.018;\n   ret.z = GetPixel(uv_z).z - 0.008 + (0+GetPixel(uv_orig).x)*0.018;\n\n    ret.x = tex2D( sampler_fc_main, uv+rand*texsize.zw*.5 ).x;\n    ret.x += (ret.x - GetBlur3(uv).x)*0.15 + rand*0.0042;\n}","comp_hlsl":"shader_body\n{\nfloat2 pos1 = float2(q3,q4);\nfloat2 pos2 = float2(q6,q7);\nfloat2 pos3 = float2(q9,q10);\nfloat2 pos4 = float2(q12,q13);\n\nfloat3 col1 = float3(2,1,-1);\nfloat3 col2 = float3(2,-1,1);\nfloat3 col3 = float3(-1,1,2);\nfloat3 col4 = float3(1,-1,2);\n\n    float2 d = texsize.zw*1.25;\n    float3 dx = ( GetPixel(uv + float2(1,0)*d) - GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv + float2(0,1)*d) - GetPixel(uv-float2(0,1)*d) );\n\n    float c = 8;\n    float dd = 1;\n\nfloat3 light1 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos1),.2);\nfloat3 light2 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos2),.2);\nfloat3 light3 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos3),.2);\nfloat3 light4 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos4),.2);\n\nret = lerp(GetPixel(uv),max(max(light1*col1,light2*col2),max(light3*col3,light4*col4)),0.5);\n\n}"}