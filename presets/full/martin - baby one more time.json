{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.229,"wave_smoothing":0.9,"wave_mystery":0.2,"modwavealphastart":0,"modwavealphaend":0,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":33,"textured":1,"rad":0.80375,"tex_ang":0.06283,"tex_zoom":1.03922,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":39,"thickoutline":1,"num_inst":41,"x":0.6,"rad":0.033,"tex_zoom":6.16617,"r":0.4,"g":1,"b":0.7,"a":0.9,"g2":0,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = q21*.2;","init_eqs_eel":"","frame_eqs_eel":"rad = q21*.2;"},{"baseVals":{"enabled":1,"sides":12,"num_inst":256,"x":0.123,"y":0,"rad":0.20303,"tex_zoom":0.49981,"g":1,"b":1,"b2":1,"a2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.k1=0;a.q15=0;a.q17=0;a.q11=0;a.q16=0;a.q32=0;a.q12=0;","frame_eqs_str":"a.k1=6.3*div(a.instance,a.num_inst);a.x=.5+a.q15*Math.cos(a.k1+a.q17)+-.2*a.q11;a.y=.5+a.q16*a.q32*Math.sin(a.k1+a.q17+a.time)+.2*a.q12;a.a=.5;a.a2=.1;a.r=.5;a.b=1;a.g=1;a.rad=Math.max(.2*Math.max(Math.abs(a.q15),Math.abs(a.q16)),.04);","init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst*6.3;\n//q15 = 0; q16 = 0;\n\nx = .5 +q15 *cos(k1+q17) + q11*-.2; \ny = .5 +q16 *q32*sin(k1+q17+time)+q12*.2;\n\n\na = .5;\na2 = .1; r = .5; b = 1; g = 1;\nrad = max(max(abs(q15),abs(q16))*.2,.04);\n"},{"baseVals":{"sides":63,"rad":0.01645,"tex_zoom":1.31212,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.89152,"smoothing":1,"g":0.6,"b":0,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.01348,"smoothing":0,"g":0.6,"b":0,"a":0.31,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"g":0.6,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index=0;a.q12=0;a.peak_=0;a.q22=0;a.q15=0;a.q1=0;a.dec_med=0;a.ran1_=0;a.rott=0;a.my=0;a.is_beat=0;a.q24=0;a.dec_slow=0;a.ran2=0;a.q11=0;a.ma=0;a.ran3=0;a.q16=0;a.p2=0;a.avg=0;a.trig=0;a.mx=0;a.beat=0;a.q17=0;a.p1=0;a.ran2_=0;a.peak=0;a.q2=0;a.q27=0;a.t0=0;a.ran1=0;a.q32=0;a.ran3_=0;a.q28=0;a.peak__=0;a.ran1=2*(div(rand(100),100)-.5);a.ran2=2*(div(rand(100),100)-.5);a.ran3=2*(div(rand(100),100)-.5);a.index2=3;","frame_eqs_str":"a.dec_med=pow(.85,div(30,a.fps));a.dec_slow=pow(.96,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,-.5+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,32);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q22=a.peak;a.q27=a.index;a.q28=a.index2+1;a.q24=a.is_beat;a.trig=a.is_beat*\nequal(mod(a.index,2),0);a.p1=a.trig*(a.p1+1)+(1-a.trig)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.trig=a.is_beat*equal(mod(a.index,24),0);a.ran1=.00001<Math.abs(a.trig)?2*(div(rand(100),100)-.5):a.ran1;a.trig=a.is_beat*equal(mod(a.index,16),0);a.ran2=.00001<Math.abs(a.trig)?2*(div(rand(100),100)-.5):a.ran2;a.trig=a.is_beat*equal(mod(a.index,12),0);a.ran3=.00001<Math.abs(a.trig)?2*(div(rand(100),100)-.5):a.ran3;a.ran1_=a.dec_med*\na.ran1_+(1-a.dec_med)*a.ran1;a.ran2_=a.dec_med*a.ran2_+(1-a.dec_med)*a.ran2;a.ran3_=a.dec_med*a.ran3_+(1-a.dec_med)*a.ran3;a.q11=a.ran1_;a.q12=a.ran2_;a.dx=.02*a.ran1_;a.dy=.02*a.ran2_;a.zoom=1+.05*a.ran3_;a.peak_=a.dec_med*a.peak_+(1-a.dec_med)*a.peak;a.peak__=a.dec_slow*a.peak__+(1-a.dec_slow)*a.peak_;a.ma+=div(50*(a.peak_-a.peak__),a.fps)*bnot(mod(a.index,2));a.mx=a.mx*a.dec_slow+(1-a.dec_slow)*Math.cos(1.3*a.ma);a.my=a.my*a.dec_slow+(1-a.dec_slow)*Math.sin(a.ma);a.q15=a.mx;a.q16=.8*a.my;a.q17=\n.8*a.ma;a.q32=a.aspecty;a.monitor=a.dx;","pixel_eqs_str":"","init_eqs_eel":"ran1 = (rand(100)/100-.5)*2;\nran2 = (rand(100)/100-.5)*2;\nran3 = (rand(100)/100-.5)*2;\nindex2 = 3;","frame_eqs_eel":"dec_med = pow (0.85, 30/fps);\ndec_slow = pow (0.96, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, -.5+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %32;\nindex2 = (index2 + is_beat*bnot(index))%4;\nq22 = peak;\nq27 = index;\nq28 = index2+1;\nq24 = is_beat;\n\ntrig =  is_beat*equal(index%2,0);\np1 =  trig*(p1+1) + (1-trig)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\n\n\ntrig = is_beat*equal(index%24,0);\nran1 = if(trig,(rand(100)/100-.5)*2,ran1);\n\ntrig = is_beat*equal(index%16,0);\nran2 = if(trig,(rand(100)/100-.5)*2,ran2);\n\ntrig = is_beat*equal(index%12,0);\nran3 = if(trig,(rand(100)/100-.5)*2,ran3);\n\nran1_ = dec_med*ran1_ + (1-dec_med)*ran1;\nran2_ = dec_med*ran2_ + (1-dec_med)*ran2;\nran3_ = dec_med*ran3_ + (1-dec_med)*ran3;\nq11 = ran1_;\nq12 = ran2_;\n\n\ndx = .02*ran1_;\ndy = .02*ran2_;\nzoom = 1+.05*ran3_;\n\npeak_ = dec_med*peak_ + (1-dec_med)*peak;\npeak__ = dec_slow*peak__ + (1-dec_slow)*peak_;\n//peak__ = 1;\n\nma = ma + (peak_-peak__)*50/fps * bnot(index%2);\nmx=mx*dec_slow+(1-dec_slow)*cos(ma*1.3);\nmy=my*dec_slow+(1-dec_slow)*sin(ma);\n\nq15 = mx;\nq16 = my*.8;\nq17 = ma*.8;\nq32 = aspecty;\nmonitor = dx;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\n  float tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  tmpvar_3 = (dot ((\n    (tmpvar_4.xyz * scale1)\n   + bias1), vec3(0.32, 0.49, 0.29)) * 4.0);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\n  tmpvar_5[1u].x = sin(tmpvar_3);\n  tmpvar_5[1u].y = cos(tmpvar_3);\n  uv_1 = ((tmpvar_2 + (\n    (0.1 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\n   * \n    (tmpvar_2 * tmpvar_5)\n  )) - 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6 = ((uv_1 * texsize.xy) * 0.02);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\n  uv_1 = (uv_1 - ((tmpvar_7 * texsize.zw) * (q28 * 4.0)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ((texture (sampler_main, uv_1).xyz * 0.99) - 0.02);\n  ret = tmpvar_8.xyz;\n }","comp":"vec2 xlat_mutabledz;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * 4.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * 4.0);\n  xlat_mutabledz.x = ((2.0 * dot (texture (sampler_main, \n    (uv + tmpvar_4)\n  ).xyz, vec3(0.32, 0.49, 0.29))) - (2.0 * dot (texture (sampler_main, \n    (uv - tmpvar_4)\n  ).xyz, vec3(0.32, 0.49, 0.29))));\n  xlat_mutabledz.y = ((2.0 * dot (texture (sampler_main, \n    (uv + tmpvar_6)\n  ).xyz, vec3(0.32, 0.49, 0.29))) - (2.0 * dot (texture (sampler_main, \n    (uv - tmpvar_6)\n  ).xyz, vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, uv);\n  xlat_mutabledz = (xlat_mutabledz * 12.0);\n  vec2 tmpvar_8;\n  tmpvar_8 = sin(((\n    (2.0 * tmpvar_2)\n   + \n    (xlat_mutabledz * 0.8)\n  ) + vec2(1.0, 1.0)));\n  vec2 tmpvar_9;\n  tmpvar_9 = sin(((\n    (2.0 * tmpvar_2)\n   + xlat_mutabledz) + vec2(1.0, 1.0)));\n  vec2 tmpvar_10;\n  tmpvar_10 = sin(((\n    (2.0 * tmpvar_2)\n   + \n    (xlat_mutabledz * 1.2)\n  ) + vec2(1.0, 1.0)));\n  vec3 tmpvar_11;\n  tmpvar_11.x = (0.1 / sqrt(dot (tmpvar_8, tmpvar_8)));\n  tmpvar_11.y = (0.1 / sqrt(dot (tmpvar_9, tmpvar_9)));\n  tmpvar_11.z = (0.1 / sqrt(dot (tmpvar_10, tmpvar_10)));\n  ret_1 = ((tmpvar_11 - (tmpvar_7.xyz * 0.15)) + (tmpvar_7.y / 2.0));\n  ret_1 = (ret_1 * (1.0 + ret_1));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat2 d = (uv1);\nfloat3 mus = GetBlur1(uv);\nfloat k = lum(mus)*4;\n\nd = mul(uv1,float2x2(cos(k),sin(k),-sin(k),cos(k)));\nuv1 += .10*lum(GetBlur1(uv))*d;\nuv = uv1-.5 + q5*0;;\n\nfloat2 zz = uv * texsize.xy *.02;\nfloat h1 = (cos(zz.y*q1) * sin(-zz.y));\nfloat h2 = (sin(zz.x) * cos(zz.y*q2));\n\nuv -= float2(h1,h2)*texsize.zw * q28*4;\n\nfloat3 crisp = tex2D(sampler_main,uv) ;\n\nret = crisp*.99 -.02;\n}","comp_hlsl":"\nfloat2 rs, rs0, uv2, uv3,uv4,dz;\nfloat3 noise, ret1, neu;\n\nshader_body {\nfloat2 uv1 = (uv-.5 )*aspect.xy;\n\nfloat2 hor = float2 (texsize.z,0)*4;\nfloat2 ver = float2 (0, texsize.w)*4;\n\n//    uv *= aspect.yx;\nuv3 = uv;\n\ndz.x = (2*lum(GetPixel(uv3+hor))- 2*lum(GetPixel(uv3-hor)));\ndz.y = (2*lum(GetPixel(uv3+ver))- 2*lum(GetPixel(uv3-ver)));\nneu = GetPixel(uv3+dz.yx*0);\nret1 = neu;\n\ndz = dz*12;\nfloat2 pos = 1;\nfloat2 uv_rr = sin(2*uv1 + dz*.8 + pos);\nfloat2 uv_gg = sin(2*uv1 + dz*1 + pos);\nfloat2 uv_bb = sin(2*uv1 + dz*1.2 +pos);\nfloat3 fac = .1;\nfloat3 mus = float3(fac.x/length(uv_rr),\nfac.y/length(uv_gg),\nfac.z/length(uv_bb));\n\nret = mus -  ret1 *.15 + ret1.g/2;\nret *= 1+ret;\n}"}