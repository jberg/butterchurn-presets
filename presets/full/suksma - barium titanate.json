{"version":2,"baseVals":{"rating":1,"gammaadj":1.7,"decay":0.968,"echo_zoom":1,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.498,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.95,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0.1},"shapes":[{"baseVals":{"sides":7,"textured":1,"rad":0.51645,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":7,"textured":1,"y":0.74,"rad":0.61775,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q2=0;","frame_eqs_str":"a.y=.4*Math.sin(div(a.q2,17))+.5;","init_eqs_eel":"","frame_eqs_eel":"y = sin(q2/17)*0.4 + 0.5;\n\n//ang = q2/9"},{"baseVals":{"enabled":1,"sides":7,"additive":1,"textured":1,"y":0.74,"rad":0.29289,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q2=0;","frame_eqs_str":"a.x=.1*Math.sin(div(a.q2,8))+.5;a.y=.1333*Math.cos(div(a.q2,8))+.5;a.y+=.4*Math.sin(div(a.q2,4));","init_eqs_eel":"","frame_eqs_eel":"x= sin(q2/8)*0.1 + 0.5;\ny= cos(q2/8)*0.1*1.333 + 0.5;\n\ny = y + sin(q2/4)*0.4;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.yq=0;a.xp=0;a.n2=0;a.s=0;a.yp=0;a.t1=0;a.advance=0;a.zq=0;a.x_screen=0;a.y_screen=0;a.tm=0;a.zp=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.yq=a.zp;a.zq=a.yp;a.yp=a.yq;a.zp=a.zq;a.zp=a.zp;a.zp+=1.1;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp);a.x=a.x_screen;\na.y=a.y_screen;a.r=1;a.g=1;a.b=1;a.n2=Math.abs(1.283*a.sample-3.1415);a.tm=div(a.time,7);a.r=.5*Math.sin(a.n2+a.tm)+.5;a.g=.5*Math.sin(a.n2+2.1+a.tm)+.5;a.b=.5*Math.sin(a.n2+4.2+a.tm)+.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nyq=zp;\nzq=yp;\nyp=yq;\nzp=zq;\n\nzp=zp;\n\nzp=zp+1.1;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp ;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n\n\n\nn2=abs((sample*1.283)-3.1415);\n\ntm =time / 7;\nr=sin(n2+tm)*0.5+0.5;\ng=sin(n2+2.1+tm)*0.5+0.5;\nb=sin(n2+4.2+tm)*0.5+0.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"a":0.47,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xs=sin(sample*6.28);\nys=cos(sample*6.28);\nxs=xs*0.7 + 0.5;\nys=ys*0.7 + 0.5;\nxs=min(xs,0.958);\nxs=max(xs,0.042);\nys=min(ys,0.988);\nys=max(ys,0.012);\nx=xs;y=ys;\n\nn2=abs((sample*6.283)-3.1415);\n\nr=sin(n2+time)*0.5+0.5;\ng=sin(n2+2.1+time)*0.5+0.5;\nb=sin(n2+4.2+time)*0.5+0.5;\n\na = above( y , 0.98 )","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xs=sin(sample*6.28);\nys=cos(sample*6.28);\nxs=xs*0.7 + 0.5;\nys=ys*0.7 + 0.5;\nxs=min(xs,0.958);\nxs=max(xs,0.042);\nys=min(ys,0.988);\nys=max(ys,0.012);\nx=xs;y=ys;\n\nn2=abs((sample*6.283)-3.1415);\n\nr=sin(n2+time)*0.5+0.5;\ng=sin(n2+2.1+time)*0.5+0.5;\nb=sin(n2+4.2+time)*0.5+0.5;\n\na = above( y , 0.98 )"}],"init_eqs_str":"","frame_eqs_str":"a.warp=0;a.zoom=1.001;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nzoom = 1.001;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_noise_lq, (rand_frame.xy + \n    ((uv * texsize_noise_lq.zw) * texsize.xy)\n  )) * 2.0) - 1.0);\n  ret_1 = (texture (sampler_pw_main, (uv + (\n    (tmpvar_2.zw * texsize.zw)\n   * 0.5))).xyz + ((0.59 - \n    (0.2 * rad)\n  ) * tmpvar_2.xyz));\n  vec3 tmpvar_3;\n  tmpvar_3 = clamp (((\n    (ret_1 - 0.5)\n   * 3.0) + 0.25), 0.0, 1.0);\n  ret_1.x = tmpvar_3.x;\n  ret_1.yz = tmpvar_3.xx;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv3_2;\n  vec3 col_3;\n  col_3 = vec3(0.0, 0.0, 0.0);\n  uv3_2 = (uv * 0.25);\n  for (int i_1 = 0; i_1 < 16; i_1++) {\n    uv3_2 = (uv3_2 + ((\n      float(i_1)\n     * vec2(0.25, 0.0)) - (\n      float((0.0 == (float(mod (float(i_1), 4.0)))))\n     * vec2(0.0, 0.25))));\n    col_3 = mix (col_3, vec3((float(i_1) / 16.0)), vec3(clamp ((\n      -(texture (sampler_main, uv3_2).y)\n     + texture (sampler_pw_main, \n      fract(uv3_2)\n    ).y), 0.0, 1.0)));\n  };\n  vec3 tmpvar_4;\n  tmpvar_4.z = 0.04;\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_4.x = (texture (sampler_main, (uv + tmpvar_5)).xyz - texture (sampler_main, (uv - tmpvar_5)).xyz).x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_4.y = (texture (sampler_main, (uv + tmpvar_6)).xyz - texture (sampler_main, (uv - tmpvar_6)).xyz).x;\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.6;\n  tmpvar_7.xy = (uv - 0.5);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, uv);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = mix (mix ((tmpvar_8.z * vec3(0.6, 0.2, 1.0)), vec3(1.0, 1.0, 1.0), (col_3 * \n    clamp ((1.0 - ((\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1).x * 2.0)), 0.0, 1.0)\n  )), vec3(1.1, 0.8, 0.5), vec3(((\n    (dot (normalize(tmpvar_4), tmpvar_7) * 0.5)\n   + 0.5) * tmpvar_8.x)));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    float4 N = tex2D(sampler_noise_lq, rand_frame.xy + uv*\n                             texsize_noise_lq.zw*texsize.xy )*2-1;\n    // sample previous frame\n    ret = tex2D( sampler_pw_main, uv + N.zw*texsize.zw*0.5 ).xyz;\n    ret += (0.59-0.2*rad)*N.xyz;\n\n\n    ret = saturate((ret-0.5)*3 + 0.25);\n    ret.yz = ret.x;\n}","comp_hlsl":"\nshader_body\n{\n\nfloat2 uv2 = uv*0.25;\nfloat3 col = 0;\nfloat2 uv3 = uv2;\nfor(int i = 0; i<16; i++){\n    uv3 += i*float2(0.25,0) - (0==(i)%4)*float2(0,0.25);\n    col = lerp(col,i/16.0,saturate(-GetPixel(uv3).y+tex2d(sampler_pw_main,frac(uv3)).y));\n\n}\nret = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\n    float gx = GetPixel(uv+float2(1,0)*texsize.zw) - GetPixel(uv-float2(1,0)*texsize.zw);\n    float gy = GetPixel(uv+float2(0,1)*texsize.zw) - GetPixel(uv-float2(0,1)*texsize.zw);\n    float3 g = normalize(float3(gx, gy, .04));\n\n    ret = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(uv-0.5,0.6))*0.5+0.5)*GetPixel(uv).x);\n\n//ret = GetPixel(uv);\n}\n"}