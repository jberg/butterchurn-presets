{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.232543,"wave_smoothing":0.81,"wave_mystery":-0.12,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0.7},"shapes":[{"baseVals":{"enabled":1,"y":0.06,"rad":0.981146,"ang":0.753982,"tex_zoom":0.33105,"r":0,"g":0.7,"b":0.79,"a":0.08,"g2":0.5,"b2":0.69,"a2":0.03,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":0.476928,"ang":1.130974,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.81,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = time;","init_eqs_eel":"","frame_eqs_eel":"ang = time;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"\nx = .5 + sample*((100*sample)%2-.5);\nk1 = (100*sample)%4;\nx = sample ;\n\nval = value1;\ny = val * (.25-(sample-.5)*(sample-.5)) + .45;\n\nk1 = (10*bass_att)%4;\n\n\nr = .8; g = .8; b = 1;\na = bnot(k1); a = .1;","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\nx = .5 + sample*((100*sample)%2-.5);\nk1 = (100*sample)%4;\nx = sample ;\n\nval = value1;\ny = val * (.25-(sample-.5)*(sample-.5)) + .45;\n\nk1 = (10*bass_att)%4;\n\n\nr = .8; g = .8; b = 1;\na = bnot(k1); a = .1;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.index2=0;a.index4=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q28=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),5);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_slow*a.p2+(1-a.dec_slow)*a.p1;a.rott=div(3.14159265359*a.p2,2);a.q27=8-a.index;a.q28=a.index3;a.q29=a.index4;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.warp=.3*Math.sin(6.28*div(a.index+a.index2,8));","pixel_eqs_str":"a.rot=-.04*a.q2*(1-a.rad);a.dx=0;a.zoom=1.002+.04*a.rad;","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%5;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_slow * p2+ (1-dec_slow)*p1;\nrott = p2 * 3.14159265359/2;\n\nq27 = 8-index;\nq28 = index3;\nq29 = index4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nwarp = .3 * sin((index+index2)/8*6.28);","pixel_eqs_eel":"rot = -.04*q2*(1-rad);\ndx = .0;\nzoom = 1.002+.04*rad ;","warp":" shader_body { \n  vec2 dz_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.002, 0.0))) - texture (sampler_main, (uv - vec2(0.002, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.002))) - texture (sampler_main, (uv - vec2(0.0, 0.002)))), vec4(0.32, 0.49, 0.29, 0.0));\n  dz_1 = (sqrt(tmpvar_2) / 8.0);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((texture (sampler_main, (\n    (uv - (dz_1 * 0.01))\n   + \n    ((((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 0.01) * q22)\n  .xy)).xyz - (\n    sqrt(dot (dz_1, dz_1))\n   * 0.5)) + ((0.02 * vec3(\n    (dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0)) - 0.2)\n  )) * (1.0 - rad)));\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  uv_1.x = uv.x;\n  float z_2;\n  uv_1.y = (uv.y - 0.1);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\n  z_2 = (0.3 / tmpvar_3.y);\n  xlat_mutablers0.x = (tmpvar_3.x * z_2);\n  xlat_mutablers0.y = z_2;\n  xlat_mutablers.x = (xlat_mutablers0.x + (time / 2.0));\n  xlat_mutablers.y = (z_2 + time);\n  float tmpvar_4;\n  tmpvar_4 = clamp ((12.0 * tmpvar_3.y), 0.0, 1.0);\n  vec2 tmpvar_5;\n  tmpvar_5 = fract(((tmpvar_3 + 0.5) - (\n    ((vec3(dot (texture (sampler_noise_hq, (xlat_mutablers / 2.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.55) * 0.1)\n   * tmpvar_4).xy));\n  vec2 tmpvar_6;\n  tmpvar_6.y = 0.0;\n  tmpvar_6.x = texsize.z;\n  vec2 tmpvar_7;\n  tmpvar_7.x = 0.0;\n  tmpvar_7.y = texsize.w;\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_7)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_7)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutableuv3 = (tmpvar_5 + (tmpvar_8 * (1.0 - tmpvar_4)));\n  vec2 x_9;\n  x_9 = ((tmpvar_3 + 0.45) + (tmpvar_8 * 16.0));\n  xlat_mutableret1 = (texture (sampler_main, fract(xlat_mutableuv3)).xyz * (1.0 - (tmpvar_4 / 2.0)));\n  float tmpvar_10;\n  tmpvar_10 = clamp ((1.0 - dot (\n    (xlat_mutableret1 * 4.0)\n  , vec3(0.32, 0.49, 0.29))), 0.0, 1.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = (max ((xlat_mutableret1 + \n    ((vec3((0.02 / sqrt(\n      dot (x_9, x_9)\n    ))) * (1.0 - tmpvar_4)) * 2.0)\n  ), vec3((\n    (clamp ((1.0/((float(mod (\n      ((uv.x * 3234224.0) * uv_1.y)\n    , 22345.0))))), 0.0, 1.0) * (1.0 - tmpvar_4))\n   * tmpvar_10))) + clamp ((\n    (q22 * clamp (((\n      (0.01 * abs((xlat_mutableuv3.x - 0.5)))\n     / \n      abs((xlat_mutableuv3.y - 0.55))\n    ) - (tmpvar_8 * 4.0)), 0.0, 1.0).x)\n   * tmpvar_10), 0.0, 1.0));\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"float2 uv1, rs, dz;\nfloat z;\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\n\nfloat2 tmp = uv1;\ntmp.x = ang; tmp.y = rad ;\nuv1 = .001*tmp;\n\nfloat2 hor = float2 (.002,0.0);\nfloat2 ver = float2 (0,.002);\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n  - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n  - tex2D(sampler_main,uv-ver));\nfloat2 dz = float2 (dx,dy);\n\ndz = sqrt(dz)/8;\nfloat3 ret1 = GetBlur1(uv);\n\nfloat3 crisp = tex2D(sampler_main, \n   -0*uv1+uv - dz*.01 + ret1*.01*q22 );\n\n\nfloat3 noise = lum(tex2D (sampler_noise_lq,uv))-.2;\n\nret =  crisp*1 - length(dz)*.5 + .02*noise*(1-rad);;\n\n ret *= 1; \n}","comp_hlsl":"\nfloat2 rs, rs0, uv2, uv3,uv4,uv6, uv8;\nfloat3 noise, ret1, ret2, ret3;\n\nshader_body {\nuv8 = uv_orig;\nuv.y = uv.y-.1;\nfloat2 uv1 = (uv-.5 )*aspect.xy;\n\nfloat z = .1/uv1.y/uv1.x;\nz = .3/uv1.y;\nrs0.x = uv1.x*z;\nrs0.y = z;\nrs.x = rs0.x + time/2;\nrs.y = rs0.y + time;\n\nnoise = lum(tex2D(sampler_noise_hq,rs/2));\nnoise = noise-.55;\nfloat mask = saturate(12*(uv1.y));\n\nuv2 = uv1+.5;\n//uv2 *= aspect.yx;\n\nuv3 =frac(uv2-noise*.1*mask );\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0, texsize.w);\nfloat dx = lum(GetPixel(uv3+hor) - GetPixel(uv3-hor));\nfloat dy = lum(GetPixel(uv3+ver) - GetPixel(uv3-ver));\nfloat2 dz = float2 (dx,dy);\n//dz *= (length(dz) >= .01);\nuv3 += dz * (1-mask);\n\n//Strahl\nuv4 = float2(.5,uv1.x/uv1.y);\nuv4 = frac(.06*bass_att*uv4);\nfloat3 col = 1;\nfloat3 ret3 = GetPixel(uv4*14);\nret3 += (.008/(length(uv1)))*col;\n//ret2 *= q10;\n\nfloat3 mus = .02 / (length(uv1+.45+dz*16));\nfloat mus2 = saturate(.01*abs(uv3.x-.5)/abs(uv3.y-.55)-dz*4);\n\n\nfloat stars = saturate(1/((uv.x*3234224*uv.y)%22345));\n\nret1 = GetPixel(frac(uv3));\nret1 *= 1-mask/2;;\n\nfloat fmask = saturate (1-lum(ret1*4));\nret2 = ret1  + mus * (1-mask) * 2  ;\nret = max(ret2, stars*(1-mask)*fmask) ;\nret += saturate (q22*mus2*fmask);\n\n}"}