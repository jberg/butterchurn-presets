{"version":2,"baseVals":{"rating":0,"gammaadj":1.7,"decay":0.955,"modwavealphabyvolume":1,"wrap":0,"darken":1,"solarize":1,"wave_a":1.059,"wave_scale":0.706,"wave_smoothing":0.126,"wave_mystery":-0.28,"modwavealphastart":0.81,"modwavealphaend":1.35,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":0.29999,"zoom":1.05101,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0,"g":0.5,"g2":0.5,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.instance_counter=0;a.num_instance=0;a.q1=0;a.q5=0;a.q2=0;a.q4=0;","frame_eqs_str":"a.trans=.00001<Math.abs(equal(a.q3,3))?.15:0;a.a=a.trans;a.a2=a.trans;a.border_a=0;a.instance_counter=3.14*a.instance*div(2,a.num_instance);a.x=a.q1+(.1+.1*a.treb_att)*div(1,a.q5)*Math.sin(a.instance_counter);a.y=a.q2+(.1+.1*a.treb_att)*div(1,a.q4)*Math.cos(a.instance_counter);","init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,3),.15,0);\na = trans;\na2 = trans;\nborder_a = 0;\n\ninstance_counter = 3.14*instance*(2/(num_instance));\nx = q1 + (.1+0.1*treb_att) * (1/q5) * sin(instance_counter);\ny = q2 + (.1+0.1*treb_att) * (1/q4) * cos(instance_counter);"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0,"b":0.5,"g2":0,"b2":0.5,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.instance_counter=0;a.num_instance=0;a.q1=0;a.q5=0;a.q2=0;a.q4=0;","frame_eqs_str":"a.trans=.00001<Math.abs(equal(a.q3,6))?.15:0;a.a=a.trans;a.a2=a.trans;a.border_a=0;a.instance_counter=3.14*a.instance*div(2,a.num_instance);a.x=a.q1+(.1+.1*a.mid_att)*div(1,a.q5)*Math.sin(a.instance_counter);a.y=a.q2+(.1+.1*a.mid_att)*div(1,a.q4)*Math.cos(a.instance_counter);","init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,6),.15,0);\na = trans;\na2 = trans;\nborder_a = 0;\n\ninstance_counter = 3.14*instance*(2/(num_instance));\nx = q1 + (.1+0.1*mid_att) * (1/q5) * sin(instance_counter);\ny = q2 + (.1+0.1*mid_att) * (1/q4) * cos(instance_counter);"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.instance_counter=0;a.num_instance=0;a.q1=0;a.q5=0;a.q2=0;a.q4=0;","frame_eqs_str":"a.trans=.00001<Math.abs(equal(a.q3,9))?.15:0;a.a=a.trans;a.a2=a.trans;a.border_a=0;a.instance_counter=3.14*a.instance*div(2,a.num_instance);a.x=a.q1+(.1+.1*a.bass_att)*div(1,a.q5)*Math.sin(a.instance_counter);a.y=a.q2+(.1+.1*a.bass_att)*div(1,a.q4)*Math.cos(a.instance_counter);","init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,9),.15,0);\na = trans;\na2 = trans;\nborder_a = 0;\n\ninstance_counter = 3.14*instance*(2/(num_instance));\nx = q1 + (.1+0.1*bass_att) * (1/q5) * sin(instance_counter);\ny = q2 + (.1+0.1*bass_att) * (1/q4) * cos(instance_counter);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.25481,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.count=0;a.q1=0;a.q2=0;a.q3=0;a.q4=0;a.q5=0;","frame_eqs_str":"a.count=.00001<Math.abs(below(a.count,9))?a.count+1:0;a.q1=.5;a.q2=.5;a.q3=a.count;a.q4=a.aspectx;a.q5=a.aspecty;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"count = if(below(count,9),count+1,0);\n\nq1 = .5;\nq2 = .5;\nq3 = count;\nq4 = aspectx;\nq5 = aspecty;\n//zoom = .99 + 0.1*bass_att+0.05*bass;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur2, \n    (uv + vec2(0.0009, 0.0))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0009, 0.0))\n  ).xyz * scale2) + bias2)).y;\n  tmpvar_2.y = (((texture (sampler_blur2, \n    (uv + vec2(0.0, 0.0009))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0, 0.0009))\n  ).xyz * scale2) + bias2)).y;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - (tmpvar_2 * 0.01));\n  ret_1.y = texture (sampler_fc_main, (tmpvar_3 - floor(tmpvar_3))).y;\n  ret_1.y = (ret_1.y + ((ret_1.y - \n    ((texture (sampler_blur3, (tmpvar_3 - floor(tmpvar_3))).xyz * scale3) + bias3)\n  .y) * 0.1));\n  ret_1.y = (ret_1.y + 0.006);\n  ret_1.y = ret_1.y;\n  ret_1.x = ret_1.y;\n  ret_1.z = ret_1.y;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * 2.0) + 1.7)\n  )) - (2.0 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (dot ((\n    (-(tmpvar_2) / 4.0)\n   + \n    ((6.0 * vec3(clamp ((0.03 / \n      sqrt(dot (uv1_1, uv1_1))\n    ), 0.0, 1.0))) * (-0.08 + tmpvar_2))\n  ), vec3(0.32, 0.49, 0.29)) * rand_preset).xyz;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n    float1 d = 0.0009;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y;\n    float2 my_uv = uv - float2(dx,dy)*0.01;\n\n\n\n    float2 v = 0.01;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv-floor(my_uv)).y)*.1;\n    ret.y += 0.006;//-GetBlur3(uv-floor(uv)).x*5;\n\n    ret.y = lerp( ret.y, lum(ret).x, 0);\nret.x = ret.y;\nret.z = ret.y;\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.05;\n\n//    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).z;\n//    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).z;\n  //  my_uv += uv - float2(dx,dy)*0.005;\n\n\n\n    v = 0.01;\n//    ret.z =tex2D( sampler_fw_main, my_uv - floor(my_uv)).z;\n\n    \n  //  ret.z += (ret.z - GetBlur3(my_uv-floor(my_uv)).z)*0.13;\n    //ret.z *= 0.95;\n//    ret.z += 0.03-GetBlur3(uv-floor(uv)).x - tex2D( sampler_main, my_uv - floor(my_uv)).y*0.05;\n\n//    ret.x = tex2D( sampler_main, uv).x * 0.003;\n\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv-.5;\n\nfloat3 ret1 = tex2D(sampler_main, uv) +tex2D(sampler_main, 1-uv)*0;\n\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = .3*cos(uv1*2+1.7) -2*dz;;\nfloat3 dots = saturate(.03/length(uv1));\n\n\nret1 = (-ret1/4) + 6*dots*(-0.08+ret1);\n\nret = lum(ret1)*rand_preset;\n}"}