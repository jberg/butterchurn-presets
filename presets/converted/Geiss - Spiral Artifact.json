{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":100,"wave_scale":3.63,"wave_smoothing":0.9,"wave_mystery":-0.3,"modwavealphastart":1.15,"modwavealphaend":1.55,"warpscale":1.331,"zoom":0.96971,"warp":0,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"rot_sum = 0;\nq2 = 0.07 + 0.04*rand(1000)*0.001 + 0.03*rand(1000)*0.001;\nq3 = 1.035 + 0.06*(rand(1000)+rand(1000)+rand(1000))*0.000333;","frame_eqs_eel":"wave_r = wave_r + 0.500*( 0.60*sin(1.980*time) + 0.40*sin(3.047*time) );\nwave_g = wave_g + 0.500*( 0.60*sin(2.835*time) + 0.40*sin(2.081*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(3.814*time) + 0.40*sin(1.011*time) );\ncx = 0.5;//cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = 0.5;//cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\n\nrot = q2;//0.13;//6.28*(rand(737)/737.0 - 0.5) * 0.03;\nzoom = zoom-1 + q3;\nrot_sum = rot_sum + rot;\nq1 = -rot_sum;\nq5 = cos(rot_sum);\nq6 = sin(rot_sim);\nmonitor = q2;\n\n// custom beat detection code: (fps-independent; quiet songs don't freak out)\nmin_att    = 2.5;               // lower # = quieter songs can declare beats\ndecay_to   = 0.8;               // lower # = more hasty to declare a beat\ndecay_rate = pow(0.9990, fps);  // lower # = more hasty to declare a beat\nbeat =           bass/max(min_att,bass_att);\nbeat = max(beat, mid /max(min_att,mid_att ));\nbeat = max(beat, treb/max(min_att,treb_att));\nbeat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );\nbeat_level     = (beat - prev_beat - 0.02)*24;\nis_beat = above(beat_level, 0.5);\nprev_beat = beat;\n  // put your beat responses HERE:\n  wave_a = beat_level;","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_pw_main, uv).xyz - 0.004);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * (min (aspect.x, aspect.y) * 0.8));\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = sin(q1);\n  float tmpvar_4;\n  tmpvar_4 = cos(q1);\n  uv2_2.x = ((uv_1.x * tmpvar_4) - (uv_1.y * tmpvar_3));\n  uv2_2.y = ((uv_1.x * tmpvar_3) + (uv_1.y * tmpvar_4));\n  uv2_2 = (uv2_2 * aspect.zw);\n  uv2_2 = (uv2_2 + 0.5);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (abs((\n    (texture (sampler_main, uv2_2).xyz * 2.65)\n   + \n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * -2.0)\n  )) * 1.5);\n  ret = tmpvar_5.xyz;\n }"}