{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":366,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":408,"rad":0.03,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":262,"rad":0.0297,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":276,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\ndec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%5;\nmonitor = index2;\nq1 = is_beat;\nq3 = bass + mid + treb;\nq4 = index2;\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott_ = p2 * 3.1416/4;\nrott =  rott +  .2*30/fps*q2;\nq2 = sin(rott);\nran = bnot(q1)*ran + q1 * (int(rand(50))-24);\ntran = tan(ran);\ntran = max(tran,-5);\ntran = min(tran,5);\ntrel = trel + .02*30/fps*tran+q1;\nq5 = cos(trel);\nq6 = sin(trel);\nq7 = -q6;//it makes no sense, but commenting q7/8 fucks it up majorly\nq8 = q5;\nmovex = movex*dec_slow + .1*sin(rott)*30/fps;\nspd = spd*bnot(q1) + q3*q1;\nmovez = movez + .005*30/fps*spd;\nq9 = movez;\nmv_x = 20;\nmv_y = 15;\nmv_a = .1;\nmv_l = 0;\nq10 = sin(time/7);\nq12 = sin(time/11);\n\n//flexi mobius spiral col frame\nt = t + 2.5/fps;\nt = if(above(t,2),t-2,t);\ndb = db*0.98 + bass_att*0.2; // dampener\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\ndt = dt*0.98 + treb_att*0.2;\ntt = tt + dt*0.1;\ndm = dm*0.98 + mid_att*0.2;\nmm = mm + dm*0.1;\nw = (bb-tt)*0.1;                   // angle\nq32 = 0.8 - (db-dt)*0.04;         // size\nq31 = sin(w);\nq30 = cos(w);\nq29 = sin(-w);\nq28 = cos(-w);\nq27 = 1/q32;\nzoom =1;// 0.999;\nwarp = 0;\nscale = 8;\nangle = -time*0.2;\nscale = 0.8;\nangle = time*0.2;\nq31 = 1/asin(1);\ndecay=.96;\nvol= vol+(db+dm+dt)*0.002;\nmv_r = 0.5 + 0.4*sin(time*1.324);\nmv_g = 0.5 + 0.4*cos(time*1.371);\nob_r = 0.5 + 0.4*sin(time*1.324);\nob_g = 0.5 + 0.4*cos(time*1.371);\nzoom=.97+(treb*0.02);\nmusictime=vol;\nq26=sin(musictime*0.2)*99.45;\nq25=sin(musictime*0.1)*99.45;\nq24=sin(musictime*0.21)*99.45;\nq23=sin(musictime*0.21)*99.45;\nq22=sin(musictime*0.12)*99.45;\nq21=sin(musictime*0.22)*99.45;\nq20=sin(musictime*0.13)*99.45;\nq19=sin(musictime*0.23)*99.45;\nq18=sin(musictime*0.24)*999.45;\nq17=sin(musictime*0.14)*999.45;\ndx=sin(musictime*0.2)*0.02;\ndy=cos(musictime*0.69)*0.02;","pixel_eqs_eel":"zoom = 1;\nwarp = .1;","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_5.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_5.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_5.z * 0.5));\n  };\n  float tmpvar_6;\n  tmpvar_6 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_6 * tmpvar_6)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (texsize.zw * 3.0);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_6))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_6))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_6))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_6))\n  ).xyz * scale1) + bias1)).y;\n  uv_1 = (uv + ((tmpvar_7 * rad) * 0.3));\n  d_4 = (texsize.zw * 16.0);\n  dx_3 = (((texture (sampler_blur2, \n    (uv_1 + (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv_1 - (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale2) + bias2));\n  dy_2 = (((texture (sampler_blur2, \n    (uv_1 + (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv_1 - (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale2) + bias2));\n  vec3 tmpvar_8;\n  tmpvar_8 = mix (ret_5, ((1.0 - texture (sampler_main, uv_1).x) * vec3(1.5, 2.5, 3.0)), vec3((clamp (\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x * 2.0)\n  , 0.0, 1.0) * 0.5)));\n  ret_5 = tmpvar_8;\n  vec3 tmpvar_9;\n  tmpvar_9.x = dx_3.y;\n  tmpvar_9.y = dy_2.z;\n  tmpvar_9.z = dx_3.x;\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_9) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_8.x > (q26 * q13)) && (tmpvar_8.x <= (q23 * q11)))) {\n    ret_5.z = (tmpvar_8.z - (tmpvar_10.x * 0.5));\n  };\n  if (((tmpvar_8.y > (q25 * q11)) && (tmpvar_8.y <= (q22 * q12)))) {\n    ret_5.x = (tmpvar_8.x - (tmpvar_10.y * 0.5));\n  };\n  if (((ret_5.z > (q24 * q12)) && (ret_5.z <= (q21 * q13)))) {\n    ret_5.y = (tmpvar_8.y - (tmpvar_10.z * 0.5));\n  };\n  vec2 tmpvar_11;\n  tmpvar_11.x = dx_3.z;\n  tmpvar_11.y = dy_2.z;\n  vec3 tmpvar_12;\n  tmpvar_12 = mix (mix ((ret_5 * rad), vec3(1.0, 0.75, 0.0), vec3((\n    (((dy_2 + dx_3).z * 0.43) + 0.5)\n   * \n    ((texture (sampler_blur2, (uv_1 + (\n      (tmpvar_11 * texsize.zw)\n     * 32.0))).xyz * scale2) + bias2)\n  .z))), vec3(1.5, 2.0, 3.0), vec3((texture (sampler_main, uv).y * (0.4 - \n    (rad * 0.7)\n  ))));\n  ret_5 = tmpvar_12;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = tmpvar_12;\n  ret = tmpvar_13.xyz;\n }"}