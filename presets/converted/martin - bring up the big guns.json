{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"modwavealphabyvolume":1,"darken":1,"wave_a":0.002705,"wave_scale":1.291486,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.025,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.11,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"rad":0.108525,"tex_ang":1.00531,"tex_zoom":1.531168,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,0);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 - ( 1/(dist+1))/2;\ny = 1-x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q11/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":34,"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,2);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 + ( 1/(dist+1))/1.9;\ny = 1-x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q11/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,1);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 - ( 1/(dist+1))/1.9;\ny = x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q11/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":63,"y":1,"rad":0.548217,"tex_zoom":2.223327,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,3);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 + ( 1/(dist+1))/1.9;\ny = x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q11/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.4);"},{"baseVals":{"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\ny = 1-sample;\na = (q24 * equal(q27%4,0));\n"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att ;\nq27 = index + 1;\nq28 = -index2/100;\nq29 = bnot(below(index2+index3,1));\n\npuls = dec_slow*puls + (1-dec_slow)*q29;\nq32 = puls;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\ntrel1 = trel1 + 4.2*q1/fps*(q22);\ntrel2 = trel2 + 3*q2/fps*(1);\npx = .2*sin(trel1);\npy = .1*cos(trel2);\nq5 = px;\nq6 = py;\n\nrotx = rotx + q5/fps*4;\nroty = roty + q6/fps*4;\nq15 = rotx;\nq16 = roty;\n\nppx = ppx*dec_slow + (1-dec_slow)*px;\nppy = ppy*dec_slow + (1-dec_slow)*py;\nq7 = ppx;\nq8 = ppy;\n\n\nq10 = 20; //speed shot\nq11 = .8; //brightness shot\n\n\nzoom = 1;\ndy = .00;\ndx = .0;\nwarp = .1;","pixel_eqs_eel":"rot = .05 * q1 * (1-rad);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\n  float x_4;\n  x_4 = (tmpvar_3.x * tmpvar_3.y);\n  float tmpvar_5;\n  tmpvar_5 = (64.0 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv_1 = (uv + ((q28 * tmpvar_6) * (1.0 - \n    ((1.0/(tmpvar_5)) * (q2 + 1.0))\n  )));\n  uv_1 = (uv_1 - ((\n    clamp (((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6), vec2(-2.0, -2.0), vec2(2.0, 2.0))\n   / 20.0) * rad));\n  uv6_2 = (0.2 * cos((\n    (uv_1 * 32.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((texture (sampler_main, \n    (((uv_1 - 0.5) * (0.95 + (0.1 * tmpvar_5))) + 0.5)\n  ).xyz + vec3(\n    ((0.002 / (sqrt(\n      dot (uv6_2, uv6_2)\n    ) - 0.004)) * (1.0 - rad))\n  )) * 0.94) - 0.01);\n  ret = tmpvar_7.xyz;\n }","comp":"vec2 xlat_mutablers;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = q7;\n  tmpvar_1.y = q8;\n  vec2 tmpvar_2;\n  tmpvar_2 = (((uv - 0.5) - tmpvar_1) * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.x = q5;\n  tmpvar_3.y = q6;\n  xlat_mutablers = (((uv_orig - 0.5) - tmpvar_3) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (((22.0 * \n    sqrt(dot (xlat_mutablers, xlat_mutablers))\n  ) * q32) - 0.1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q15;\n  tmpvar_5.y = q16;\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((\n    (tmpvar_2 * (1.0 - pow (sqrt(\n      dot (tmpvar_2, tmpvar_2)\n    ), 3.0)))\n   - 0.5) - (\n    (texture (sampler_noise_hq, (((0.1 * \n      (sin(tmpvar_4) / cos(tmpvar_4))\n    ) * normalize(xlat_mutablers)) + tmpvar_5)).xyz * 0.04)\n   * \n    clamp ((10.0 - (7.0 * tmpvar_4)), 0.0, 1.0)\n  ).xy));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((1.5 * texture (sampler_main, tmpvar_6).xyz) + ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\n  ret = tmpvar_7.xyz;\n }"}