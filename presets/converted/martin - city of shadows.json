{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_g":0.5,"ob_b":0.5,"ob_a":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\nmyzoom = .1; //MyZoom\n\ntele = 1.5; //tele\nffac = 2.4; //fractal density factor ffac\nstart = 1;\n\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; );\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; );\n\ngmegabuf(0) = 0;  gmegabuf (1) = 2;  gmegabuf(2) = 1;  gmegabuf (3) = -4;\ngmegabuf(4) = 3;  gmegabuf (5) = 0;  gmegabuf(6) = 1;  gmegabuf (7) = 5;\ngmegabuf(8) = 1;  gmegabuf (9) = -3;  gmegabuf(10) = 2; gmegabuf (11) = -4;\ngmegabuf(12) = -4; gmegabuf (13) = 1; gmegabuf(14) = 2; gmegabuf (15) = 0;\n\n\ngvol = 1;\nwait = 1;","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25));\ndec_s = 1-.05*30/fps_;\ndec_xs = 1-.01*30/fps_;\n\ndvol = (bass_att + mid_att + treb_att) - (bass+mid+treb);\ngvol = gvol*dec_xs + (1-dec_xs) * max(0.1,dvol)*6;\nq8 = min(gvol*.9,1);\n\ntrel = trel + sqrt(gvol)/fps_;\nctrl = pow(max(0,sin(trel*.25)*5-4),4);\nq31 = ctrl;\nq32 = .2/(ctrl+.05);\n\nchange = (ctrl >= 0.8) && (t0 > 2) || (start == 1);\nt0 = if ( change, 0, t0 + 1/fps);\n\nq7 = myzoom;\nq16 = tele;\nq17 = ffac;\n\n//Find random starting point\nif (change == 1,\n  par1 =  rand(100)/40-.5; //fractal parameter\n  q19 = par1;\n  while (exec2(\n    up = rand(120)/100; //look up\n\n    ran1 = rand(800)/100;  ran2 = 0;  ran3 = 1.5 + up;\n    PosX = rand(10);   PosY = rand(10);\n    PosZ = if ((up >= 0.4) && (rand(10)> 5), 1.8+rand(100)/100, 2*(rand(100)/100-.5)-.75);\n\n    index = 0; mindist = 1; maxdist = 0; avg = 0;\n    loop (17,\n      dax = (index%4-1.5) * q16/8; day = (floor(index/4) -1.5) * q16/8;\n      if (index==16, dax=0; day=0; ,0);\n      c1 = cos(ran1+dax); c2 = cos(ran2); c3 = cos(ran3+day);\n      s1 = sin(ran1+dax); s2 = sin(ran2); s3 = sin(ran3+day);\n\n      reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\n      reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\n      reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\n\n      //***********BOT*************\n      //Coord. Trans. must exactly match def in warp S. !!!!\n      dist = 0.004;\n      while (exec2(\n        uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\n        uvx += PosX; uvy += PosY; uvz += PosZ;\n\n        uv3x = (floor(uvx+511.99))%4;\n        uv3y = (floor(uvy+511.99))%4;\n\n        uvx = 1-abs( 2*(uvx*.5-.25 - int(uvx*.5-.25))-1);\n        uvy = 1-abs( 2*(uvy*.5-.25 - int(uvy*.5-.25))-1);\n\n       ang1 = atan2(uvy,uvx); len = sqrt(uvx*uvx+uvy*uvy)*7.5;\n        mod1 = .3*gmegabuf( uv3y+uv3x*4);\n        uvz -= mod1;\n        len *= 1-.3*floor(uvz*12*mod1+q19);\n        uvx = len; uvy = ang1; uvz = uvz;\n\n        uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;\n        loop (7+1,\n          uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\n          uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\n          uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\n          slen = uvx*uvx + uvy*uvy + uvz*uvz;\n          uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *q17 + uvx0;\n          uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *q17 + uvy0;\n          uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *q17 + uvz0;\n        );\n        len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\n        dist *= 1.05;\n      ,(dist < 0.8) && (len > 15)));\n       if (dist > maxdist, maxdist = dist, 0);\n       if (dist < mindist, mindist = dist, 0);\n       avg += dist/17;\n      index += 1;\n    ); //loop 17\n  , (avg > 0.7) || (mindist < 0.1))); //end while\n\n  lposx = rand(100)/100;\n  lposy = rand(100)/100;\n\n,0);\n\n\n//Position\nq4 = PosX; q5 = PosY; q6 = PosZ;\nq1 = lposx+.3*sin(time*.07);\nq2 = lposy+.3*sin(time*.1);\n\n  //Multiply new RotMat by old one\n  q20 = reg20;\n  q21 = reg21;\n  q22 = reg22;\n  q23 = reg23;\n  q24 = reg24;\n  q25 = reg25;\n  q26 = reg26;\n  q27 = reg27;\n  q28 = reg28;\n\nq14 =  (start + ctrl)*.05;\nstart = start * .95;\n\nwarp = 0.0; zoom = 1; dx = 0; dy = 0; rot = 0;\nmonitor = dist;\nq30 = start;\nq3 = up;\nq19 = par1;\n\nif (time > ttrig + wait, trig = 1, trig = 0);\nif (trig, ttrig = time; wait = rand(20)/100, 0);\nif (trig, flashx = rand(100)/70-.2; flashy = rand(100)/70-.2,0);\nq10 = flashx; q11 = flashy;\n\nmonitor = q31;","pixel_eqs_eel":"","warp":"float sustain;\nfloat xlat_mutabledist;\nfloat xlat_mutablelimit;\nfloat xlat_mutablestruc;\nvec2 xlat_mutableuv1;\nvec3 xlat_mutableuv2;\n shader_body { \n  mat3 tmpvar_1;\n  tmpvar_1[uint(0)].x = q20;\n  tmpvar_1[uint(0)].y = q23;\n  tmpvar_1[uint(0)].z = q26;\n  tmpvar_1[1u].x = q21;\n  tmpvar_1[1u].y = q24;\n  tmpvar_1[1u].z = q27;\n  tmpvar_1[2u].x = q22;\n  tmpvar_1[2u].y = q25;\n  tmpvar_1[2u].z = q28;\n  vec3 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  tmpvar_2.z = q6;\n  sustain = (0.98 - (2.0 * q14));\n  vec2 tmpvar_3;\n  tmpvar_3.x = q1;\n  tmpvar_3.y = q2;\n  float sus_4;\n  vec3 ret_5;\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pw_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.yz));\n  vec3 tmpvar_7;\n  tmpvar_7 = tmpvar_6.xyz;\n  vec3 tmpvar_8;\n  tmpvar_8 = (tmpvar_6.xyz - 0.5);\n  bool tmpvar_9;\n  tmpvar_9 = (tmpvar_6.y < 0.2);\n  if (tmpvar_9) {\n    xlat_mutabledist = tmpvar_7.x;\n  } else {\n    vec4 na_10;\n    vec4 tmpvar_11;\n    tmpvar_11.xy = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(0.0, 1.0)))).yz;\n    tmpvar_11.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(-1.0, 0.0)))).yz;\n    vec4 tmpvar_12;\n    tmpvar_12 = floor(((255.0 * tmpvar_11) + vec4(0.5, 0.5, 0.5, 0.5)));\n    vec4 tmpvar_13;\n    tmpvar_13.xy = texture (sampler_pc_main, (uv_orig - texsize.zw)).yz;\n    tmpvar_13.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(1.0, -1.0)))).yz;\n    vec4 tmpvar_14;\n    tmpvar_14 = floor(((255.0 * tmpvar_13) + vec4(0.5, 0.5, 0.5, 0.5)));\n    vec4 tmpvar_15;\n    tmpvar_15.xy = texture (sampler_pc_main, (uv_orig + texsize.zw)).yz;\n    tmpvar_15.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(-1.0, 1.0)))).yz;\n    vec4 tmpvar_16;\n    tmpvar_16 = floor(((255.0 * tmpvar_15) + vec4(0.5, 0.5, 0.5, 0.5)));\n    vec4 tmpvar_17;\n    tmpvar_17.xy = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(0.0, -1.0)))).yz;\n    tmpvar_17.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(1.0, 0.0)))).yz;\n    vec4 tmpvar_18;\n    tmpvar_18 = floor(((255.0 * tmpvar_17) + vec4(0.5, 0.5, 0.5, 0.5)));\n    vec4 tmpvar_19;\n    tmpvar_19.xy = (tmpvar_12.yw + (0.015625 * tmpvar_12.xz));\n    tmpvar_19.zw = (tmpvar_14.yw + (0.015625 * tmpvar_14.xz));\n    vec4 tmpvar_20;\n    tmpvar_20.xy = (tmpvar_16.yw + (0.015625 * tmpvar_16.xz));\n    tmpvar_20.zw = (tmpvar_18.yw + (0.015625 * tmpvar_18.xz));\n    vec4 tmpvar_21;\n    tmpvar_21 = max (tmpvar_19, tmpvar_20);\n    na_10.zw = tmpvar_21.zw;\n    na_10.xy = max (tmpvar_21.xy, tmpvar_21.zw);\n    xlat_mutabledist = ((1.007812 - (\n      max (na_10.x, na_10.y)\n     * 0.0039216)) + (0.0013 * tmpvar_8.x));\n  };\n  vec2 tmpvar_22;\n  tmpvar_22 = (0.0039216 * floor((\n    (255.0 * texture (sampler_pc_main, uv_orig).yz)\n   + vec2(0.5, 0.5))));\n  float tmpvar_23;\n  tmpvar_23 = min (xlat_mutabledist, ((1.007812 - tmpvar_22.y) - (0.015625 * tmpvar_22.x)));\n  xlat_mutabledist = tmpvar_23;\n  xlat_mutablelimit = (15.0 + (15.0 * tmpvar_23));\n  vec3 tmpvar_24;\n  tmpvar_24.xy = (xlat_mutableuv1 * tmpvar_23);\n  tmpvar_24.z = tmpvar_23;\n  xlat_mutableuv2 = (((tmpvar_24 / q7) * tmpvar_1) + tmpvar_2);\n  vec3 uvi_25;\n  uvi_25.z = xlat_mutableuv2.z;\n  float mod1_26;\n  float len_27;\n  vec3 zzlo_28;\n  vec3 zz_29;\n  vec2 tmpvar_30;\n  tmpvar_30 = floor((xlat_mutableuv2.xy + 63.99));\n  mod1_26 = mat4(0.0, 0.9, 0.3, -1.2, 0.6, 0.0, -0.9, 0.3, 0.3, 0.3, 0.6, 0.6, -1.2, 1.5, -1.2, 0.0)[int((float(mod (tmpvar_30.y, 4.0))))][int((float(mod (tmpvar_30.x, 4.0))))];\n  uvi_25.xy = (1.0 - abs((\n    (fract(((xlat_mutableuv2.xy - 0.5) * 0.5)) * 2.0)\n   - 1.0)));\n  float angle_31;\n  float tmpvar_32;\n  tmpvar_32 = abs(uvi_25.y);\n  if ((uvi_25.x >= 0.0)) {\n    angle_31 = (1.0 - ((uvi_25.x - tmpvar_32) / (uvi_25.x + tmpvar_32)));\n  } else {\n    angle_31 = (3.0 - ((uvi_25.x + tmpvar_32) / (tmpvar_32 - uvi_25.x)));\n  };\n  angle_31 = ((angle_31 * 3.141593) / 4.0);\n  float tmpvar_33;\n  if ((uvi_25.y < 0.0)) {\n    tmpvar_33 = -(angle_31);\n  } else {\n    tmpvar_33 = angle_31;\n  };\n  len_27 = (sqrt(dot (uvi_25.xy, uvi_25.xy)) * 7.5);\n  uvi_25.z = (xlat_mutableuv2.z - mod1_26);\n  len_27 = (len_27 * (1.0 - (0.3 * \n    floor((((12.0 * uvi_25.z) * mod1_26) + q19))\n  )));\n  vec3 tmpvar_34;\n  tmpvar_34.x = len_27;\n  tmpvar_34.y = tmpvar_33;\n  tmpvar_34.z = uvi_25.z;\n  zz_29 = ((2.0 * clamp (tmpvar_34, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - tmpvar_34);\n  zz_29 = (zz_29 * (clamp (\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\n  zz_29 = (zz_29 * (clamp (\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\n  zz_29 = (zz_29 * (clamp (\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\n  zz_29 = (zz_29 * (clamp (\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\n  zz_29 = (zz_29 * (clamp (\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\n  zz_29 = (zz_29 * (clamp (\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\n  zzlo_28 = zz_29;\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\n  zz_29 = (zz_29 * (clamp (\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\n  zz_29 = (zz_29 * (clamp (\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\n  float tmpvar_35;\n  tmpvar_35 = sqrt(dot (zz_29, zz_29));\n  vec3 tmpvar_36;\n  tmpvar_36.x = sqrt(dot (zzlo_28, zzlo_28));\n  tmpvar_36.y = tmpvar_35;\n  tmpvar_36.z = (((tmpvar_33 - mod1_26) - fract(\n    (zz_29.y * 0.0001)\n  )) * 0.3);\n  float tmpvar_37;\n  tmpvar_37 = mix (tmpvar_35, tmpvar_36.x, tmpvar_23);\n  vec2 tmpvar_38;\n  tmpvar_38 = (0.0039216 * floor((\n    (255.0 * texture (sampler_pc_main, uv_orig).yz)\n   + vec2(0.5, 0.5))));\n  xlat_mutablestruc = (clamp ((\n    (((-(xlat_mutablelimit) + tmpvar_35) * 0.02) + 1.0)\n   + tmpvar_36.z), 0.0, 1.0) - (float(\n    (((1.007812 - tmpvar_38.y) - (0.015625 * tmpvar_38.x)) > (1.1 - ((texture (sampler_blur1, \n      (uv_orig + (0.1 * (tmpvar_3 - 0.5)))\n    ).xyz * scale1) + bias1).z))\n  ) * 0.5));\n  sus_4 = sustain;\n  if (tmpvar_9) {\n    sus_4 = 1.0;\n  };\n  float x_39;\n  x_39 = (1.0 - tmpvar_23);\n  vec2 tmpvar_40;\n  tmpvar_40 = (0.0039216 * floor((\n    (255.0 * vec2(x_39))\n   + vec2(0.5, 0.5))));\n  vec2 tmpvar_41;\n  tmpvar_41.x = ((64.0 * (x_39 - tmpvar_40.x)) + 0.495);\n  tmpvar_41.y = tmpvar_40.x;\n  vec3 tmpvar_42;\n  vec4 tmpvar_43;\n  tmpvar_43 = texture (sampler_main, uv_orig);\n  tmpvar_42.x = mix (clamp (xlat_mutablestruc, 0.0, 1.0), tmpvar_43.x, sus_4);\n  tmpvar_42.yz = tmpvar_41;\n  vec3 tmpvar_44;\n  tmpvar_44 = mix (tmpvar_42, ((tmpvar_43.xyz * sus_4) - 0.003921569), vec3(clamp ((tmpvar_37 - xlat_mutablelimit), 0.0, 1.0)));\n  ret_5.yz = tmpvar_44.yz;\n  ret_5.x = (tmpvar_44.x + (tmpvar_8.x * -0.02));\n  vec4 tmpvar_45;\n  tmpvar_45.w = 1.0;\n  tmpvar_45.xyz = ret_5;\n  ret = tmpvar_45.xyz;\n }","comp":"vec3 skycol;\nfloat xlat_mutablebdist;\nfloat xlat_mutablecloud;\nvec3 xlat_mutablestruc;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\nfloat xlat_mutablez;\n shader_body { \n  skycol = (vec3(0.1333333, 0.1666667, 0.3333333) * (2.0 - q8));\n  vec2 tmpvar_1;\n  tmpvar_1.x = q1;\n  tmpvar_1.y = q2;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q10;\n  tmpvar_2.y = q11;\n  vec2 uv_3;\n  vec3 sky_4;\n  vec2 trel_5;\n  float z0_6;\n  uv_3 = (uv + (texsize.zw * 0.5));\n  uv_3 = (uv_3 + ((q31 * 0.1) * (texture (sampler_pw_noise_lq, \n    (((uv_3 - 0.5) * q32) + (rand_frame.xy * q31))\n  ) - 0.5)).xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = 0.5;\n  tmpvar_7.y = (0.5 + q3);\n  xlat_mutableuv1 = (uv_3 - tmpvar_7);\n  vec3 tmpvar_8;\n  tmpvar_8 = mix (texture (sampler_main, uv_3).xyz, ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1), vec3(0.2, 0.2, 0.2));\n  xlat_mutablebdist = (1.0 - tmpvar_8.z);\n  z0_6 = clamp ((0.25 / (xlat_mutableuv1.y - 0.3)), -0.7, 0.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = q20;\n  tmpvar_9.y = q21;\n  trel_5 = ((0.015 * time) * tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10.x = (xlat_mutableuv1.x * z0_6);\n  tmpvar_10.y = z0_6;\n  xlat_mutableuv2 = (tmpvar_10 - trel_5);\n  vec2 uvi_11;\n  uvi_11 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \n    (texture (sampler_noise_hq, uvi_11).xy + (texture (sampler_noise_hq, (uvi_11 * 2.0)).xy / 2.0))\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\n  vec2 tmpvar_12;\n  tmpvar_12.x = (xlat_mutableuv1.x * xlat_mutablez);\n  tmpvar_12.y = xlat_mutablez;\n  xlat_mutableuv2 = (tmpvar_12 - trel_5);\n  vec2 uvi_13;\n  uvi_13 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \n    (texture (sampler_noise_hq, uvi_13).xy + (texture (sampler_noise_hq, (uvi_13 * 2.0)).xy / 2.0))\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\n  vec2 tmpvar_14;\n  tmpvar_14.x = (xlat_mutableuv1.x * xlat_mutablez);\n  tmpvar_14.y = xlat_mutablez;\n  xlat_mutableuv2 = (tmpvar_14 - trel_5);\n  vec2 uvi_15;\n  uvi_15 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \n    (texture (sampler_noise_hq, uvi_15).xy + (texture (sampler_noise_hq, (uvi_15 * 2.0)).xy / 2.0))\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\n  vec2 tmpvar_16;\n  tmpvar_16.x = (xlat_mutableuv1.x * xlat_mutablez);\n  tmpvar_16.y = xlat_mutablez;\n  xlat_mutableuv2 = (tmpvar_16 - trel_5);\n  vec2 uvi_17;\n  uvi_17 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \n    (texture (sampler_noise_hq, uvi_17).xy + (texture (sampler_noise_hq, (uvi_17 * 2.0)).xy / 2.0))\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\n  vec2 x_18;\n  x_18 = ((uv_3 - (xlat_mutablecloud * 0.2)) - tmpvar_2);\n  xlat_mutableuv3 = (uv_3 * vec2(6.0, 3.0));\n  sky_4 = (((\n    (1.0 - xlat_mutablecloud)\n   * skycol) + (\n    ((clamp ((bass_att - 1.0), 0.0, 1.0) / sqrt(dot (x_18, x_18))) * (1.0 - xlat_mutablecloud))\n   * vec3(0.0, 0.3, 0.6))) * clamp ((\n    (16.0 * ((texture (sampler_blur1, fract(\n      (xlat_mutableuv3 + (floor(xlat_mutableuv3.x) * 0.3))\n    )).xyz * scale1) + bias1).x)\n   - \n    (64.0 * (xlat_mutableuv1.y + 0.1))\n  ), 0.0, 1.0));\n  sky_4 = (sky_4 * clamp ((\n    (xlat_mutablebdist * 16.0)\n   - 15.0), 0.0, 1.0));\n  vec2 x_19;\n  x_19 = (uv_3 - tmpvar_1);\n  xlat_mutablestruc = ((mix (\n    (q8 * clamp (pow (tmpvar_8.xxx, vec3(1.0, 1.8, 4.0)), 0.0, 1.0))\n  , tmpvar_8.xxx, vec3(xlat_mutablebdist)) * (1.2 - xlat_mutablebdist)) * clamp ((1.25 - \n    sqrt(dot (x_19, x_19))\n  ), 0.0, 1.0));\n  xlat_mutablestruc = (xlat_mutablestruc + ((\n    ((((8.0 * tmpvar_8.x) * tmpvar_8.x) * clamp ((\n      (2.0 * treb_att)\n     - 3.0), 0.0, 1.0)) * mix (xlat_mutablebdist, (1.0 - xlat_mutablebdist), float((rand_frame.x > 0.5))))\n   * \n    (1.2 - clamp ((4.0 * (\n      (((texture (sampler_blur1, fract(\n        (uv_3 - ((2.0 - tmpvar_2) * 0.01))\n      )).xyz * scale1) + bias1).z - 0.1)\n     - tmpvar_8.z)), 0.0, 1.0))\n  ) * skycol));\n  vec4 tmpvar_20;\n  tmpvar_20.w = 1.0;\n  tmpvar_20.xyz = (sky_4 + xlat_mutablestruc);\n  ret = tmpvar_20.xyz;\n }"}