{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"rad":0.01,"tex_zoom":0.26465,"r":0.2,"b":0.7,"a":0.24,"r2":1,"g2":0,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"//samples = 256 + 50*sin(time*.939493949);\n//num_inst = 256 + 50*sin(time*.939493949);\n//samples = .5 + sin(time*.939493949);\nnum_inst = .5 + sin(time*.939493949);","frame_eqs_eel":"\nsample = instance/1024;\n//num_inst = .5 + sin(time*.939493949);\ntm = q1;\nsp = sample*6.28*8*6*sin(time)*100;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\n//rad = .5 + vol + .01;\nrad2=1.3;\nra = rad2*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad2;\noz = ra*cos(sp);\n\nxang = q4;\nyang = q5;\nzang = q6;\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\nyang = 0;//q8;\noz = oz + 5;\nrad=rad*instance*.0041;//3d\n\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\n\noz = oz - 5;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));\ng2= 1 + .5*sin(sample*.10+(time*10*bass));\nb2= 1 + .5*sin(sample*2+(time*50*treb));\nr2= 1 + .5*sin(sample*5+(time*20*mid));"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\ntrans2 = rand(int(q30))/15+instance-instance;\ntrans3 = rand(int(q30))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q30))/15+instance-instance;\nr=rand(q30)*.1+instance-instance;\ng=rand(q30)*.1+instance-instance;\nb=rand(q30)*.1+instance-instance;\nr2=rand(q30)*.1+instance-instance;\ng2=rand(q30)*.1+instance-instance;\nb2=rand(q30)*.1+instance-instance;\nborder_r=rand(q30)*.1+instance-instance;\nborder_g=rand(q30)*.1+instance-instance;\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.06)*sin(sample*2*(time*10*treb));\ny = .5 + (bass*.06)*cos(sample*2*(time*10*treb));\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));\na = r;"},{"baseVals":{"enabled":1,"samples":102,"spectrum":1,"thick":1,"smoothing":0,"r":0.5,"g":0.1,"b":0.24},"init_eqs_eel":"","frame_eqs_eel":"samples = 256 + 50*sin(time*.939493949);\nvol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6*sin(time)*100;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\n//rad = .5 + vol + .01;\nrad=1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = q4;\nyang = q5;\nzang = q6;\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\nyang = 0;//q8;\noz = oz + 5;\n\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\n\noz = oz - 5;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));"},{"baseVals":{"enabled":1,"samples":102,"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"samples = 256 + 50*sin(time*.939493949);\nvol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6*sin(time)*100;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\n//rad = .5 + vol + .01;\nrad=1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = q4;\nyang = q5;\nzang = q6;\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\nyang = 0;//q8;\noz = oz + 5;\n\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\n\noz = oz - 5;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"tst = 10;\ntr1 = -5+rand(10);\ntr2 = -2+rand(4);","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\n\nwarp = 0;\nbassspin = if(above(bass*.09,bassspin),bassspin+.002,bassspin-.002);\nbassspin = bassspin*above(bassspin,0);\nbassc = bassc+bassspin;\nq1 = bassc;\nq2 = frame%int(36+12*sin(time*.1));\ntst = if(equal(q2,1),10+int(rand(45)),tst);\nq3 = tst;\ndecay = .92;\nq4 = tr1*.1;\nq5 = tr2*.1;\n\nq30=(bass+treb+mid)*1;","pixel_eqs_eel":"zoom = zoom + (.01*(bass_att*bass_att))*rad;\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;\nzoom = zoom+((treb_att*.005));","warp":" shader_body { \n  vec2 uv2_1;\n  int nang_2;\n  vec3 ret_3;\n  nang_2 = int(q3);\n  float tmpvar_4;\n  tmpvar_4 = (q1 * 5.0);\n  uv2_1.x = (uv.x + (0.003 * sin(\n    ((ang * float(nang_2)) + tmpvar_4)\n  )));\n  uv2_1.y = (uv.y + (0.003 * cos(\n    ((ang * float(nang_2)) + tmpvar_4)\n  )));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_fw_main, uv2_1);\n  ret_3 = tmpvar_5.xyz;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_5.x > (q21 * q13)) && (tmpvar_5.x <= (q24 * q11)))) {\n    ret_3.y = (tmpvar_5.y + (tmpvar_6.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * q11)) && (ret_3.y <= (q25 * q12)))) {\n    ret_3.z = (tmpvar_5.z + (tmpvar_6.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * q12)) && (ret_3.z <= (q26 * q13)))) {\n    ret_3.x = (tmpvar_5.x + (tmpvar_6.z * 0.5));\n  };\n  if ((((\n    (ret_3.x + ret_3.y)\n   + ret_3.z) * 0.3333) <= 0.33)) {\n    ret_3 = (ret_3 - 0.1);\n  };\n  ret_3 = (ret_3 * 0.9999);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_3;\n  ret = tmpvar_7.xyz;\n }","comp":"uniform sampler2D sampler_rand00;\n shader_body { \n  vec3 ret2_1;\n  vec2 uv1_2;\n  vec3 ret_3;\n  vec3 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\n  uv1_2 = ((0.5 * cos(\n    (((uv - 0.5) * 1.5) + 1.6)\n  )) - (3.0 * tmpvar_5));\n  float tmpvar_6;\n  tmpvar_6 = clamp (((0.001 * q3) / sqrt(\n    dot (uv1_2, uv1_2)\n  )), 0.0, 1.0);\n  float tmpvar_7;\n  tmpvar_7 = (bass + mid);\n  ret_3 = (0.8 * ((0.2 * \n    dot (tmpvar_4, vec3(0.32, 0.49, 0.29))\n  ) + (\n    ((tmpvar_6 * tmpvar_4) * 10.0)\n   * \n    (0.1 * tmpvar_7)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((uv.x + 0.5) - (time * q4));\n  tmpvar_8.y = ((uv.y + 0.5) + (time * q5));\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_rand00, ((tmpvar_8 * texsize.xy) * texsize_rand00.zw));\n  ret2_1 = ((0.2 * dot (tmpvar_9.xyz, vec3(0.32, 0.49, 0.29))) + ((\n    (tmpvar_6 * tmpvar_9.xyz)\n   * 10.0) * (0.3 * tmpvar_7)));\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_8.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_3.x > (q26 * q13)) && (ret_3.x <= (q23 * q11)))) {\n    ret_3.z = (ret_3.z - (tmpvar_10.x * 0.5));\n  };\n  if (((ret_3.y > (q25 * q11)) && (ret_3.y <= (q22 * q12)))) {\n    ret_3.x = (ret_3.x - (tmpvar_10.y * 0.5));\n  };\n  if (((ret_3.z > (q24 * q12)) && (ret_3.z <= (q21 * q13)))) {\n    ret_3.y = (ret_3.y - (tmpvar_10.z * 0.5));\n  };\n  if ((((ret_3.x == 0.0) && (ret_3.y == 0.0)) && (ret_3.z == 0.0))) {\n    ret_3 = mix (((ret2_1 * 0.5) + (\n      ((bass + mid) + treb)\n     * 0.01)), ret_3, (ret_3 * 5.0));\n  };\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_3;\n  ret = tmpvar_11.xyz;\n }"}