{"version":2,"baseVals":{"rating":0,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wrap":0,"darken_center":1,"wave_a":0.001,"zoom":0.97,"rot":-6.27999,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.49849,"g":1,"b":1,"a":0.7,"r2":1,"g2":0,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.35);\ng2 = 0.5 + 0.5*sin(q2*0.578);\nb2 = 0.5 + 0.5*sin(q2*0.689);\n\nang = q2;\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.74218,"g":1,"b":1,"a":0.6,"r2":1,"g2":0,"b2":1,"a2":0.6,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\ng2 = 0.5 + 0.5*sin(q2*0.678);\nb2 = 0.5 + 0.5*sin(q2*0.689);\n\nang = -q2*1.05;\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.00035,"g":1,"b":1,"a":0.5,"r2":1,"g2":0,"b2":1,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\ng2 = 0.5 + 0.5*sin(q2*0.578);\nb2 = 0.5 + 0.5*sin(q2*0.789);\n\nang = q2*0.899;\ntex_capture = above(q3,2);"},{"baseVals":{"textured":1,"rad":3.25446,"g":1,"b":1,"a":0.3,"r2":1,"b2":1,"a2":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.5 + 0.5*sin(q2*0.45);\ng = 0.5 + 0.5*sin(q2*0.578);\nb = 0.5 + 0.5*sin(q2*0.689);\n\nr2 = 0.5 + 0.5*sin(q2*0.45);\ng2 = 0.5 + 0.5*sin(q2*0.578);\nb2 = 0.5 + 0.5*sin(q2*0.689);\n\ntex_capture = above(q3,2);"}],"waves":[{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\nv = (cos(q1*0.015))*3.14159*2;\ns = sample*3.14*100;\nss = sample*6.28*1000;\n\n//draw\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\nzs = 0.5*sin(s)*0.2*sin(v);\n\n//rotate x axis\nangle = q1*0.1;\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\nangle2 = q1*0.11;\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\n//rotaye z axis\nangle3 = q1*0.15;\nxn = xd*cos(angle3) - yd*sin(angle3);\nyn = xd*sin(angle3) + yd*cos(angle3);\n\nzd = zd;\n\nx = xn*zd*0.3 + 0.5;\ny = yn*zd*0.3*1.2 + 0.5;\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\nv = (cos(q1*0.015))*3.14159*2;\ns = sample*3.14*100;\nss = sample*6.28*1000;\n\n//draw\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\nzs = 0.5*sin(s)*0.2*sin(v);\n\n//rotate x axis\nangle = q1*0.1;\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\nangle2 = q1*0.13;\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\n//rotaye z axis\nangle3 = q1*0.16;\nxn = xd*cos(angle3) - yd*sin(angle3);\nyn = xd*sin(angle3) + yd*cos(angle3);\n\nzd = zd;\n\nx = xn*zd*0.3 + 0.5;\ny = yn*zd*0.3*1.2 + 0.5;\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\nv = (cos(q1*0.015))*3.14159*2;\ns = sample*3.14*100;\nss = sample*6.28*1000;\n\n//draw\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\nzs = 0.5*sin(s)*0.2*sin(v);\n\n//rotate x axis\nangle = q1*0.1;\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\nangle2 = q1*0.16;\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\n//rotaye z axis\nangle3 = q1*0.16;\nxn = xd*cos(angle3) - yd*sin(angle3);\nyn = xd*sin(angle3) + yd*cos(angle3);\n\nzd = zd;\n\nx = xn*zd*0.3 + 0.5;\ny = yn*zd*0.3*1.2 + 0.5;\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"sep":1,"spectrum":1,"usedots":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\nv = abs(cos(q1*0.015))*3.14159*2;\ns = sample*3.14*100;\nss = sample*6.28*1000;\n\n//draw\nxs = (0.5 + 0.0000001*cos(s))*cos(ss);\nys = (0.5 + 0.0000001*cos(s))*sin(ss);\nzs = 0.5*sin(s);\n\n//rotate x axis\nangle = q1*0.1;\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\nangle2 = q1*0.14;\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\n//rotaye z axis\nangle3 = q1*0.15;\nxn = xd*cos(angle3) - yd*sin(angle3);\nyn = xd*sin(angle3) + yd*cos(angle3);\n\nzd = zd + 2;\n\nx = xn*zd*0.3 + 0.5;\ny = yn*zd*0.3*1.2 + 0.5;\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\nq1 = basstime*4;\n\n//start in most active range\nbasstime = if(below(basstime,1000),1000,basstime);\n//basstime = if(above(basstime,495),450,basstime);\n\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\nmonitor = abs(cos(time))*3.14;\n\n\nmv_a = above(diff,10);","pixel_eqs_eel":"zoom = 1 + 0.05*q3*rad;\n\ndecay_r = 0.2*rad*sin(q2*0.35) + 0.85 + 0.1*sin(q2);\ndecay_g = 0.2*rad*sin(q2*0.5) + 0.85 + 0.1*sin(0.7*q2);\ndecay_b = 0.2*rad*sin(q2*0.4) + 0.85 + 0.1*sin(0.8*q2);\n\nrot = 0;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv).xyz * (0.8 + (q3 * 0.1)));\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\n  ret = tmpvar_1.xyz;\n }"}