{"version":2,"baseVals":{"rating":0,"wave_mode":7,"wrap":0,"wave_a":0.001,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0,"wave_g":0.4,"wave_b":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0.05,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":24,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.27425,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"tex_capture  = q1;\n\nsaw = saw - 0.001*bass;\nsaw = if(below(saw,0.2),0.6,saw);\n\ntex_zoom = saw;\n\n\n"},{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.27425,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"tex_capture  = q1;\n\nsaw = saw - 0.001*bass;\nsaw = if(below(saw,0.1),0.6,saw);\n\ntex_zoom = saw;"},{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.36964,"g":1,"b":1,"a":0.1,"a2":0.4,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.30294,"g":1,"b":1,"a":0.1,"a2":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.2;\nv = sample*100000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x;\ny = y;\ny = y;\n\n//r = 0.5 + 0.5*sin(time*1.22) + 0.1;\ng = 1;//0.4 + 0.4*sin(time*1.307) + x;\n//b = 0.4 + 0.4*sin(time*1.959);\n\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.2;\nv = sample*100000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 0.7);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 0.7);\n\nx = x;\ny = y;\ny = y;\n\n//r = 0.5 + 0.5*sin(time*1.4) + 0.1;\ng = 1;//0.4 + 0.4*sin(time*1.307) + x;\n//b = 0.4 + 0.4*sin(time*1.259);\n\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.2;\nv = sample*100000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 1.4);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 1.4);\n\nx = x;\ny = y;\ny = y;\n\n//r = 0.5 + 0.5*sin(time*1.4674) + 0.1;\ng = 1;//0.4 + 0.4*sin(time*1.807) + x;\n//b = 0.4 + 0.4*sin(time*1.359);\n\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass*0.1;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\ny = y - sample*0.1;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nvolume = 0.3*(bass+mid+att);\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\nwave_x = xpos + 0.5;\nwave_y = 1-(ypos + 0.5);\nwave_r = 0.5 + 0.499*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = 0.5 + 0.499*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = 0.5 + 0.499*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nwave_mystery = -0.17 + 0.03*(0.6*sin(0.637*time) + 0.4*sin(0.949*time));\nmv_r = if(beat, 1, ib_r);\nmv_b = if(beat, wave_b, ib_b);\n//mv_a = if(beat, 0.1, ib_a);\n//ib_a = 0.015;\nq3 = wave_mystery;\nq1 = wave_x;\nq2 = 1-wave_y;\nq2 = ypos+0.5;\nwarp=0;\n\n//q2 = 1-(ypos + 0.5);\n//q1 = 0.5;\n//q2=0.5;\nob_r = 1-wave_g;\nob_b = 1-wave_r;\nob_g = 1-wave_b;\n\nmonitor = wave_y;\nmovement =movement + 0.4*(((bass+bass_att + 0.1*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\nmovement = if(above(movement,10000), 0, movement);\nrot =1*sin(movement);\ncx = wave_x;\ncy = y_pos+0.5;\n\nq8 = movement;","pixel_eqs_eel":"myy = x-q1;\nmyx = y-q2+0.1;\ndx = 3*sin(q8*0.675)*(2*myx*myy);\ndy = 3*sin(q8*0.675)*((myx*myx) - (myy*myy));","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  float tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - vec2(0.005, 0.0));\n  tmpvar_3 = (((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)).x;\n  float tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv - vec2(0.0, 0.005));\n  tmpvar_6 = (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2)).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3;\n  tmpvar_9.y = tmpvar_6;\n  vec2 tmpvar_10;\n  tmpvar_10.x = (((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)).x;\n  tmpvar_10.y = (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2)).x;\n  ret_2.x = texture (sampler_fc_main, ((uv - (tmpvar_9 * 0.005)) + (tmpvar_10 * 0.002))).x;\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_11.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.006);\n  ret_2.x = ret_2.x;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_6;\n  tmpvar_12.y = -(tmpvar_3);\n  my_uv_1 = (uv + ((tmpvar_12 * 0.05) * (1.2 - \n    ((tmpvar_11.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_13;\n  x_13 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    (ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\n   * \n    sqrt(dot (x_13, x_13))\n  ) * 120.0));\n  ret_2.z = (ret_2.z * 0.85);\n  ret_2.z = (ret_2.z + 0.008);\n  vec2 tmpvar_14;\n  tmpvar_14.x = -(tmpvar_6);\n  tmpvar_14.y = tmpvar_3;\n  my_uv_1 = (tmpvar_14 * 0.05);\n  vec2 tmpvar_15;\n  tmpvar_15.x = (((texture (sampler_blur2, \n    (uv + vec2(0.01, 0.0))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.01, 0.0))\n  ).xyz * scale2) + bias2)).y;\n  tmpvar_15.y = (((texture (sampler_blur2, \n    (uv + vec2(0.0, 0.01))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0, 0.01))\n  ).xyz * scale2) + bias2)).y;\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_15 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.03));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":"uniform sampler2D sampler_smalltiled_electric_nebula;\n shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec2 tmpvar_2;\n  tmpvar_2.x = ((uv.x + 0.5) + q1);\n  tmpvar_2.y = ((uv.y + 0.5) + q2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = mix ((texture (sampler_smalltiled_electric_nebula, (\n    (tmpvar_2 * texsize.xy)\n   * texsize_smalltiled_electric_nebula.zw)).xyz * (\n    ((bass + mid) + treb)\n   * 0.5)), tmpvar_1.xyz, (tmpvar_1.xyz * 2.5));\n  ret = tmpvar_3.xyz;\n }"}