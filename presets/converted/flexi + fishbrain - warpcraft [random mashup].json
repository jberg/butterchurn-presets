{"version":2,"baseVals":{"rating":2,"gammaadj":1.14,"decay":0.999,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.55,"wave_scale":2,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":1.6,"modwavealphaend":2,"warpanimspeed":0.137,"warpscale":13.125,"zoom":0.99951,"warp":0.99213,"wave_r":0.5,"wave_g":0,"wave_b":0,"wave_y":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1.25*a.mx-.1;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.8);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx*1.25-0.1;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.05*a.bass;a.ma-=3.1415*above(a.mid,1)*.05*a.mid;a.mx+=.0001*Math.cos(a.ma);a.my+=.0001*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1.25*a.mx-.125;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.1);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx*1.25-0.125;\ny=my;\n\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.mid,1)*.01*a.mid;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0004*Math.cos(a.ma);a.my+=.0004*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1.25*a.mx-.125;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.3);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx*1.25-0.125;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.bass,.5)*.02*a.bass;a.ma-=3.1415*above(a.treb,.5)*.02*a.treb;a.mx+=.0008*Math.cos(a.ma);a.my+=.0008*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1.25*a.mx-.125;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx*1.25-0.125;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"init_eqs_str":"a.y3=0;a.y1=0;a.w=0;a.q25=0;a.q12=0;a.x1=0;a.q22=0;a.q21=0;a.vx3=0;a.q13=0;a.q15=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.q9=0;a.dm=0;a.vx4=0;a.mm=0;a.tt=0;a.x3=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.xx2=0;a.q4=0;a.yy1=0;a.vy4=0;a.q16=0;a.q26=0;a.x4=0;a.x2=0;a.db=0;a.vy2=0;a.ddt=0;a.y2=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.vx2=0;a.q3=0;a.y4=0;a.q7=0;a.vy3=0;a.q28=0;a.xx1=0;a.q8=0;","frame_eqs_str":"a.xx1=.9*a.xx1+.01*a.bass;a.xx2=.9*a.xx2+.01*a.treb;a.yy1=.94*a.yy1+.0075*(a.treb+a.bass);a.x1=.5+2*(a.xx1-a.xx2);a.y1=.4+1.5*a.yy1;a.dt=div(.03,a.fps);a.vx2=a.vx2*(1-2*a.dt)+10*a.dt*(a.x1+a.x3-2*a.x2);a.vy2=a.vy2*(1-2*a.dt)+a.dt*(10*(a.y1+a.y3-2*a.y2)-.5);a.vx3=a.vx3*(1-2*a.dt)+10*a.dt*(a.x2+a.x4-2*a.x3);a.vy3=a.vy3*(1-2*a.dt)+a.dt*(10*(a.y2+a.y4-2*a.y3)-.5);a.vx4=a.vx4*(1-2*a.dt)+10*a.dt*(a.x3-a.x4);a.vy4=a.vy4*(1-2*a.dt)+a.dt*(10*(a.y3-a.y4)-.5);a.x2+=a.vx2;a.y2+=a.vy2;a.x3+=\na.vx3;a.y3+=a.vy3;a.x4+=a.vx4;a.y4+=a.vy4;a.vx2=.00001<Math.abs(above(a.x2,0))?a.vx2:.5*Math.abs(a.vx2);a.vx2=.00001<Math.abs(below(a.x2,1))?a.vx2:.5*-Math.abs(a.vx2);a.vx3=.00001<Math.abs(above(a.x3,0))?a.vx3:.5*Math.abs(a.vx3);a.vx3=.00001<Math.abs(below(a.x3,1))?a.vx3:.5*-Math.abs(a.vx3);a.vx4=.00001<Math.abs(above(a.x4,0))?a.vx4:.5*Math.abs(a.vx4);a.vx4=.00001<Math.abs(below(a.x4,1))?a.vx4:.5*-Math.abs(a.vx4);a.vy2=.00001<Math.abs(above(a.y2,0))?a.vy2:.5*Math.abs(a.vy2);a.vy2=.00001<Math.abs(below(a.y2,\n1))?a.vy2:.5*-Math.abs(a.vy2);a.vy3=.00001<Math.abs(above(a.y3,0))?a.vy3:.5*Math.abs(a.vy3);a.vy3=.00001<Math.abs(below(a.y3,1))?a.vy3:.5*-Math.abs(a.vy3);a.vy4=.00001<Math.abs(above(a.y4,0))?a.vy4:.5*Math.abs(a.vy4);a.vy4=.00001<Math.abs(below(a.y4,1))?a.vy4:.5*-Math.abs(a.vy4);a.q1=a.x1;a.q2=a.x2;a.q3=a.x3;a.q4=a.x4;a.q5=a.y1;a.q6=a.y2;a.q7=a.y3;a.q8=a.y4;a.q9=div(1,a.aspectx);a.q10=div(1,a.aspecty);a.q11=a.aspectx;a.q12=a.aspecty;a.q13=sqrt(a.vx4*a.vx4+a.vy4*a.vy4);a.q14=Math.atan2(a.vx4,a.vy4);\na.q15=Math.sin(a.q14);a.q16=Math.cos(a.q14);a.db=.98*a.db+.2*a.bass;a.bb+=.1*a.db;a.ddt=.98*a.ddt+.2*a.treb;a.tt+=.1*a.ddt;a.dm=.98*a.dm+.2*a.mid;a.mm+=.1*a.dm;a.q23=.5+.25*Math.sin(.1*(a.bb-a.mm));a.q24=.5+.25*Math.sin(.1*(a.tt-a.mm));a.w=.1*(a.bb-a.tt);a.q26=.25-.025*(a.db-a.ddt);a.q21=Math.sin(a.w);a.q22=Math.cos(a.w);a.q27=Math.sin(-a.w);a.q28=Math.cos(-a.w);a.q25=div(1,a.q26);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"// elastic thread code\n\nxx1 = xx1*0.9 + (bass)*0.01;\nxx2 = xx2*0.9 + (treb)*0.01;\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\nx1 = 0.5 + (xx1-xx2)*2;\ny1 = 0.4 + yy1*1.5;\ndt = 0.03/fps;\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\nx2 = x2 + vx2; y2 = y2 + vy2;\nx3 = x3 + vx3; y3 = y3 + vy3;\nx4 = x4 + vx4; y4 = y4 + vy4;\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\nq9 = 1/aspectx;\nq10 = 1/aspecty;\nq11 = aspectx;\nq12 = aspecty;\nq13 = sqrt(vx4*vx4 + vy4*vy4);\nq14 = atan2(vx4,vy4);\nq15 = sin(q14);\nq16 = cos(q14);\n\n// Flexis dampened sound response functions\n\ndb = db*0.98 + bass*0.2; // dampener\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\n\nddt = ddt*0.98 + treb*0.2;\ntt = tt + ddt*0.1;\n\ndm = dm*0.98 + mid*0.2;\nmm = mm + dm*0.1;\n\n\n//***** [q21-q28] variables for Flexis caleidoscope shader code *****\n\n// change\nq23 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x\nq24 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y\nw = (bb-tt)*0.1;                   // angle\nq26 = 0.25 - (db-ddt)*0.025;        // size\n\n//don't change\nq21 = sin(w);\nq22 = cos(w);\nq27 = sin(-w);\nq28 = cos(-w);\nq25 = 1/q26;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).x * 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\n  ) - (\n    (texture (sampler_blur1, (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) * 0.5).z;\n  tmpvar_7.y = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1) + bias1)\n  ) - (\n    (texture (sampler_blur1, (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) * 0.5).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((\n    (2.0 * texture (sampler_fc_main, uv_z_1).z)\n   - \n    (2.0 * ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1).z)\n  ) * 0.01));\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.9996, 0.9996))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 dz_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec2 uv_rr_5;\n  vec2 uv_r_6;\n  vec3 ret_7;\n  vec2 tmpvar_8;\n  tmpvar_8.x = q23;\n  tmpvar_8.y = q24;\n  vec2 tmpvar_9;\n  tmpvar_9 = ((uv - tmpvar_8) * aspect.xy);\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((q22 * tmpvar_9.x) - (q21 * tmpvar_9.y));\n  tmpvar_10.y = ((q21 * tmpvar_9.x) + (q22 * tmpvar_9.y));\n  uv_r_6 = (q25 * tmpvar_10);\n  uv_r_6 = (tmpvar_8 + (uv_r_6 * aspect.zw));\n  uv_r_6 = (1.0 - abs((\n    (fract((uv_r_6 * 0.5)) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_11;\n  tmpvar_11 = ((uv_r_6 - tmpvar_8) * aspect.xy);\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((q28 * tmpvar_11.x) - (q27 * tmpvar_11.y));\n  tmpvar_12.y = ((q27 * tmpvar_11.x) + (q28 * tmpvar_11.y));\n  uv_rr_5 = (q26 * tmpvar_12);\n  uv_rr_5 = (tmpvar_8 + (uv_rr_5 * aspect.zw));\n  vec2 tmpvar_13;\n  vec2 tmpvar_14;\n  tmpvar_14 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_13.x = (texture (sampler_main, (uv_rr_5 + tmpvar_14)).xyz - texture (sampler_main, (uv_rr_5 - tmpvar_14)).xyz).y;\n  vec2 tmpvar_15;\n  tmpvar_15 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_13.y = (texture (sampler_main, (uv_rr_5 + tmpvar_15)).xyz - texture (sampler_main, (uv_rr_5 - tmpvar_15)).xyz).y;\n  d_4 = (texsize.zw * 2.0);\n  dx_3 = (((texture (sampler_blur1, \n    (uv_rr_5 + (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_rr_5 - (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1));\n  dy_2 = (((texture (sampler_blur1, \n    (uv_rr_5 + (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_rr_5 - (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_16;\n  tmpvar_16.x = dx_3.y;\n  tmpvar_16.y = dy_2.y;\n  dz_1 = ((tmpvar_13 * 3.0) + tmpvar_16);\n  ret_7 = (vec3(((\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\n   + \n    (((texture (sampler_blur2, uv_rr_5).xyz * scale2) + bias2).y * 0.4)\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\n  vec2 tmpvar_17;\n  tmpvar_17.x = dx_3.x;\n  tmpvar_17.y = dy_2.x;\n  vec3 tmpvar_18;\n  tmpvar_18 = mix (mix (ret_7, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \n    (uv_rr_5 + ((tmpvar_17 * texsize.zw) * 18.0))\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_rr_5).zzz);\n  ret_7 = tmpvar_18;\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = tmpvar_18;\n  ret = tmpvar_19.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code\nret.x = tex2D( sampler_fc_main, uv_m ).x*0.5;\n\n\nfloat2 d = texsize.zw*4;\nfloat2 uv_z = (uv_orig-0.5)*0.996 + 0.5; // a small dose of zoom-in\nfloat3 dx = ( 2*GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) )*0.5;\nfloat3 dy = ( 2*GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) )*0.5;\nuv_z -=float2(dx.z,dy.z)*texsize.zw*2;\nret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2),\n             tex2d(sampler_fc_main,uv_z).z);\nret.z += (2*tex2d(sampler_fc_main,uv_z).z - 2*GetBlur1(saturate(uv_z)).z)*0.01;\n\n\nfloat2 uv_y = lerp(uv,uv_orig,0.9996);\nret.y =max(tex2d(sampler_fc_main,uv_y).y ,tex2d(sampler_fc_main,uv_orig).z)-0.008;\n}","comp_hlsl":"float sigmoid(float t, float c){\n   return 1 / ( 1 + exp(t*c));\n}\n\nshader_body\n{\n// ***** Flexis rotating caleidoscope code *****\n\nfloat2 cntr = float2(q23,q24); float sin = q21; float cos = q22; float scale = q25;\nfloat2 uv_r = (uv-cntr)*aspect.xy;\n       uv_r = scale*float2( cos*uv_r.x - sin*uv_r.y, sin*uv_r.x + cos*uv_r.y); // rotation\n       uv_r = cntr + uv_r*aspect.zw;\n       uv_r = 1.0 - abs( frac( uv_r * 0.5 ) * 2.0 - 1.0 ); // mirror\n\nsin = q27; cos = q28; scale = q26;\nfloat2 uv_rr = (uv_r-cntr)*aspect.xy;\n       uv_rr = scale*float2( cos*uv_rr.x - sin*uv_rr.y, sin*uv_rr.x + cos*uv_rr.y); // counter-rotation\n       uv_rr = cntr + (uv_rr)*aspect.zw;\n\nfloat2 caleidoscope_uv = uv_rr;\n\n// *****\n\nuv = uv_rr;\n\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3;\n\nd = texsize.zw*2;\ndx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\ndy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7) + GetBlur2(uv).y*0.4-0.1;\n\nret = bg*float3(0.3,0.5,0.7);\nret = lerp(ret,float3(0.2,0.1,0),GetPixel(uv + float2(dx.x,dy.x)*texsize.zw*18).x*6);\nret = lerp(ret,1,GetPixel(uv).z);\n\n//ret = GetPixel(uv);\n\n//ret = sigmoid(length((uv-0.5)*aspect)-0.04,50);\n}"}