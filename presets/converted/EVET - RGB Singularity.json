{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":5.715,"wave_smoothing":0.9,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"zoom":0.9901,"warp":1.8566,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"x":0.72,"y":0.7,"ang":3.58141,"tex_zoom":8.751,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":2.44415,"smoothing":0},"init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;","frame_eqs_eel":"t1 = 0;\nv = 0.01;\nj = j + (bass_att)*0.01;\nj2 = j2 + (mid_att)*0.01;\nj3 = j3 + (treb_att)*0.01;\nt2 = j;\nt3 = j2;\nt4 = j3;\n//t5 = 0;\nk = k*0.95 + 5*(treb_att+mid_att+bass_att)/fps;\nt5 = -k;\n","point_eqs_eel":"sample=sample+0.5;\ns8 = sample*512;\ndir = s8*0.125*3.1415*0.5;\nv = 0.0005;\nt1 = 0;//t1*0.97 + value1*v;\nd = 1;\nxx = sin(dir+10*time)*(sample*d+t1);\nyy = cos(dir+10*time)*(sample*d+t1);\nzz = t1*(1-sample);\nv = 0.001;\n\nw = (sample*sin(time*0.3)*0.02-1);\ns1 = sin(sin(t2*w));\ns2 = sin(sin(t3*w));\ns3 = sin(sin(t4*w));\nc1 = cos(sin(t2*w));\nc2 = cos(sin(t3*w));\nc3 = cos(sin(t4*w));\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\na = 1.35;\nzoom = 0.35*(1/(z+a));\nx = 0.5 + zoom*x1 + sin(value1*10000000)*0.001;\ny = 0.5 + zoom*y1 + cos(value2*10000000)*0.001;\n\npi3 = 3.1415*2*0.3333;\nt = t5+sample*10;\nc = 2/(z+1);\nr = sin(t)*c;\nr = if(above(r,1),1,r);\nr = if(below(r,0),0,r);\n\ng = sin(t+pi3)*c;\ng = if(above(g,1),1,g);\ng = if(below(g,0),0,g);\n\nb = sin(t-pi3)*c;\nb = if(above(b,1),1,b);\nb = if(below(b,0),0,b);\n"},{"baseVals":{"enabled":1,"scaling":2.44415,"smoothing":0,"a":0},"init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;","frame_eqs_eel":"t1 = 0;\nv = 0.01;\nj = j + (bass_att)*0.01;\nj2 = j2 + (mid_att)*0.01;\nj3 = j3 + (treb_att)*0.01;\nt2 = j;\nt3 = j2;\nt4 = j3;\n//t5 = 0;\nk = k*0.95 + 5*(treb_att+mid_att+bass_att)/fps;\nt5 = -k;\n","point_eqs_eel":"s8 = sample*512;\ndir = s8*0.125*3.1415*0.5;\nv = 0.0005;\nt1 = 0;//t1*0.97 + value1*v;\nd = 1;\nxx = sin(dir+10*time)*(sample*d+t1);\nyy = cos(dir+10*time)*(sample*d+t1);\nzz = t1*(1-sample);\nv = 0.001;\n\nw = (sample*sin(time*0.3)*0.02-1);\ns1 = sin(sin(t2*w));\ns2 = sin(sin(t3*w));\ns3 = sin(sin(t4*w));\nc1 = cos(sin(t2*w));\nc2 = cos(sin(t3*w));\nc3 = cos(sin(t4*w));\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\na = 1.35;\nzoom = 0.35*(1/(z+a));\nx = 0.5 + zoom*x1;\ny = 0.5 + zoom*y1;\na=0.2;\npi3 = 3.1415*2*0.3333;\nt = t5+sample*10;\nc = 2/(z+1);\nr = sin(t)*c;\nr = if(above(r,1),1,r);\nr = if(below(r,0),0,r);\n\ng = sin(t+pi3)*c;\ng = if(above(g,1),1,g);\ng = if(below(g,0),0,g);\n\nb = sin(t-pi3)*c;\nb = if(above(b,1),1,b);\nb = if(below(b,0),0,b);\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\nq1 =aspectx;\nq2 = aspecty;\n\n\nb = b + bass*bass*0.85;\nm = m + mid*mid*0.85;\nt = t + treb*treb*0.85;\n\nq3 = b*0.012;\nq4 = m*0.012;\nq5 = t*0.012;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.y;\n  tmpvar_6.y = tmpvar_5.y;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 6.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.z;\n  tmpvar_8.y = tmpvar_5.z;\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - ((tmpvar_8 * texsize.zw) * 2.0));\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_blur1, uv);\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_main, uv_orig);\n  ret_1.y = (((\n    (texture (sampler_main, tmpvar_7).y - (((\n      (tmpvar_10.xyz * scale1)\n     + bias1).y - texture (sampler_main, tmpvar_7).y) * 0.024))\n   - 0.01) + (\n    (1.0 - tmpvar_11.x)\n   * 0.014)) + (tmpvar_2 * 0.01)).x;\n  ret_1.z = (((texture (sampler_main, tmpvar_9).z - \n    ((((tmpvar_10.xyz * scale1) + bias1).z - texture (sampler_main, tmpvar_9).z) * 0.024)\n  ) - 0.01) + (tmpvar_11.x * 0.014));\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\n   * 0.4) + (tmpvar_2 * 0.004)).x);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","comp":""}