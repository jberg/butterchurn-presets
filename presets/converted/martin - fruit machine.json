{"version":2,"baseVals":{"rating":2,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.169162,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":53,"rad":0.05408,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.2,"g":0.7,"g2":0,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\nx = .5;\ny = .5;\na = q24; \na2 = 0;\n//a = 1; \na = 0;\nrad0 = bnot(q24) * rad0 + rand(10)/50*q24;\nrad = rad0;\nb = 0; r = rand(10)/10; g = 1;\na2 = q24;"},{"baseVals":{"enabled":1,"sides":44,"textured":1,"x":0.7,"rad":0.2173,"tex_zoom":3.277448,"g":1,"b":0.5,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\nrot0 = rot0 + 1/fps * q1;\n\n\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\n\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\nrad = rad0;\n\n\nx =  posx;\ny =  posy;\nang = rot0;"},{"baseVals":{"enabled":1,"sides":63,"x":0.503,"rad":0.038857,"tex_zoom":2.2233,"g":0.1,"r2":1,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\nrot0 = rot0 + .1/fps * q2;\n\n\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\n\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/400);\nrad = rad0;\n\n\nx =  posx+q26;\ny =  posy;\nang = rot0;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.4);"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \n\nbeat = bass+mid+treb;\nbeat = beat*beat;\n\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2*avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att + 3;\nq27 = index + 1;\nq28 = index2;\nq29 = index2;\nmonitor = q29;\nk1 =  is_\nbeat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq5 = cos(time/17);\nq6 = sin(time/17);\nq7 = -q2;\nq8 = q1;\n\n\nds = ds*dec_med + q24*(1-dec_med);\nq25 = q24;\n//q25 = above(ds,.5);\n\nq10 = q22+3;\n\nt_rel = time*8;\n//q25 = below((t_rel)-int(t_rel),.2);\n\n\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\nq30 = p3 ;\n\np4 = dec_med*p4 + (1-dec_med)*q27;\nq31 = p4;\n\n\nzoom = 1.1 + q1*.2;\nwarp =0;\nob_size = .01;\nob_r = .9;\nob_g = 1;\nob_b = 0;\nob_a = .2*sin(time/7);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = (sqrt(dot (tmpvar_2, tmpvar_2)) + (rand_frame * 13.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_3) / cos(tmpvar_3)) / normalize(tmpvar_2))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 16.0));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((q24 * (\n    ((texture (sampler_main, uv_1).xyz + ((0.1 * vec3(\n      ((q1 * cos((uv_1.x * 44.0))) - cos((uv_1.y * 82.0)))\n    )) * (1.0 + texture (sampler_noise_lq, \n      ((uv_1 / 16.0) + (time / 100.0))\n    )).xyz)) * 0.98)\n   - 0.025)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_4.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv2_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\n  uv2_1 = (uv - 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  float tmpvar_5;\n  tmpvar_5 = (time / 8.0);\n  tmpvar_4.x = tmpvar_5;\n  float tmpvar_6;\n  tmpvar_6 = (q27 * 2.0);\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_4);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\n  xlat_mutableuv3 = ((0.1 * cos(\n    (22.0 * xlat_mutableuv3)\n  )) + (18.0 * xlat_mutabledz));\n  float tmpvar_7;\n  tmpvar_7 = clamp ((0.02 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  vec4 tmpvar_8;\n  tmpvar_8 = (1.0 + roam_cos);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_7)) + ((0.45 * \n    dot (vec3(tmpvar_7), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_8).xyz);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\n  vec2 tmpvar_9;\n  tmpvar_9.y = 0.0;\n  tmpvar_9.x = tmpvar_5;\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_9);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\n  xlat_mutableuv3 = ((0.1 * cos(\n    (22.0 * xlat_mutableuv3)\n  )) + (18.0 * xlat_mutabledz));\n  float tmpvar_10;\n  tmpvar_10 = clamp ((0.02 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_10)) + ((0.45 * \n    dot (vec3(tmpvar_10), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_8).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = (xlat_mutableret1 + clamp ((\n    (texture (sampler_main, uv).xyz * 4.0)\n   * \n    (0.2 + xlat_mutableret1)\n  ), 0.0, 1.0));\n  ret = tmpvar_11.xyz;\n }"}