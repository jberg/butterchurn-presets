{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.05741,"zoom":1.0095,"warp":0.00909,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.0334,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\na=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\nb=(sin(time*.3+t1-2*pi23)+1)*.5;\nr2=(sin(time*.3+t1-0*pi23)+1)*.5;\ng2=(sin(time*.3+t1-1*pi23)+1)*.5;\nb2=(sin(time*.3+t1-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"num_inst":281,"rad":0.01,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*tan(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.30)+1)*3.3;\na=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt2=0;//bass+mid+treb;\nr=(sin(time*.3+t2-0*pi23)+1)*.5;\ng=(sin(time*.3+t2-1*pi23)+1)*.5;\nb=(sin(time*.3+t2-2*pi23)+1)*.5;\nr2=(sin(time*.3+t2-0*pi23)+1)*.5;\ng2=(sin(time*.3+t2-1*pi23)+1)*.5;\nb2=(sin(time*.3+t2-2*pi23)+1)*.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=my;\n\na=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\nb=(sin(time*.3+t1-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*tan(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\na=(above(bass+mid+treb,.1));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\nb=(sin(time*.3+t1-2*pi23)+1)*.5;"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"x1 = 2;\ny1= 2;\nz1 = 2;","frame_eqs_eel":"q1 = aspectx;\nq2 = aspecty;\nwave_a = 0;\nv = 0.5;\nj1 = j1*0.95 + sqr(bass*4)*v;\nj2 = j2*0.95 + sqr(mid*4)*v;\nj3 = j3*0.95 + sqr(treb*4)*v;\n\nn = n + j1*0.0052;\nn1 = n1 + j2*0.0052;\nn2 = n2 + j3*0.0052;\n\n\nq3 = n*0.01; // passing the 3 room angles\nq4 = n1*0.01;\nq5 = n2*0.01;\n\n\n// lorenz-attractor calc\na = 10;\nb = 28;\nc = 9/5;\ndx1 = a*(y1-x1);\ndy1 = x1*(b-z1)-y1;\ndz1 = x1*y1-c*z1;\nd = 1;\ndd = sqrt(dx1*dx1 + dy1*dy1 + dz1*dz1);\nx1 = x1 + d*dx1/dd;\ny1 = y1 + d*dy1/dd;\nz1 = z1 + d*dz1/dd;\n\nq11 = x1;\nq12 = y1;\nq13 = z1;\nq14 = a;\nq15 = b;\nq16 = c;\nq17 = d;\n\n//a code snippet from Eo.S...\nvol = (bass_att+treb_att+mid_att)*.25;\nvol = vol*vol;\nvoltime = voltime + .1*vol;\nq32 = .4*voltime;\n\n//slow color changes\n\nq18 = .5+.5*sin(.1134*q32);\nq19 = .6+.4*cos(.1312*q32);\nq20 = .5 +.5*sin(.174*q32);\nq21 = .5 +.4*sin(.154*q32);","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  tmpvar_1.xyz = (texture (sampler_main, ((\n    ((tmpvar_2 * 0.99) + 0.5)\n   + \n    (((texture (sampler_blur1, (\n      (tmpvar_2 * 0.9)\n     + 0.5)).xyz * scale1) + bias1) * 0.1)\n  .xy) - 0.01)).xyz - 0.002);\n  ret = tmpvar_1.xyz;\n }","comp":"vec2 xlat_mutablec1;\nfloat xlat_mutablecutoff;\nvec2 xlat_mutabledenominator;\nvec2 xlat_mutablefraction;\nvec2 xlat_mutablenumerator;\nfloat xlat_mutables1;\n shader_body { \n  vec2 uv_1;\n  uv_1 = (0.5 + ((uv - 0.5) * 4.0));\n  xlat_mutablecutoff = 1.0;\n  xlat_mutablen1 = 1;\n  xlat_mutables1 = 0.33;\n  xlat_mutabledepth = 3;\n  for (int i_3 = 0; i_3 < xlat_mutabledepth; i_3++) {\n    xlat_mutablec1 = (((uv_1 - 0.5) * 2.0) * aspect.wz);\n    vec2 tmpvar_4;\n    tmpvar_4.x = q21;\n    tmpvar_4.y = q22;\n    xlat_mutablenumerator = ((xlat_mutablec1 + tmpvar_4) * 64.0);\n    vec2 tmpvar_5;\n    tmpvar_5.x = q23;\n    tmpvar_5.y = q24;\n    xlat_mutabledenominator = (xlat_mutablec1 + tmpvar_5);\n    vec2 tmpvar_6;\n    tmpvar_6.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n    tmpvar_6.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n    xlat_mutablefraction = (tmpvar_6 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n    xlat_mutablec1 = (xlat_mutablefraction - 0.5);\n    float tmpvar_7;\n    float tmpvar_8;\n    tmpvar_8 = (min (abs(\n      (xlat_mutablec1.x / xlat_mutablec1.y)\n    ), 1.0) / max (abs(\n      (xlat_mutablec1.x / xlat_mutablec1.y)\n    ), 1.0));\n    float tmpvar_9;\n    tmpvar_9 = (tmpvar_8 * tmpvar_8);\n    tmpvar_9 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n       * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n     * tmpvar_9) + 0.9999793) * tmpvar_8);\n    tmpvar_9 = (tmpvar_9 + (float(\n      (abs((xlat_mutablec1.x / xlat_mutablec1.y)) > 1.0)\n    ) * (\n      (tmpvar_9 * -2.0)\n     + 1.570796)));\n    tmpvar_7 = (tmpvar_9 * sign((xlat_mutablec1.x / xlat_mutablec1.y)));\n    if ((abs(xlat_mutablec1.y) > (1e-08 * abs(xlat_mutablec1.x)))) {\n      if ((xlat_mutablec1.y < 0.0)) {\n        if ((xlat_mutablec1.x >= 0.0)) {\n          tmpvar_7 += 3.141593;\n        } else {\n          tmpvar_7 = (tmpvar_7 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_7 = (sign(xlat_mutablec1.x) * 1.570796);\n    };\n    vec2 tmpvar_10;\n    tmpvar_10.x = ((0.3183098 * (\n      float(xlat_mutablen1)\n     * tmpvar_7)) + q26);\n    tmpvar_10.y = (((xlat_mutables1 * aspect.w) * log(\n      sqrt(dot (xlat_mutablec1, xlat_mutablec1))\n    )) + q27);\n    uv_1 = (0.5 + ((0.5 - \n      abs(((fract(\n        (tmpvar_10 * 0.5)\n      ) * 2.0) - 1.0))\n    ) * xlat_mutablecutoff));\n  };\n  uv_1 = (0.5 + (uv_1 - 0.5));\n  xlat_mutablecutoff = 1.0;\n  xlat_mutablen1 = 4;\n  xlat_mutables1 = 1.5;\n  xlat_mutabledepth = 1;\n  for (int i_1_2 = 0; i_1_2 < xlat_mutabledepth; i_1_2++) {\n    xlat_mutablec1 = (((uv_1 - 0.5) * 2.0) * aspect.wz);\n    vec2 tmpvar_11;\n    tmpvar_11.x = q21;\n    tmpvar_11.y = q22;\n    xlat_mutablenumerator = ((xlat_mutablec1 + tmpvar_11) * 64.0);\n    vec2 tmpvar_12;\n    tmpvar_12.x = q23;\n    tmpvar_12.y = q24;\n    xlat_mutabledenominator = (xlat_mutablec1 + tmpvar_12);\n    vec2 tmpvar_13;\n    tmpvar_13.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n    tmpvar_13.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n    xlat_mutablefraction = (tmpvar_13 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n    xlat_mutablec1 = (xlat_mutablefraction - 0.5);\n    float tmpvar_14;\n    float tmpvar_15;\n    tmpvar_15 = (min (abs(\n      (xlat_mutablec1.x / xlat_mutablec1.y)\n    ), 1.0) / max (abs(\n      (xlat_mutablec1.x / xlat_mutablec1.y)\n    ), 1.0));\n    float tmpvar_16;\n    tmpvar_16 = (tmpvar_15 * tmpvar_15);\n    tmpvar_16 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\n       * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\n     * tmpvar_16) + 0.9999793) * tmpvar_15);\n    tmpvar_16 = (tmpvar_16 + (float(\n      (abs((xlat_mutablec1.x / xlat_mutablec1.y)) > 1.0)\n    ) * (\n      (tmpvar_16 * -2.0)\n     + 1.570796)));\n    tmpvar_14 = (tmpvar_16 * sign((xlat_mutablec1.x / xlat_mutablec1.y)));\n    if ((abs(xlat_mutablec1.y) > (1e-08 * abs(xlat_mutablec1.x)))) {\n      if ((xlat_mutablec1.y < 0.0)) {\n        if ((xlat_mutablec1.x >= 0.0)) {\n          tmpvar_14 += 3.141593;\n        } else {\n          tmpvar_14 = (tmpvar_14 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_14 = (sign(xlat_mutablec1.x) * 1.570796);\n    };\n    vec2 tmpvar_17;\n    tmpvar_17.x = ((0.3183098 * (\n      float(xlat_mutablen1)\n     * tmpvar_14)) + q26);\n    tmpvar_17.y = (((xlat_mutables1 * aspect.w) * log(\n      sqrt(dot (xlat_mutablec1, xlat_mutablec1))\n    )) + q27);\n    uv_1 = (0.5 + ((0.5 - \n      abs(((fract(\n        (tmpvar_17 * 0.5)\n      ) * 2.0) - 1.0))\n    ) * xlat_mutablecutoff));\n  };\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ((texture (sampler_main, uv_1).xyz * 0.4) + ((\n    (texture (sampler_blur2, uv_1).xyz * scale2)\n   + bias2) * 1.75));\n  ret = tmpvar_18.xyz;\n }"}