{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":2,"wave_brighten":0,"wave_a":1,"wave_scale":0,"wave_smoothing":0.9,"wave_mystery":0.173,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_g":0,"wave_b":0,"wave_x":0.448,"wave_y":0.122,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":1,"mv_y":1,"mv_dx":0.087,"mv_dy":0.343,"mv_l":1.663,"mv_r":0.89,"mv_g":0.03,"mv_b":0.881,"mv_a":0.199,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":1.32775,"tex_zoom":0.57959,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"border_r = border_r + 1.5*sin(q2*1.13);\nborder_b = border_b + 0.5*sin(q2*1.23);\nborder_g = border_g + 0.5*sin(q2*1.33);\n//ang = 0.503 + (bass_att * 0.04);\nmy_ang = my_ang + (0.005 + (0.001 * bass));\nang = my_ang;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//begin beat code\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\n//Adjust responsiveness: To increase responsiveness, set the \"0.96 and \"0.996\" on the next line to slightly lower values. Higher values decrease responsiveness.\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\n//end beat code\n\nzoom = 1;\ndecay = 1;\nwarp = 0;\nwave_a = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nq2 = 1;\n\nq1=1;\nvol = vol + ((alt + bass + mid)/3-vol)*tic*1;\nq5 = vol*vol*vol*2;\n\n\nq8 = sin(time)*.5;\nq9 = sin(time*.75)*.5;\n\nsw = abs(sw - beat);\nan = an + tic*.5*(1-2*sw);\n\n\nq7 = 1+(pow(q8,2) + pow(q9,2))*1;\nq10 = sin(an);\nq11 = cos(an);\n\nsp = sp + tic*vol*vol*.5;\n\nq12 = sp;\n\nmonitor = q12;\nvol2=bass+treb+mid;\nmtime=mtime+vol2;\nq1=3-sin(mtime*.01)*.1;","pixel_eqs_eel":"//zoom = pow(rad,2)+.01;","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv3_1;\n  vec2 uvm_2;\n  vec3 ret_3;\n  uvm_2 = (((\n    ((uv - 0.5) * q7)\n   * \n    (1.0/((((1.0 - \n      (rad * 0.1)\n    ) + (q9 * \n      (uv.x - 0.5)\n    )) + (q8 * (uv.y - 0.5)))))\n  ) + 0.5) - 0.5);\n  uvm_2 = (((\n    (q10 * uvm_2)\n   + \n    ((vec2(1.0, -1.0) * q11) * uvm_2.yx)\n  ) * aspect.yw) + 0.5);\n  uvm_2 = (abs((\n    fract(((uvm_2 + q12) * 0.5))\n   - 0.5)) * 2.0);\n  uv3_1 = (((texture (sampler_main, uvm_2).zx - 0.37) * 0.13) + uvm_2);\n  vec3 tmpvar_4;\n  tmpvar_4.x = (roam_cos.x * 0.3);\n  tmpvar_4.y = (roam_cos.z * 0.2);\n  tmpvar_4.z = (roam_sin.y * 0.4);\n  ret_3 = (texture (sampler_pw_main, uvm_2).yzx + tmpvar_4);\n  ret_3 = (pow (mix (vec3(\n    ((((texture (sampler_blur1, uv3_1).xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv3_1).xyz * scale3) + bias3).z) + (0.1 * roam_cos.y))\n  ), ret_3, ret_3), vec3(0.3, 2.0, 1.0)) - 0.25);\n  ret_3 = (ret_3 * ((texture (sampler_blur3, uv3_1).xyz * scale3) + bias3).y);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_3;\n  ret = tmpvar_5.xyz;\n }"}