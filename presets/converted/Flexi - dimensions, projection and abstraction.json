{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.9,"wave_scale":2.997,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.274,"warpscale":7.98,"zoom":0.99951,"warp":0.20929,"wave_r":0.02,"wave_g":0.02,"wave_b":0,"ob_size":0.05,"ob_r":1,"ob_g":0.05,"ob_a":1,"ib_size":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":5,"mv_a":0,"b1ed":0.2},"shapes":[{"baseVals":{"sides":99,"textured":1,"x":1,"y":0.63,"rad":1.3,"tex_zoom":0.763,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"y":0.55,"rad":0.225,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.85,"y":0,"rad":1.3,"tex_zoom":2.068,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":3,"textured":1,"x":0.02,"rad":0.733,"ang":1.319,"tex_zoom":100,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0,"b":0,"a":0.99},"init_eqs_str":"a.my_z=0;a.d=0;a.n=0;a.y3=0;a.z2=0;a.y1=0;a.w=0;a.t5=0;a.w2=0;a.t1=0;a.x1=0;a.q6=0;a.zoom=0;a.p=0;a.q1=0;a.q5=0;a.q9=0;a.t8=0;a.z3=0;a.w3=0;a.t3=0;a.my_x=0;a.x3=0;a.t6=0;a.my_y=0;a.pi=0;a.q10=0;a.q4=0;a.t7=0;a.rd=0;a.w1=0;a.x2=0;a.t2=0;a.l=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.t4=0;a.q8=0;a.t2=0;a.t3=0;a.t4=0;a.ab=1;","frame_eqs_str":"a.t1=a.q1;a.t2=a.q2;a.t3=a.q3;a.t4=a.q4;a.t5=a.q5;a.t6=a.q6;a.t8=.07;a.t7=1;","point_eqs_str":"a.t7=-a.t7;a.pi=Math.asin(1);a.n=180;a.rd=.075;a.my_x=.5*Math.sin(a.sample*a.pi*4+(a.t7+1)*a.t8)+Math.cos(a.sample*a.pi*a.n)*a.rd*Math.sin(a.sample*a.pi*4+(a.t7+1)*a.t8);a.my_z=.5*Math.cos(a.sample*a.pi*4+(a.t7+1)*a.t8)+Math.cos(a.sample*a.pi*a.n)*a.rd*Math.cos(a.sample*a.pi*4+(a.t7+1)*a.t8);a.my_y=Math.sin(a.sample*a.pi*a.n)*a.rd;a.d=1.4;a.zoom=.55;a.w3=-a.q8;a.w2=a.q9;a.w1=a.q10;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;\na.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+a.my_x;a.y=.5+a.my_y;a.b=-a.z3+.5;a.b=.5*Math.min(1,Math.max(0,\na.b));","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt8 = .07;\nt7 = 1;","point_eqs_eel":"t7 = -t7;\npi = asin(1);\nn = 180;\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\nmy_z = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\nmy_y = sin(sample*pi*n)*rd;\n\n\n\nd = 1.4; // makes the perspective impact\nzoom = 0.55;\n\nw3 = -q8;\nw2 = q9;\nw1 = q10;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;\n\nb = -z3 + 0.5;\nb = min(1,max(0,b))*0.5;"},{"baseVals":{"sep":20,"scaling":0.07,"smoothing":0.65,"r":0,"g":0.3,"b":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":30,"scaling":0.07,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":60,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.n=0;a.n2=0;a.q6=0;a.j3=0;a.q1=0;a.q5=0;a.angle1=0;a.n1=0;a.q9=0;a.v=0;a.angle2=0;a.q10=0;a.q4=0;a.j2=0;a.angle3=0;a.j1=0;a.q2=0;a.q3=0;a.q7=0;a.q8=0;a.q21=div(1,Math.asin(1));","frame_eqs_str":"a.zoom=1;a.wave_a=0;a.q1=div(.25,Math.asin(1));a.v=.4;a.j1=.95*a.j1+sqr(4*a.bass)*a.v;a.j2=.95*a.j2+sqr(4*a.mid)*a.v;a.j3=.95*a.j3+sqr(4*a.treb)*a.v;a.n+=.0052*a.j1;a.n1+=.0052*a.j2;a.n2+=.0052*a.j3;a.angle1=.01*a.n;a.angle2=.01*a.n1;a.angle3=.01*a.n2;a.q2=Math.cos(a.angle1);a.q3=Math.sin(a.angle1);a.q4=Math.cos(a.angle2);a.q5=Math.sin(a.angle2);a.q6=Math.cos(a.angle3);a.q7=Math.sin(a.angle3);a.q8=a.angle1;a.q9=a.angle2;a.q10=a.angle3;","pixel_eqs_str":"a.x=.5+(a.x-.51)*a.q1;a.y=.5-(a.y-.5)*a.q2;a.dx=a.x*(1-a.x)-div(a.q5*a.x*a.y,a.x+a.q6);a.dy=-a.q7*a.y*(1-div(a.y,a.x));a.dx=div(.02*-a.dx,a.q1);a.dy=div(.02*-a.dy,a.q2);","init_eqs_eel":"q21 = 1/asin(1);","frame_eqs_eel":"zoom = 1;\nwave_a = 0;\n\nq1 = 0.25/asin(1);\n\n\nv = 0.4;\nj1 = j1*0.95 + sqr(bass*4)*v;\nj2 = j2*0.95 + sqr(mid*4)*v;\nj3 = j3*0.95 + sqr(treb*4)*v;\n\nn = n + j1*0.0052;\nn1 = n1 + j2*0.0052;\nn2 = n2 + j3*0.0052;\n\n//n = time*100;\n//n1 = time*100;\n//n2 = time*100;\n\nangle1 = n*0.01;\nangle2 = n1*0.01;\nangle3 = n2*0.01;\n\n\nq2 = cos(angle1);\nq3 = sin(angle1);\n\nq4 = cos(angle2);\nq5 = sin(angle2);\n\nq6 = cos(angle3);\nq7 = sin(angle3);\n\n\nq8 = angle1;\nq9 = angle2;\nq10 = angle3;","pixel_eqs_eel":"x = 0.5 + (x-0.51)*q1;\ny = 0.5 - (y-0.5)*q2;\ndx = (x*(1-x)-q5*x*y/(x+q6));\ndy = -q7*y*(1-y/x);\n\ndx = -dx*0.02/q1;\ndy = -dy*0.02/q2;","warp":" shader_body { \n  vec2 d_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3 = vec3((texture (sampler_noise_lq, ((\n    (uv * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).y - 0.5));\n  float cosw_4;\n  cosw_4 = -(q6);\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv_orig - 0.5) * aspect.xy);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((cosw_4 * tmpvar_5.x) - (q7 * tmpvar_5.y));\n  tmpvar_6.y = ((q7 * tmpvar_5.x) + (cosw_4 * tmpvar_5.y));\n  vec2 tmpvar_7;\n  tmpvar_7 = ((0.5 - (tmpvar_6 * 2.0)) + ((tmpvar_3.xy * texsize.zw) * 4.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = (q9 * 0.5);\n  tmpvar_8.y = (q8 * 0.5);\n  vec2 numerator_9;\n  numerator_9 = (tmpvar_7 - vec2(0.0, 0.5));\n  vec2 denominator_10;\n  denominator_10 = (tmpvar_7 - vec2(1.0, 0.5));\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((numerator_9.x * denominator_10.x) + (numerator_9.y * denominator_10.y));\n  tmpvar_11.y = ((numerator_9.y * denominator_10.x) - (numerator_9.x * denominator_10.y));\n  vec2 tmpvar_12;\n  tmpvar_12 = (((tmpvar_11 / \n    ((denominator_10.x * denominator_10.x) + (denominator_10.y * denominator_10.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_13;\n  tmpvar_13 = sqrt(dot (tmpvar_12, tmpvar_12));\n  float tmpvar_14;\n  float tmpvar_15;\n  tmpvar_15 = (min (abs(\n    (tmpvar_12.x / tmpvar_12.y)\n  ), 1.0) / max (abs(\n    (tmpvar_12.x / tmpvar_12.y)\n  ), 1.0));\n  float tmpvar_16;\n  tmpvar_16 = (tmpvar_15 * tmpvar_15);\n  tmpvar_16 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\n     * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\n   * tmpvar_16) + 0.9999793) * tmpvar_15);\n  tmpvar_16 = (tmpvar_16 + (float(\n    (abs((tmpvar_12.x / tmpvar_12.y)) > 1.0)\n  ) * (\n    (tmpvar_16 * -2.0)\n   + 1.570796)));\n  tmpvar_14 = (tmpvar_16 * sign((tmpvar_12.x / tmpvar_12.y)));\n  if ((abs(tmpvar_12.y) > (1e-08 * abs(tmpvar_12.x)))) {\n    if ((tmpvar_12.y < 0.0)) {\n      if ((tmpvar_12.x >= 0.0)) {\n        tmpvar_14 += 3.141593;\n      } else {\n        tmpvar_14 = (tmpvar_14 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_14 = (sign(tmpvar_12.x) * 1.570796);\n  };\n  vec2 tmpvar_17;\n  tmpvar_17.x = (tmpvar_14 * 0.1591549);\n  tmpvar_17.y = tmpvar_13;\n  vec2 tmpvar_18;\n  tmpvar_18.x = ((tmpvar_17.x * 2.0) + tmpvar_8.x);\n  tmpvar_18.y = ((0.3 * log(tmpvar_13)) + tmpvar_8.y);\n  vec2 tmpvar_19;\n  tmpvar_19 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_18 * 0.5)) * 2.0) - 1.0)\n  )));\n  ret_2.x = (((\n    (texture (sampler_blur1, tmpvar_19).xyz * scale1)\n   + bias1).x * 0.97) - 0.02);\n  ret_2.z = ((texture (sampler_main, (\n    (0.5 + ((uv_orig - 0.5) * 0.985))\n   + \n    ((tmpvar_3.xy * texsize.zw) * 0.5)\n  )).z * 0.85) - 0.004);\n  vec2 tmpvar_20;\n  tmpvar_20 = (texsize.zw * 4.0);\n  vec2 tmpvar_21;\n  tmpvar_21.x = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\n  )).y * 0.5);\n  tmpvar_21.y = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\n  )).y * 0.5);\n  d_1 = (tmpvar_21 * texsize.zw);\n  vec2 domain_22;\n  domain_22 = (uv_orig - (d_1 * 2.5));\n  vec4 tmpvar_23;\n  tmpvar_23.w = 0.0;\n  tmpvar_23.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\n  vec4 tmpvar_24;\n  tmpvar_24.w = 0.0;\n  tmpvar_24.xyz = max (tmpvar_23, texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\n  vec4 tmpvar_25;\n  tmpvar_25.w = 0.0;\n  tmpvar_25.xyz = max (tmpvar_24, texture (sampler_fc_main, domain_22)).xyz;\n  vec4 tmpvar_26;\n  tmpvar_26.w = 0.0;\n  tmpvar_26.xyz = max (tmpvar_25, texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\n  ret_2.y = ((max (tmpvar_26, texture (sampler_fc_main, \n    (domain_22 + (texsize.zw * vec2(1.0, 0.0)))\n  )).y + (\n    (texture (sampler_main, (uv_orig + (d_1 * 4.0))).y - ((texture (sampler_blur1, (uv_orig + \n      (d_1 * 4.0)\n    )).xyz * scale1) + bias1).y)\n   * 0.206)) - 0.09);\n  ret_2.y = (ret_2.y + ((\n    (texture (sampler_blur1, tmpvar_19).xyz * scale1)\n   + bias1).z * 0.25));\n  vec4 tmpvar_27;\n  tmpvar_27.w = 1.0;\n  tmpvar_27.xyz = ret_2;\n  ret = tmpvar_27.xyz;\n }","comp":" shader_body { \n  vec2 dz_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec3 p_5;\n  vec3 ret_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_8;\n  float tmpvar_9;\n  tmpvar_9 = (min (abs(\n    (tmpvar_7.x / 0.08)\n  ), 1.0) / max (abs(\n    (tmpvar_7.x / 0.08)\n  ), 1.0));\n  float tmpvar_10;\n  tmpvar_10 = (tmpvar_9 * tmpvar_9);\n  tmpvar_10 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_10) + 0.05368138) * tmpvar_10) - 0.1173503)\n     * tmpvar_10) + 0.1938925) * tmpvar_10) - 0.3326756)\n   * tmpvar_10) + 0.9999793) * tmpvar_9);\n  tmpvar_10 = (tmpvar_10 + (float(\n    (abs((tmpvar_7.x / 0.08)) > 1.0)\n  ) * (\n    (tmpvar_10 * -2.0)\n   + 1.570796)));\n  tmpvar_8 = (tmpvar_10 * sign((tmpvar_7.x / 0.08)));\n  if ((0.08 <= (1e-08 * abs(tmpvar_7.x)))) {\n    tmpvar_8 = (sign(tmpvar_7.x) * 1.570796);\n  };\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (min (abs(\n    (tmpvar_7.y / 0.08)\n  ), 1.0) / max (abs(\n    (tmpvar_7.y / 0.08)\n  ), 1.0));\n  float tmpvar_13;\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\n  tmpvar_13 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\n  tmpvar_13 = (tmpvar_13 + (float(\n    (abs((tmpvar_7.y / 0.08)) > 1.0)\n  ) * (\n    (tmpvar_13 * -2.0)\n   + 1.570796)));\n  tmpvar_11 = (tmpvar_13 * sign((tmpvar_7.y / 0.08)));\n  if ((0.08 <= (1e-08 * abs(tmpvar_7.y)))) {\n    tmpvar_11 = (sign(tmpvar_7.y) * 1.570796);\n  };\n  vec3 tmpvar_14;\n  tmpvar_14.x = (sin(tmpvar_8) * cos(tmpvar_11));\n  tmpvar_14.y = (sin(tmpvar_11) * cos(tmpvar_8));\n  tmpvar_14.z = (cos(tmpvar_8) * cos(tmpvar_11));\n  vec2 tmpvar_15;\n  tmpvar_15.x = ((tmpvar_14.z * q2) - (tmpvar_14.y * q3));\n  tmpvar_15.y = ((tmpvar_14.z * q3) + (tmpvar_14.y * q2));\n  vec2 tmpvar_16;\n  tmpvar_16.x = ((tmpvar_15.x * q4) - (tmpvar_14.x * q5));\n  tmpvar_16.y = ((tmpvar_15.x * q5) + (tmpvar_14.x * q4));\n  p_5.z = tmpvar_16.x;\n  vec2 tmpvar_17;\n  tmpvar_17.x = ((tmpvar_15.y * q6) - (tmpvar_16.y * q7));\n  tmpvar_17.y = ((tmpvar_15.y * q7) + (tmpvar_16.y * q6));\n  p_5.xy = tmpvar_17.yx;\n  float tmpvar_18;\n  float tmpvar_19;\n  tmpvar_19 = (min (abs(\n    (tmpvar_17.y / tmpvar_16.x)\n  ), 1.0) / max (abs(\n    (tmpvar_17.y / tmpvar_16.x)\n  ), 1.0));\n  float tmpvar_20;\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\n  tmpvar_20 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\n  tmpvar_20 = (tmpvar_20 + (float(\n    (abs((tmpvar_17.y / tmpvar_16.x)) > 1.0)\n  ) * (\n    (tmpvar_20 * -2.0)\n   + 1.570796)));\n  tmpvar_18 = (tmpvar_20 * sign((tmpvar_17.y / tmpvar_16.x)));\n  if ((abs(tmpvar_16.x) > (1e-08 * abs(tmpvar_17.y)))) {\n    if ((tmpvar_16.x < 0.0)) {\n      if ((tmpvar_17.y >= 0.0)) {\n        tmpvar_18 += 3.141593;\n      } else {\n        tmpvar_18 = (tmpvar_18 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_18 = (sign(tmpvar_17.y) * 1.570796);\n  };\n  float tmpvar_21;\n  tmpvar_21 = sqrt(dot (p_5.xz, p_5.xz));\n  float tmpvar_22;\n  float tmpvar_23;\n  tmpvar_23 = (min (abs(\n    (tmpvar_17.x / tmpvar_21)\n  ), 1.0) / max (abs(\n    (tmpvar_17.x / tmpvar_21)\n  ), 1.0));\n  float tmpvar_24;\n  tmpvar_24 = (tmpvar_23 * tmpvar_23);\n  tmpvar_24 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_24) + 0.05368138) * tmpvar_24) - 0.1173503)\n     * tmpvar_24) + 0.1938925) * tmpvar_24) - 0.3326756)\n   * tmpvar_24) + 0.9999793) * tmpvar_23);\n  tmpvar_24 = (tmpvar_24 + (float(\n    (abs((tmpvar_17.x / tmpvar_21)) > 1.0)\n  ) * (\n    (tmpvar_24 * -2.0)\n   + 1.570796)));\n  tmpvar_22 = (tmpvar_24 * sign((tmpvar_17.x / tmpvar_21)));\n  if ((abs(tmpvar_21) > (1e-08 * abs(tmpvar_17.x)))) {\n    if ((tmpvar_21 < 0.0)) {\n      if ((tmpvar_17.x >= 0.0)) {\n        tmpvar_22 += 3.141593;\n      } else {\n        tmpvar_22 = (tmpvar_22 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_22 = (sign(tmpvar_17.x) * 1.570796);\n  };\n  vec2 tmpvar_25;\n  tmpvar_25.x = (tmpvar_18 * q1);\n  tmpvar_25.y = (((tmpvar_22 * q1) * 2.0) + 0.5);\n  float cosw_26;\n  cosw_26 = -(q6);\n  vec2 tmpvar_27;\n  tmpvar_27 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_28;\n  tmpvar_28.x = ((cosw_26 * tmpvar_27.x) - (q7 * tmpvar_27.y));\n  tmpvar_28.y = ((q7 * tmpvar_27.x) + (cosw_26 * tmpvar_27.y));\n  vec2 tmpvar_29;\n  tmpvar_29 = (0.5 - (tmpvar_28 * 2.0));\n  vec2 tmpvar_30;\n  tmpvar_30.x = (q9 * 0.5);\n  tmpvar_30.y = (q8 * 0.5);\n  vec2 numerator_31;\n  numerator_31 = (tmpvar_29 - vec2(0.0, 0.5));\n  vec2 denominator_32;\n  denominator_32 = (tmpvar_29 - vec2(1.0, 0.5));\n  vec2 tmpvar_33;\n  tmpvar_33.x = ((numerator_31.x * denominator_32.x) + (numerator_31.y * denominator_32.y));\n  tmpvar_33.y = ((numerator_31.y * denominator_32.x) - (numerator_31.x * denominator_32.y));\n  vec2 tmpvar_34;\n  tmpvar_34 = (((tmpvar_33 / \n    ((denominator_32.x * denominator_32.x) + (denominator_32.y * denominator_32.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_35;\n  tmpvar_35 = sqrt(dot (tmpvar_34, tmpvar_34));\n  float tmpvar_36;\n  float tmpvar_37;\n  tmpvar_37 = (min (abs(\n    (tmpvar_34.x / tmpvar_34.y)\n  ), 1.0) / max (abs(\n    (tmpvar_34.x / tmpvar_34.y)\n  ), 1.0));\n  float tmpvar_38;\n  tmpvar_38 = (tmpvar_37 * tmpvar_37);\n  tmpvar_38 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_38) + 0.05368138) * tmpvar_38) - 0.1173503)\n     * tmpvar_38) + 0.1938925) * tmpvar_38) - 0.3326756)\n   * tmpvar_38) + 0.9999793) * tmpvar_37);\n  tmpvar_38 = (tmpvar_38 + (float(\n    (abs((tmpvar_34.x / tmpvar_34.y)) > 1.0)\n  ) * (\n    (tmpvar_38 * -2.0)\n   + 1.570796)));\n  tmpvar_36 = (tmpvar_38 * sign((tmpvar_34.x / tmpvar_34.y)));\n  if ((abs(tmpvar_34.y) > (1e-08 * abs(tmpvar_34.x)))) {\n    if ((tmpvar_34.y < 0.0)) {\n      if ((tmpvar_34.x >= 0.0)) {\n        tmpvar_36 += 3.141593;\n      } else {\n        tmpvar_36 = (tmpvar_36 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_36 = (sign(tmpvar_34.x) * 1.570796);\n  };\n  vec2 tmpvar_39;\n  tmpvar_39.x = (tmpvar_36 * 0.1591549);\n  tmpvar_39.y = tmpvar_35;\n  vec2 tmpvar_40;\n  tmpvar_40.x = ((tmpvar_39.x * 2.0) + tmpvar_30.x);\n  tmpvar_40.y = ((0.3 * log(tmpvar_35)) + tmpvar_30.y);\n  vec2 tmpvar_41;\n  tmpvar_41 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_40 * 0.5)) * 2.0) - 1.0)\n  )));\n  vec2 tmpvar_42;\n  vec2 tmpvar_43;\n  tmpvar_43 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_42.x = (texture (sampler_main, (uv + tmpvar_43)).xyz - texture (sampler_main, (uv - tmpvar_43)).xyz).y;\n  vec2 tmpvar_44;\n  tmpvar_44 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_42.y = (texture (sampler_main, (uv + tmpvar_44)).xyz - texture (sampler_main, (uv - tmpvar_44)).xyz).y;\n  d_4 = (texsize.zw * 2.0);\n  dx_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1));\n  dy_2 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_45;\n  tmpvar_45.x = dx_3.y;\n  tmpvar_45.y = dy_2.y;\n  dz_1 = ((tmpvar_42 * 3.0) + tmpvar_45);\n  vec2 tmpvar_46;\n  tmpvar_46.x = dx_3.x;\n  tmpvar_46.y = dy_2.x;\n  vec2 tmpvar_47;\n  tmpvar_47.x = dx_3.y;\n  tmpvar_47.y = dy_2.y;\n  vec3 tmpvar_48;\n  vec3 tmpvar_49;\n  tmpvar_49 = pow (hue_shader, vec3(4.0, 4.0, 4.0));\n  tmpvar_48 = (mix (mix (\n    mix (mix (ret_6, (1.0 - tmpvar_49), vec3((texture (sampler_main, tmpvar_41).x * 1.5))), vec3(1.5, 1.5, 1.5), ((texture (sampler_blur1, (\n      fract(tmpvar_25)\n     - \n      ((tmpvar_46 * texsize.zw) * 256.0)\n    )).xyz * scale1) + bias1).zzz)\n  , vec3(1.0, 1.0, 1.0), vec3(\n    (sqrt(dot (dz_1, dz_1)) + (texture (sampler_main, (uv + (\n      (tmpvar_47 * texsize.zw)\n     * 18.0))).y * 0.25))\n  )), (tmpvar_49 * 1.4), (\n    (texture (sampler_blur1, tmpvar_41).xyz * scale1)\n   + bias1).zzz) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, \n    fract(tmpvar_25)\n  ).z * 0.76))));\n  ret_6 = tmpvar_48;\n  vec4 tmpvar_50;\n  tmpvar_50.w = 1.0;\n  tmpvar_50.xyz = tmpvar_48;\n  ret = tmpvar_50.xyz;\n }","warp_hlsl":"float2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq*M_INV_PI_2, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center);\n   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);\n}\n\n\nfloat2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){\n   float2 uv_r = (domain-center);\n   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;\n}\n\nfloat3 maxNeumann(float2 domain){\n   float3 maxneumann = float3(0,0,0);\n   float2 pixel = texsize.zw;\n   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2(-1, 0) ));\n   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0,-1) ));\n   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0, 0) ));\n   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0, 1) ));\n   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 1, 0) ));\n   return maxneumann;\n}\n\nshader_body\n{\n   float3 noise = (tex2D(sampler_noise_lq, uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy).y-0.5);\n   float2 uvo = uv;\n\n   uv = uv_orig;\n\n   float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q7, -q6, 2) + noise.xy*texsize.zw*4;\n   float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q9*0.5,q8*0.5));\n   float2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\n   ret.x = GetBlur1(mirror_uv).x*0.97-0.02;\n\n\n   ret.z = GetPixel(0.5+(uv-0.5)*0.985 + noise.xy*texsize.zw*0.5).z*0.85 - 0.004;\n\n   float2 d = texsize.zw*4;\n   float dx = (2*GetBlur1(uv+d*float2(1,0))-2*GetBlur1(uv+d*float2(-1,0)) ).y*0.5;\n   float dy = (2*GetBlur1(uv+d*float2(0,1))-2*GetBlur1(uv+d*float2(0,-1)) ).y*0.5;\n\n   d = float2(dx,dy)*texsize.zw;\n\n   ret.y = maxNeumann(uv-d*2.5).y + (GetPixel(uv+d*4).y - GetBlur1(uv + d*4).y)*0.206 - 0.09;\n\n   ret.y += GetBlur1(mirror_uv).z*0.25;\n}","comp_hlsl":"float2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq*M_INV_PI_2, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center);\n   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);\n}\n\n\nfloat2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){\n   float2 uv_r = (domain-center);\n   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;\n}\n\nfloat2 polar, factorA, factorB, product;\nsampler sampler_wrenches;\n\nshader_body\n{\nfloat2 c = (uv-0.5)*aspect.xy;float z = 0.08;polar = float2( atan2(c.x,z), atan2(c.y,z));\nfloat3 p = float3( sin(polar.x)*cos(polar.y),sin(polar.y)*cos(polar.x),cos(polar.x)*cos(polar.y));\nfactorA = p.zy;factorB = float2(q2,q3);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zy = product.xy;factorA = p.zx;factorB = float2(q4,q5);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zx = product.xy;factorA = p.yx;factorB = float2(q6,q7);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\np.yx = product.xy;polar = float2( atan2(p.x,p.z)*q1,atan2(p.y,length(p.xz))*q1*2 + 0.5);\n\nfloat2 uvo = uv;\n\nfloat2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q7, -q6, 2);\nfloat2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q9*0.5,q8*0.5));\nfloat2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nret = lerp(ret, 1-pow(hue_shader,4), GetPixel(mirror_uv).x*1.5);\n\n//ret = lerp(ret, float3(0,0,0), GetPixel(uv).y);\n\nfloat2 d = texsize.zw;\nfloat3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\nfloat3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3; d = texsize.zw*2;\ndx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\ndy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\ndz +=float2(dx.y,dy.y);\n\nret = lerp(ret, 1.5, GetBlur1(frac(polar) - float2(dx.x,dy.x)*texsize.zw*256).z);\n\nret = lerp(ret, 1, length(dz) + GetPixel(uv + float2(dx.y,dy.y)*texsize.zw*18).y*0.25);\n\nret = lerp(ret, pow(hue_shader,4)*1.4, GetBlur1(mirror_uv).z);\n\nret = lerp(ret, 0, GetPixel(frac(polar)).z*0.76);\n\n\n//ret = GetPixel(uv).y;\n}"}