{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":4,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.245,"wave_scale":0.959,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":3.987,"warpscale":0.034,"zoomexp":0.75683,"zoom":1.00814,"warp":0.06295,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na =1;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\ntrans2 = rand(int(q30))/15+instance-instance;\ntrans3 = rand(int(q30))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q30))/15+instance-instance;\nr=rand(q30)*.1+instance-instance;\ng=rand(q30)*.1+instance-instance;\nb=rand(q30)*.1+instance-instance;\nr2=rand(q30)*.1+instance-instance;\ng2=rand(q30)*.1+instance-instance;\nb2=rand(q30)*.1+instance-instance;\nborder_r=rand(q30)*.1+instance-instance;\nborder_g=rand(q30)*.1+instance-instance;\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1=zoom;\nzoom=zoom-0.008;\nwarp=0;\nwave_a=0;\nmaj=above(bass*treb,3.1)*0.05;\nnor=above(bass*treb,2.5)*0.025;\nmini=above(bass*treb,2)*0.001;\n//'min' gives an error.\nzoom=zoom-if(if(maj,nor,maj),mini,nor);\nq30=bass+treb+mid;","pixel_eqs_eel":"//zoom=zoom+(int(rand(256))-int(rand(256)))/25;","warp":"vec4 xlat_mutabletexsize;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabletexsize.xy = (texsize.zw * 3.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.x - xlat_mutabletexsize.x);\n  tmpvar_2.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, (uv - xlat_mutabletexsize.xy));\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x + (xlat_mutabletexsize.x * 2.0));\n  tmpvar_4.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x + xlat_mutabletexsize.x);\n  tmpvar_5.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (uv.x + xlat_mutabletexsize.x);\n  tmpvar_6.y = (uv.y - xlat_mutabletexsize.y);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (uv.x - (xlat_mutabletexsize.x * 2.0));\n  tmpvar_7.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv.x - xlat_mutabletexsize.x);\n  tmpvar_8.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = (uv.x - xlat_mutabletexsize.x);\n  tmpvar_9.y = (uv.y + xlat_mutabletexsize.y);\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_main, tmpvar_9);\n  vec2 tmpvar_11;\n  tmpvar_11.x = (uv.x + xlat_mutabletexsize.x);\n  tmpvar_11.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_main, (uv + xlat_mutabletexsize.xy));\n  ret_1 = (ret_1 + ((1.2 * \n    ((((tmpvar_12.xyz + texture (sampler_main, tmpvar_11).xyz) + (texture (sampler_main, \n      (uv + (xlat_mutabletexsize.xy * vec2(2.0, 2.0)))\n    ).xyz + tmpvar_10.xyz)) + ((texture (sampler_main, tmpvar_8).xyz + texture (sampler_main, tmpvar_7).xyz) + (texture (sampler_main, tmpvar_6).xyz + texture (sampler_main, tmpvar_5).xyz))) + ((texture (sampler_main, tmpvar_4).xyz + tmpvar_3.xyz) + (texture (sampler_main, (uv - \n      (xlat_mutabletexsize.xy * vec2(2.0, 2.0))\n    )).xyz + texture (sampler_main, tmpvar_2).xyz)))\n  ) / 12.0));\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * xlat_mutabletexsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_13.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_13.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_13.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.5));\n  ret_1 = (ret_1 / (1.0 + (\n    ((tmpvar_12.xyz + tmpvar_10.xyz) + (tmpvar_3.xyz + tmpvar_10.xyz))\n   * 0.01)));\n  ret_1 = (ret_1 * 1.1);\n  ret_1 = (ret_1 + (0.1 * (0.5 - texture (sampler_noise_lq, \n    ((uv_orig * rand_frame.xy) * 9.0)\n  ))).xyz);\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_1;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec2 uvm_1;\n  vec3 ret_2;\n  uvm_1.x = (uv.x - (0.07 * texture (sampler_noise_hq, vec2((uv.x * 0.8))).x));\n  uvm_1.y = (uv.y - (0.07 * texture (sampler_noise_hq, vec2((uv.y * 0.8))).x));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, fract(uvm_1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((10.0 * tmpvar_3.xyz) - (\n    ((texture (sampler_blur1, uvm_1).xyz * scale1) + bias1)\n   * rad)) * ((0.8 * tmpvar_3.xyz) + cos(\n    (((rad * 2.0) - (roam_sin * 2.0)) + time)\n  ).xyz).x);\n  vec3 tmpvar_5;\n  tmpvar_5 = (1.0 - tmpvar_4);\n  float tmpvar_6;\n  tmpvar_6 = dot (tmpvar_4, tmpvar_5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y * 0.75);\n  ret_2 = ((texture (sampler_main, tmpvar_7).xyz * tmpvar_5) + (0.55 * tmpvar_4));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uvm_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\n    ret_2.z = (ret_2.z - (tmpvar_8.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\n    ret_2.x = (ret_2.x - (tmpvar_8.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (ret_2.y - (tmpvar_8.z * 0.5));\n  };\n  ret_2 = (ret_2 * mix (ret_2, tmpvar_5, vec3((1.5 * \n    clamp (tmpvar_6, 0.0, 1.0)\n  ))));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }"}