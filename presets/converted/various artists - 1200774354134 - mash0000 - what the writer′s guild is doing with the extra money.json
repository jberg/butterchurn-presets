{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.959,"echo_zoom":1,"echo_alpha":0.047,"wave_mode":6,"wave_brighten":0,"darken_center":1,"wave_a":0.005,"wave_scale":0.113,"wave_smoothing":0,"wave_mystery":-0.214,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.778,"warpscale":51.512,"zoomexp":1.73596,"fshader":0.054,"zoom":1.00059,"rot":0.00438,"warp":0.01,"wave_x":0.597,"wave_y":0.819,"ob_size":0.005,"ob_r":0.301,"ob_g":0.111,"ob_b":0.266,"ob_a":1,"ib_size":0,"ib_r":0.622,"ib_g":0.698,"ib_b":0.831,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.486,"mv_g":0.675,"mv_b":0.347,"mv_a":0,"b1ed":0.107},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"y":0.661,"rad":0.0907,"tex_zoom":0.59662,"r":0.643,"g":0.044,"r2":0.398,"g2":0.722,"b2":0.172,"a2":0.68,"border_r":0.624,"border_b":0.503,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t = -(q4+q5)*0.2;\nx = 0.5 + sin(t)*0.2;\nrad = 0.4 - cos(t)*0.3;"},{"baseVals":{"sides":100,"thickoutline":1,"x":0.582,"y":0.451,"rad":0.43922,"ang":0.30557,"tex_zoom":0.70681,"r":0.79,"g":0.002,"b":0.105,"r2":0.52,"g2":0.186,"b2":0.2,"a2":0.27,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t = -(q4+q5)*0.2;\npi = asin(1)*2;\nx = 0.5 + sin(t+pi)*0.2;\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\naang = if(below(d,0.12),rand(1000)/1000,aang);\nang = aang*4*asin(1);\ny = yy;"},{"baseVals":{"sides":100,"thickoutline":1,"x":0.651,"y":0.552,"rad":1.07507,"ang":0.52229,"tex_zoom":0.67074,"r":0.295,"b":0.118,"r2":0.427,"g2":0,"b2":0.546,"a2":0.68,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\naang = if(below(d,0.12),rand(1000)/1000,aang);\nang = aang*4*asin(1);\ny = yy;"},{"baseVals":{"sides":100,"thickoutline":1,"y":0.688,"rad":0.62269,"tex_zoom":0.96404,"r":0.891,"g":0.416,"b":0.243,"a":0.964,"r2":0.192,"g2":0.692,"b2":0.17,"a2":0.243,"border_a":0.051,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\ny = q5;\npi3 = 3.1415*2*0.3333;\nt = (q4-2*q5+q6)*0.2;\nc = 3;\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\nb = if(below(if(above(sin(t-pi3)*c,1),1,b),0),0,b);\nr2 = 1-r;\ng2 = 1-g;\nb2 = 1-b;"}],"waves":[{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":3.4621,"smoothing":0.5112,"r":0.569,"g":0.808,"b":0.557,"a":0.288,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 0;\nj = j + (bass)*0.01;\nj2 = j2 + (mid_att)*0.01;\nj3 = j3 + (treb_att)*0.01;\nt2 = j;\npi3 = 3.1415*2*0.3333;\nt = (q4+q5+q6)*0.005;\nc = 5;\nr = if(below(if(above(1-sin(t)*c,1),1,r),0),0,r);\ncl1 = if(below(if(above(cl1 + 0.002,1),0,cl1),0),1,cl1);\ng = if(below(if(above(1-sin(t+pi3)*c,1),1,g),0),0,g);\nb = if(below(if(above(1-sin(t-pi3)*c,1),1,b),0),0,b);\ncl2 = if(below(if(above(cl2 -1*q1,1),0,cl2),0),1,cl2);\ncl3 = if(below(if(above(cl3 +0.001,1),0,cl3),0),1,cl3);\nt6 = cl3;","point_eqs_eel":"t8 = -t8;\nyy = ((xx*1896575575)%10000000+100)/10000000 + t6 - if(above(yy+t6,1),1,0) - 0.5;\nzz = ((yy*58652340875)%10000000+100)/10000000 + t8 - if(above(zz+t8,1),1,0) - 0.5;\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\nw = 1;\nbb = d*d*0.5;\nn = 0.3;\ns1 = sin(sin(t2*w+bb)*n);\ns2 = sin(sin(t3*w+bb)*n);\nc1 = cos(sin(t2*w+bb)*n);\nc2 = cos(sin(t3*w+bb)*n);\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\nc3 = cos(sin(t4*w+bb)*n);\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\nr = if(below(if(above(r,1),1,r),0),0,r);\ng = if(below(if(above(g,1),1,g),0),0,g);"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":4.75054,"smoothing":0.192,"r":0.978,"b":0.93,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\npi3 = 3.1415*2*0.3333;\nt = (q4+q5+q6)*0.005 + 2;\nc = 5;\nr = if(below(if(above(1-sin(t)*c,1),1,r),0),0,r);\ng = if(below(if(above(1-sin(t+pi3)*c,1),1,g),0),0,g);\nb = if(below(if(above(1-sin(t-pi3)*c,1),1,b),0),0,b);","point_eqs_eel":"t8 = -t8;\nnd = sqrt(1-sqr((sample-0.5)*2));\nnz = sample*0.4 - 0.2*(1+t8*p);\nnx = sin(sample*100)*nd*0.2*(1+t8*p);\ng = 0;\nt = (q4-q6)*10;\nc = 2;\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\nb = if(below(if(above(sin(t-pi3)*c,1),1,b),0),0,b);\ndir = (t4-t6)*0.4 + (t1-t3)*(t8+1)*0.2;\nw = t5*0.4 + (t8+1)*t2*0.2;\nzz = nz;\nnyy = ny;\nny = cos(w)*nyy - sin(w)*zz;\nz = sin(w)*nyy + cos(w)*zz;\nyy = sin(dir)*nx + cos(dir)*ny;\nd = 0.5;\nzoom = 2 - sqrt(t2)*1.1;\nzm = sqrt(nx*nx+ny*ny+sqr(z+d))/d;\ny = 0.5 + zoom*yy*0.55/zm;"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":23.38429,"smoothing":0,"g":0.531,"b":0.67,"a":0.823,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q9;\nt2 = q2;\nt3 = q3*0.5;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt7 = q7;\nt8 = q7;","point_eqs_eel":"sample = 1-sample;\nxx = (-0.5+sample)*2*d1*(1+value1);\nzz = cos(sample*n)*0.02*d1;\nyy = sin(sample*n)*0.02*d1*(1+value2);\nd = sqrt( xx*xx + yy*yy + zz*zz);\nb = rand(1001)*.001*.6;\nm = d*d*2;\ndd = dd*0.95 + (value1);\nddd = dd*sample*(1-sample)*d;\ny = yy - (xx-xxx)*ddd;\nc1 = cos(t4*w + m*t1);\nc2 = cos(t5*w + m*t2);\nc3 = cos(t6*w + m*t3);\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\nna = 2;\nzoom = 0.3*atan2(na-z,na);\nx = 0.5 + zoom*x1;\npi3 = 3.1415*2*0.3333;\nt = -xx+t5*.2;\nc = 10;\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\na = 2;"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":2.24641,"smoothing":0.0648,"r":0.907,"g":0.728,"b":0.563,"a":0.999,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q4*0.75;\nt2 = q2;\nt3 = q6*0.75;\nt4 = q4;\nt5 = q5;\nt6 = q6*0.75;\nt7 = q7;\nt8 = q8;","point_eqs_eel":"t8 = -t8;\nn = 300;\nzz = (-0.5+sample)*2*d1;\nb = rand(1001)*.001*.6;\nyy = sin(sample*n)*0.02*d1*(1+value2);\nd = sqrt( xx*xx + yy*yy + zz*zz);\nw = .3;\nm = d*d*2;\ns1 = sin(t4*w + m*t1);\ns2 = sin(t5*w + m*t2);\ns3 = sin(t6*w + m*t3);\nc1 = cos(t4*w + m*t1);\nc2 = cos(t5*w + m*t2);\nc3 = cos(t6*w + m*t3);\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\nna = 2;\nzoom = 0.3*atan2(na-z,na);\nx = 0.5 + zoom*x1;\ny = 0.5 + zoom*y1;\npi3 = 3.1415*2*0.3333;\nt = -zz+t6*.2;\nc = 10;\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\na = 2;"}],"init_eqs_eel":"x1 = 0;\ny1 = 0;\nx2 = 0.5;\nx3 = 0.5;\nx4 = 0.5;","frame_eqs_eel":"decay = 0.25;\nxx1 = xx1*0.9 + (bass)*0.01;\nxx2 = xx2*0.9 + (treb)*0.01;\nlastbeat = nbeat*time + (1-nbeat)*lastbeat + equal(lastbeat,0)*time;\nx1 = 0.5 - (xx1-xx2)*2;\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nspring = 50;\ngrav = 2;\nq10 = beat;\ndt = 0.0005;\nvx2 = if(below(x2,1),if(above(x2,0),vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring),abs(vx2)*bounce),-abs(vx2)*bounce);\nvy2 = if(below(y2,1),if(above(y2,0),vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav),abs(vy2)*bounce),-abs(vy2)*bounce);\nvx3 = if(below(x3,1),if(above(x3,0),vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring),abs(vx3)*bounce),-abs(vx3)*bounce);\nvy3 = if(below(y3,1),if(above(y3,0),vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav),abs(vy3)*bounce),-abs(vy3)*bounce);\nspy4 = (y3-y4)*spring;\nq6 = tt;\nx2 = x2 + vx2;\ny2 = y2 + vy2;\nx3 = x3 + vx3;\ny3 = y3 + vy3;\nvy4 = if(below(y4,1),if(above(y4,0),vy4*(1-resist*dt) + dt*(spy4-grav),abs(vy4)*bounce),-abs(vy4)*bounce);\ny4 = y4 + vy4;\nq3 = x4;\nq7 = y4;\nq8 = y2;\nq4 = x2;\nq9 = x1;\nq1 = x1;\nq2 = x2;\nq12 = y3;\nzoom = 1;\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\nob_r = (bb-mn)/(mx-mn);\nob_b = (mm-mn)/(mx-mn);\nob_g = (tt-mn)/(mx-mn);\nq13 = atan2(vx3,vy3);\nq14 = sqrt(vx3*vx3 + vy3*vy3);\nq5 = sqrt(vx2*vx2 + vy2*vy2);","pixel_eqs_eel":"w1 = q9;\nw2 = q10;\nnx = nx-0.5;\nny = ny- 0.5;\nb1 = 0.075;\nm1 = q5*50;\nt1 = 0.1;\nx1 = nxx   +cos(ndir+1.5708)*b1;\ny1 = nyy -sin(ndir+1.5708)*b1;\nx2 = nxx   -cos(ndir+1.5708)*b1;\ny2 = nyy +sin(ndir+1.5708)*b1;\nd1 = sqrt((x1-nx)*(x1-nx)+(y1-ny)*(y1-ny))-b1*2;\nsi1 = 1- 1/(1+pow(2,-d1*100));\nd2 = sqrt((x2-nx)*(x2-nx)+(y2-ny)*(y2-ny))-b1*2;\nsi2 = 1- 1/(1+pow(2,-d2*100));\nsi3 = -pow(q5,3)*10;\ndx = (si1*sin(y1-ny)*m1*d1  - si2*sin(y2-ny)*m1*d2 + si3*cos(ndir)*t1)*2/aspectx + nv*sin(ndir)*(nr-nd)*(1-sigmoid(nd-nr,280))/aspectx + nv*(nx-nxx)*(nr-nd)*(1-sigmoid(nd-nr,70))/aspectx + (nv*(sin(ny-yy)*(nd-r)-(nx-xx)*(nd-r/2)) + cos(dir)*v2)*(1.00-sigmoid(nd-r,180))/aspectx;\ndy = (-si1*sin(x1-nx)*m1*d1 + si2*sin(x2-nx)*m1*d2 - si3*sin(ndir)*t1)*2/aspecty + nv*cos(ndir)*(nr-nd)*(1-sigmoid(nd-nr,280))/aspecty + nv*(ny-nyy)*(nr-nd)*(1-sigmoid(nd-nr,70))/aspecty + (-nv*(sin(nx-xx)*(nd-r)+(ny-yy)*(nd-r/2)) -sin(dir)*v2)*(1.00-sigmoid(nd-r,180))/aspecty;\nndir = -q2*1 + asin(1)*0;\nnxx = w1;\nnyy = 1-w2;","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_blur1, uv);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur2, uv);\n  ret_1 = ((vec3(1.0, 1.0, 0.0) * vec3((\n    ((((tmpvar_4.xyz * scale2) + bias2).x * 2.5) - (((tmpvar_2.xyz * scale1) + bias1).x * 0.7))\n   + \n    (tmpvar_3.x * 0.75)\n  ))) * (1.0 - (\n    ((tmpvar_2.xyz * scale1) + bias1)\n  .x * 1.85)));\n  ret_1 = (ret_1 + ((vec3(1.0, 0.0, 0.0) * tmpvar_3.x) + (vec3(0.25, 0.25, 0.25) * tmpvar_3.x)));\n  ret_1 = (ret_1 * max (tmpvar_3.y, (\n    ((tmpvar_4.xyz * scale2) + bias2)\n  .y * 0.5)));\n  ret_1 = (ret_1 * (1.0 - clamp (\n    (((tmpvar_2.xyz * scale1) + bias1).z * 10.0)\n  , 0.0, 1.0)));\n  ret_1 = (ret_1 + vec3(pow (tmpvar_3.z, 1.5)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }"}