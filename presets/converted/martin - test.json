{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.021,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.00826,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.05,"ib_size":0.26,"mv_x":0,"mv_y":0,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.6,"b3x":0.4,"b1ed":0},"shapes":[{"baseVals":{"sides":5,"num_inst":700,"x":0.9,"y":0.9,"rad":0.1971,"tex_zoom":2.51821,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"self = instance*reg01;\nage = gmegabuf(self+12);\nmax_age = reg02;\nsize = gmegabuf(self+13);\nflim = gmegabuf(self+6);\nif (age > 0,\n  x0 = gmegabuf(self)-reg07;\n  y0 = gmegabuf(self+1)-reg08;\n  z0 = gmegabuf(self+2)-reg09;\n\n\n  x1 = x0*reg30 + y0*reg31 + z0*reg32;\n  y1 = x0*reg33 + y0*reg34 + z0*reg35;\n  z1 = x0*reg36 + y0*reg37 + z0*reg38;\n\n\n  if (z1 > 0,\n    fac = reg19;;\n    x = .5 + x1/z1*fac*q31;\n    y = .5 - y1/z1*fac*q32;\n\n    megabuf(instance) = megabuf(instance)*.5 + .5*(rand(100)/100-.05);\n\n    bright = 1-pow(age/max_age,1);\n    bright =  min(8,max(0,2*bright*((1-flim)+.5*flim/megabuf(instance) - .5*megabuf(instance))));\n    a = .7;\n    rad = min(0.2,.001*size/z1*bright); \n    \n    k1 = 1;\n    r=gmegabuf(self+9);\n    g=gmegabuf(self+10);\n    b=gmegabuf(self+11);\n\n\n    tmp = .3;\n    r2 = r*tmp; g2 = g*tmp; b2 = b*tmp; \n    a2=0; \n    ang = z1*1000;\n  ,gmegabuf(self+12) += q30; rad = 0; ); //#age prematurely ?);\n\n, a=0; rad =0;) \n"},{"baseVals":{"sides":7,"num_inst":800,"x":0.26,"y":0.2,"rad":0.01,"tex_zoom":0.9355,"g":0.5,"g2":0,"border_r":0,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"self = instance*reg01 + reg13;\n\nage = gmegabuf(self+12);\nif (age > 0,\n  x0 = gmegabuf(self)-reg07;\n  y0 = gmegabuf(self+1)-reg08;\n  z0 = gmegabuf(self+2)-reg09;\n  size = gmegabuf(self+13);\n\n  x1 = x0*reg30 + y0*reg31 + z0*reg32;\n  y1 = x0*reg33 + y0*reg34 + z0*reg35;\n  z1 = x0*reg36 + y0*reg37 + z0*reg38;\n\n  if (z1 > 0, \n    fac = reg19;;\n    x = .5 + x1/z1*fac*q31;\n    y = .5 - y1/z1*fac*q32;\n    a = max(0,min(1,1-age/reg12)) ;\n   \n    rad = .0006/z1*size*(1+ pow(1-age,6)+4*age/reg12);\n  \n    rad = min(rad,.1);\n    r = min(1,a*4); g = a; b = pow(a,3); \n    a = .2; a2 = a*.3;\n  ,gmegabuf(self+12)+=q30; rad= 0); //#age prematurely ?\n\n, a=0; rad =0);\n\n//if (instance == reg14-1, rad = .2, 0);\n"},{"baseVals":{"sides":3,"num_inst":700,"x":0.39,"y":0.4,"rad":0.01,"tex_zoom":0.4479,"r":0,"g":0.3,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"self = (instance+reg00/2)*reg01;\nage = gmegabuf(self+12);\nmax_age = reg02;\nsize = gmegabuf(self+13);\nflim = gmegabuf(self+6);\nif (age > 0,\n  x0 = gmegabuf(self)-reg07;\n  y0 = gmegabuf(self+1)-reg08;\n  z0 = gmegabuf(self+2)-reg09;\n\n\n  x1 = x0*reg30 + y0*reg31 + z0*reg32;\n  y1 = x0*reg33 + y0*reg34 + z0*reg35;\n  z1 = x0*reg36 + y0*reg37 + z0*reg38;\n\n\n  if (z1 > 0,\n    fac = reg19;;\n    x = .5 + x1/z1*fac*q31;\n    y = .5 - y1/z1*fac*q32;\n\n    megabuf(instance) = megabuf(instance)*.5 + .5*(rand(100)/100-.05);\n\n    bright = 1-pow(age/max_age,1);\n    bright =  min(8,max(0,2*bright*((1-flim)+.5*flim/megabuf(instance) - .5*megabuf(instance))));\n    a = .7;\n    rad = min(0.2,.001*size/z1*bright); \n    \n    k1 = 1;\n    r=gmegabuf(self+9);\n    g=gmegabuf(self+10);\n    b=gmegabuf(self+11);\n\n\n    tmp = .3;\n    r2 = r*tmp; g2 = g*tmp; b2 = b*tmp; \n    a2=0; \n    ang = z1*1000;\n  ,gmegabuf(self+12) += q30; rad = 0; ); //#age prematurely ?);\n\n, a=0; rad =0;) \n"},{"baseVals":{"sides":6,"additive":1,"num_inst":350,"x":0.65,"y":0.8,"rad":0.01,"tex_zoom":0.3357,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"self = int(instance/num_inst*reg20)*reg01 + 100000; //#\n\nage = gmegabuf(self+12);\nif (age > 0,\n  max_age = reg22;\n  x0 = gmegabuf(self)-reg07;\n  y0 = gmegabuf(self+1)-reg08;\n  z0 = gmegabuf(self+2)-reg09;\n\n\n  x1 = x0*reg30 + y0*reg31 + z0*reg32;\n  y1 = x0*reg33 + y0*reg34 + z0*reg35;\n  z1 = x0*reg36 + y0*reg37 + z0*reg38;\n\n\n  if (z1 > 0,\n    rad = min(.1,.003/z1); //###\n   \n    r = gmegabuf(self+9);\n    g = gmegabuf(self+10);\n    b = gmegabuf(self+11);\n    r2 = r/3; b2 = b/3; g2 = g/3;\n    a = .17 * max(0,1-age/max_age);  a2 = 0;\n    fac = reg19;;\n    x = .5 + x1/z1*fac*q31;\n    y = .5 - y1/z1*fac*q32;\n  ,gmegabuf(self+12) += 4*q30; a= 0; rad=0); //#age prematurely ?);\n\n, a=0; rad=0;) ;\n"}],"waves":[{"baseVals":{"sep":20,"usedots":1,"additive":1,"scaling":0.2946,"smoothing":0.1,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"t0 = 0;","frame_eqs_eel":"t1 = 0;","point_eqs_eel":"self = t1*reg01 + 100000; //#\n\nage = gmegabuf(self+12);\nmax_age = reg22;\nif (age > 0,\n  x0 = gmegabuf(self)-reg07;\n  y0 = gmegabuf(self+1)-reg08;\n  z0 = gmegabuf(self+2)-reg09;\n\n\n  x1 = x0*reg30 + y0*reg31 + z0*reg32;\n  y1 = x0*reg33 + y0*reg34 + z0*reg35;\n  z1 = x0*reg36 + y0*reg37 + z0*reg38;\n\n\n  if (z1 > 0,\n    a = min(1,.03/z1)* max(0,1-age/max_age); //###\n    r = gmegabuf(self+9);\n    g = gmegabuf(self+10);\n    b = gmegabuf(self+11);\n    fac = reg19;;\n    x = .5 + x1/z1*fac;\n    y = .5 - y1/z1*fac;\n  ,gmegabuf(self+12) += 4*q30; a= 0; ); //#age prematurely ?);\n\n, a=0; ) ;\n\nt1 += 1;"},{"baseVals":{"usedots":1,"additive":1,"scaling":0.14869,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = samples;","point_eqs_eel":"self = t1*reg01 + 100000; //#\n\nage = gmegabuf(self+12);\nmax_age = reg22;\nif (age > 0,\n  x0 = gmegabuf(self)-reg07;\n  y0 = gmegabuf(self+1)-reg08;\n  z0 = gmegabuf(self+2)-reg09;\n\n\n  x1 = x0*reg30 + y0*reg31 + z0*reg32;\n  y1 = x0*reg33 + y0*reg34 + z0*reg35;\n  z1 = x0*reg36 + y0*reg37 + z0*reg38;\n\n\n  if (z1 > 0,\n    a = min(1,.03/z1)* max(0,1-age/max_age); //###\n    r = gmegabuf(self+9);\n    g = gmegabuf(self+10);\n    b = gmegabuf(self+11);\n    fac = reg19;;\n    x = .5 + x1/z1*fac;\n    y = .5 - y1/z1*fac;\n  ,gmegabuf(self+12) += 4*q30; a= 0; ); //#age prematurely ?);\n\n, a=0; ) ;\n\nt1 += 1;"},{"baseVals":{"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = samples*2;","point_eqs_eel":"self = t1*reg01 + 100000; //#\n\nage = gmegabuf(self+12);\nmax_age = reg22;\nif (age > 0,\n  x0 = gmegabuf(self)-reg07;\n  y0 = gmegabuf(self+1)-reg08;\n  z0 = gmegabuf(self+2)-reg09;\n\n\n  x1 = x0*reg30 + y0*reg31 + z0*reg32;\n  y1 = x0*reg33 + y0*reg34 + z0*reg35;\n  z1 = x0*reg36 + y0*reg37 + z0*reg38;\n\n\n  if (z1 > 0,\n    a = min(1,.03/z1)* max(0,1-age/max_age); //###\n    r = gmegabuf(self+9);\n    g = gmegabuf(self+10);\n    b = gmegabuf(self+11);\n    fac = reg19;;\n    x = .5 + x1/z1*fac;\n    y = .5 - y1/z1*fac;\n  ,gmegabuf(self+12) += 4*q30; a= 0; ); //#age prematurely ?);\n\n, a=0; ) ;\n\nt1 += 1;"},{"baseVals":{"usedots":1,"additive":1,"scaling":1.22018,"smoothing":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = samples*3;","point_eqs_eel":"self = t1*reg01 + 100000; //#\n\nage = gmegabuf(self+12);\nmax_age = reg22;\nif (age > 0,\n  x0 = gmegabuf(self)-reg07;\n  y0 = gmegabuf(self+1)-reg08;\n  z0 = gmegabuf(self+2)-reg09;\n\n\n  x1 = x0*reg30 + y0*reg31 + z0*reg32;\n  y1 = x0*reg33 + y0*reg34 + z0*reg35;\n  z1 = x0*reg36 + y0*reg37 + z0*reg38;\n\n\n  if (z1 > 0,\n    a = min(1,.03/z1)* max(0,1-age/max_age); //###\n    r = gmegabuf(self+9);\n    g = gmegabuf(self+10);\n    b = gmegabuf(self+11);\n    fac = reg19;;\n    x = .5 + x1/z1*fac;\n    y = .5 - y1/z1*fac;\n  ,gmegabuf(self+12) += 4*q30; a= 0; ); //#age prematurely ?);\n\n, a=0; ) ;\n\nt1 += 1;"}],"init_eqs_eel":"//The camera tries to follow the head of the firework and look into its direction\n//Camera speed and rotational speed is limited, camera lags behind\n//Camera angle is forced back into horizontal position\n\n//-------------- BEGIN MAIN PARAMS ---------------\n//SPEEDS\ngSpeed = .65;   //global speed, affects all other speeds incl. particle lifetimes\nhSpeed = .03;  //firework head speed\npSpeed = .06;   //speed of primary particles\ntSpeed = hspeed*3.5;  //speed of tail particles\n\n//CAMERA\nCamDist  = .03; //distance camera tries to stay behind firework \nCamSpeed = .27;  //camera follower speed\nCamLock = 6;    //how fast does camera angle lock on firework\nHLock = .1;     //force camera angle back into horizontal view\n\n//OTHER PARAMS\nsharp = 40;    //sharpness of bass/treb triggered head direction changes\ng0 = .02;      //gravitation\ncw = 50;       //air drag\n\n//---------- END MAIN PARAMS -----------------\n\nn = 0; loop (150000,gmegabuf(n) = 0; n+=1);\nfac = .4; reg19 = fac;\n\n//SPARKS\nobj_num = 1400; reg00 = obj_num;\nobj_size = 16; reg01 = obj_size;\nmax_age = 3.8; reg02 = max_age;\nhead_ptr = 0; \nfree = 0;\n\n//SPARKS2\nnum2 = 2048; reg20 = num2;\nfree2 = 0;\nptr2 = 0;\nmage2 = 1; reg22 = mage2;\nbase2 = 100000;\n\n//TAIL\nt_num = 800; reg10 =t_num;\nt_age = 1; reg12 = t_age;\ntbase = obj_num*obj_size; reg13 = tbase;\nt_ptr = 0; \nt_free = 0;\n\n\nx0 = (rand(10)-5)*.03; y0 = (rand(10)-5)*.03; z0 = (rand(10)-5)*.03;;\nxcam = 0; ycam = .0; zcam = -0;\n//Obj Structure - Index\n//0..2: x,y,z  3..5: vx,vy,vz  6..8: fx,fy,fz\n//9..11: rgb     12: age         13: size;\n\n\n//camera coordinate system\n  c1 = cos(0); c2 = cos(0); c3 = cos(0); \n  s1 = sin(0); s2 = sin(0); s3 = sin(0);\n\n  reg30 = c2*c1;            reg31 = c2*s1;            reg32 = -s2;\n  reg33 = s3*s2*c1 - c3*s1; reg34 = s3*s2*s1 + c3*c1; reg35 = s3*c2;\n  reg36 = c3*s2*c1 + s3*s1; reg37 = c3*s2*s1 - s3*c1; reg38 = c3*c2;\n\n\n//head coordinate system\n  reg50 = c2*c1;            reg51 = c2*s1;            reg52 = -s2;\n  reg53 = s3*s2*c1 - c3*s1; reg54 = s3*s2*s1 + c3*c1; reg55 = s3*c2;\n  reg56 = c3*s2*c1 + s3*s1; reg57 = c3*s2*s1 - s3*c1; reg58 = c3*c2;\n\ntmp = rand(12);\ncolr = 1-rand(100)/300; \ncolg = 1-rand(100)/300; \ncolb = 1-rand(100)/300; \n\nposx = rand(1000)/100; posz = rand(1000)/100;\n\nn1= rand(10)/20; n2 = rand(10)/20; n3 = rand(10)/20; n4 = rand(10)/20;\ni1= rand(10)/20; i2 = rand(10)/20; i3 = rand(10)/20; i4 = rand(10)/20;\n\nindex2 = int(rand(32));\nstart = .9;\n//-----------------------------------------","frame_eqs_eel":"","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_moss1;\n shader_body { \n  vec2 uv_1;\n  uv_1 = (((\n    (uv - 0.5)\n   / texsize_moss1.xy) * texsize.xy) + 0.5);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (((\n    (texture (sampler_moss1, uv_1) * float((uv_1.x < 1.0)))\n   * \n    float((uv_1.x > 0.0))\n  ) * float(\n    (uv_1.y < 1.0)\n  )) * float((uv_1.y > 0.0))).xyz;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }"}