{"version":2,"baseVals":{"rating":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.267,"zoom":1.16,"rot":-0.04,"warp":0.00052,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.02339,"tex_ang":0.62832,"g":1,"b":1,"a":0.5,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.002*cos(ma));\nmy=my+(.002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx+instance*.005;\ny=my+instance*.005;\n\na=(above(bass+mid+treb,.2));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(1/instance*time*.2+vol-0*pi23)+1)*.5;\ng=(sin(1/instance*time*.2+vol-1*pi23)+1)*.5;\nb=(sin(1/instance*time*.2+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":6,"rad":0.02248,"a":0.7,"g2":0,"a2":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.7)*3.1415*.03*bass);\nma=ma-(above(treb,.7)*3.1415*.03*treb);\n\nmx=mx+(.0015*cos(ma));\nmy=my+(.0015*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx+instance*.003;\ny=my+instance*.003;\n\na=(above(bass+mid+treb,.2));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.0303,"a":0.7,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.3)*3.1415*.05*bass);\nma=ma-(above(treb,.3)*3.1415*.05*treb);\n\nmx=mx+(.0055*cos(ma));\nmy=my+(.0055*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx+instance*.003;\ny=my+instance*.003;\n\na=(above(bass+mid+treb,.2));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(1/instance*time*.5+vol-0*pi23)+1)*.5;\ng=(sin(1/instance*time*.8+vol-1*pi23)+1)*.5;\nb=(sin(1/instance*time*.25+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.02248,"r":0,"a":0.7,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.11)*3.1415*.07*bass);\nma=ma-(above(treb,.11)*3.1415*.07*treb);\n\nmx=mx+(.0085*cos(ma));\nmy=my+(.0085*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx+instance*.003;\ny=my+instance*.003;\n\na=(above(bass+mid+treb,.2));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;"}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"}],"init_eqs_eel":"spintime = 0;","frame_eqs_eel":"basstime = basstime + bass_att*0.03;\nq1 = basstime;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nbasstime = if(below(basstime,465),465,basstime);\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\nspintime = spintime + bass*0.03*if(equal(state%2,1),1,-1); \nq8 = spintime;\n\nstate = state + above(diff,10);\n\nmonitor = spintime;","pixel_eqs_eel":"zoom = 1.05 - sin(q3)*0.04;\nrot =0;// 4.72;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  ret_1.xz = vec2(0.0, 0.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(uv);\n  ret_1.y = texture (sampler_fc_main, tmpvar_3).y;\n  ret_1.y = (ret_1.y + ((\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3).y) - 0.03)\n   * 0.6) - 0.06));\n  ret_1.y = (ret_1.y + ((\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\n   + bias3).x * 0.3));\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur1, \n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_4.y = (((texture (sampler_blur1, \n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).z;\n  ret_1.z = (texture (sampler_fc_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\n    (tmpvar_4 * texsize.zw)\n   * 8.0))).z - 0.03);\n  ret_1.z = (ret_1.z + ((\n    clamp ((0.2 - ((texture (sampler_blur2, uv).xyz * scale2) + bias2).y), 0.0, 1.0)\n   * 0.1) + (\n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .x * 0.2)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv - (\n    (tmpvar_5 * texsize.zw)\n   * 16.0)) + (tmpvar_6 * 0.2));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.x;\n  tmpvar_8.y = tmpvar_4.x;\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - ((tmpvar_8 * texsize.zw) * 8.0));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.y;\n  tmpvar_10.y = tmpvar_4.y;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_3.y;\n  tmpvar_11.y = tmpvar_4.y;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_3.y;\n  tmpvar_12.y = tmpvar_4.y;\n  vec3 tmpvar_13;\n  tmpvar_13 = mix (clamp ((\n    clamp (mix (mix (mix (\n      mix (mix (ret_1, vec3(0.4, 0.8, 0.9), ((texture (sampler_blur1, uv).xyz * scale1) + bias1).zzz), vec3(1.0, 1.0, 1.0), (vec3(1.04, 0.832, 0.32) * ((\n        (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1))\n       + \n        (texture (sampler_main, tmpvar_7).xyz * 0.9)\n      ) + (\n        (-(tmpvar_3.y) + tmpvar_4.y)\n       * 0.4)).y))\n    , vec3(0.0, 1.0, 2.0), vec3(\n      (((texture (sampler_blur3, (tmpvar_9 - \n        (tmpvar_10 * 0.4)\n      )).xyz * scale3) + bias3).x * 0.4)\n    )), vec3(1.0, 2.0, 2.0), vec3((\n      ((texture (sampler_blur2, (tmpvar_9 - (tmpvar_11 * 0.2))).xyz * scale2) + bias2)\n    .x * 0.4))), vec3(2.0, 2.0, 1.6), vec3(((\n      (texture (sampler_blur1, (tmpvar_9 - (tmpvar_12 * 0.1))).xyz * scale1)\n     + bias1).x * 0.2))), 0.0, 1.0)\n   * \n    (vec3(1.0, 1.0, 1.0) - vec3((((texture (sampler_blur1, \n      (tmpvar_9 + vec2(0.02, -0.02))\n    ).xyz * scale1) + bias1).x * 0.4)))\n  ), 0.0, 1.0), vec3(1.0, -0.2, -0.2), vec3((texture (sampler_main, uv).x * 0.6)));\n  ret_1 = tmpvar_13;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = tmpvar_13;\n  ret = tmpvar_14.xyz;\n }"}