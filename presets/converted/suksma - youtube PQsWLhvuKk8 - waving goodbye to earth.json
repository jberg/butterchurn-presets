{"version":2,"baseVals":{"rating":1,"gammaadj":1.28,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"fshader":1,"zoom":0.9996,"warp":0.01,"sy":1.0017,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.075,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));\npi23=4*asin(1)*.333333333;\nvol=bass+mid+treb;\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"}],"init_eqs_eel":"decay=0.1;","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1   = (vvb+vvm+vvt)*10;\nq2   = (vvb+vvm+vvt)*10;\nq3   = (vvb+vvm+vvt)*10;\nq4   = (vvb+vvm+vvt)*10;\nq5   = (vvb+vvm+vvt)*10;\nq6   = (vvb+vvm+vvt)*10;\nq7   = (vvb+vvm+vvt)*10;\nq8   = (vvb+vvm+vvt)*10;\nq9   = (vvb+vvm+vvt)*10;\nq10  = (vvb+vvm+vvt)*10;\nq11  = (vvb+vvm+vvt)*10;\nq12  = (vvb+vvm+vvt)*10;\nq13  = (vvb+vvm+vvt)*10;\nq14  = (vvb+vvm+vvt)*10;\nq15  = (vvb+vvm+vvt)*10;\nq16  = (vvb+vvm+vvt)*10;\nq17  = (vvb+vvm+vvt)*10;\nq18  = (vvb+vvm+vvt)*10;\nq19  = (vvb+vvm+vvt)*10;\nq20  = (vvb+vvm+vvt)*10;\nq21  = (vvb+vvm+vvt)*10;\nq22  = (vvb+vvm+vvt)*10;\nq23  = (vvb+vvm+vvt)*10;\nq24  = (vvb+vvm+vvt)*10;\nq25  = (vvb+vvm+vvt)*10;\nq26  = (vvb+vvm+vvt)*10;\nq27  = (vvb+vvm+vvt)*10;\nq28  = (vvb+vvm+vvt)*10;\nq29  = (vvb+vvm+vvt)*10;\nq30  = (vvb+vvm+vvt)*10;\nq31  = (vvb+vvm+vvt)*10;\nq32  = (vvb+vvm+vvt)*10;\n\n\n\nvol=(bass+mid+treb_att)*.3333;\n\nredsine=.5+.15*bass*sin(time*3);\ngreensine=.5+.15*mid*sin(time*2);\nbluesine=.5+.15*treb*sin(time);\n\nredif=if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.85));\ngreenif=if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.85));\nblueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.85));\n\nwave_r=redif;\nwave_g=greenif;\nwave_b=blueif;\n\nq11=sin(time)-1;\nq12=sin(time)-1;","pixel_eqs_eel":"dx=dx+.08*sin(x*32+sin(time*.51)*20*cos(time*.41));\ndy=dy+.08*sin(y*32+sin(time*.58)*20*cos(time*.33));","warp":" shader_body { \n  float n_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_3.xyz;\n  n_1 = (clamp ((texture (sampler_pw_main, \n    (uv + texsize.zw)\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(1.0, 0.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(1.0, -1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(0.0, 1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(0.0, -1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv - texsize.zw)\n  ).x * 999.0), 0.0, 1.0));\n  if ((n_1 < 1.9)) {\n    ret_2 = (tmpvar_3.xyz - 0.4);\n  };\n  if ((n_1 > 3.1)) {\n    ret_2 = (ret_2 - 0.4);\n  };\n  bool tmpvar_4;\n  if ((ret_2.x < 0.1)) {\n    tmpvar_4 = (abs((n_1 - 3.0)) < 0.5);\n  } else {\n    tmpvar_4 = bool(0);\n  };\n  if (tmpvar_4) {\n    ret_2 = (ret_2 + 0.4);\n  };\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur3, (uv_1 + (0.01 * \n      ((bass + mid) + treb)\n    ))).xyz * scale3) + bias3)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }"}