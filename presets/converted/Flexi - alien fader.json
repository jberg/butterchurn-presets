{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.267,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":5.921,"zoomexp":11.56276,"zoom":1.05971,"warp":0.17692,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"g":0.99,"b":1,"a":0.1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.80013,"ang":4.64954,"tex_zoom":1.24471,"g":1,"b":1,"r2":1,"b2":1,"a2":0.77,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_str":"","point_eqs_str":"tt3 = tt3*0.6 + (value1)*1;\ntt2 = tt2*0.7 + tt3*0.2;\ntt1 = tt1*0.8 + tt2*0.1;\nd = d*0.9 + tt1*0.2;\n\ny = 0.5 + d*sample*(1-sample)*4;\nx =  -0.05 + sample*1.1;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\ntt2 = tt2*0.7 + tt3*0.2;\ntt1 = tt1*0.8 + tt2*0.1;\nd = d*0.9 + tt1*0.2;\n\ny = 0.5 + d*sample*(1-sample)*4;\nx =  -0.05 + sample*1.1;"},{"baseVals":{"scaling":2.0231,"smoothing":0,"enabled":0},"init_eqs_str":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_str":"","point_eqs_str":"tt3 = tt3*0.6 + (value1)*1;\ntt2 = tt2*0.7 + tt3*0.2;\ntt1 = tt1*0.8 + tt2*0.1;\nd = d*0.9 + tt1*0.2;\n\ny = 0.5 + d*sample*(1-sample)*4;\nx =  -0.05 + sample*1.1;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\ntt2 = tt2*0.7 + tt3*0.2;\ntt1 = tt1*0.8 + tt2*0.1;\nd = d*0.9 + tt1*0.2;\n\ny = 0.5 + d*sample*(1-sample)*4;\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt7 = q7;\nt8 = q8;","point_eqs_str":"sample = 1-sample;\nxxx = xx;\nyyy = yy;\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\n\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;","init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt7 = q7;\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\nxxx = xx;\nyyy = yy;\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\n\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_str":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_str":"t8 = 1;","point_eqs_str":"t8 = -t8;\ny = (1+t8)*0.01;\nx = sample;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\ny = (1+t8)*0.01;\nx = sample;"}],"init_eqs_str":"a.w=0;a.h3=0;a.q12=0;a.bt=0;a.v=0;a.mm=0;a.h2=0;a.tt=0;a.bm=0;a.q11=0;a.q10=0;a.q4=0;a.mt=0;a.mx=0;a.mn=0;a.bb=0;a.h1=0;a.q3=0;a.q11=div(.5,Math.asin(1));","frame_eqs_str":"a.wave_a=0;a.zoom=1;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*a.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.h1=div(a.bb-a.mn,a.mx-a.mn);a.h2=div(a.mm-a.mn,a.mx-a.mn);a.h3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.07,a.fps);a.bm+=(a.h1-a.h2)*a.v;a.mt+=(a.h2-a.h3)*a.v;a.bt+=(a.h1-a.h3)*a.v;a.w=2*a.bm;a.q3=Math.sin(a.w);a.q4=Math.cos(a.w);a.q10=a.bm;a.q11=a.mt;a.q12=a.bt;","pixel_eqs_str":"","init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"wave_a = 0;\nzoom = 1;\nbb = bb*0.99 + bass*0.02;\nmm = mm*0.99 + mid*0.02;\ntt = tt*0.99 + treb*0.02;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nh1 = (bb-mn)/(mx-mn);\nh2 = (mm-mn)/(mx-mn);\nh3 = (tt-mn)/(mx-mn);\n\nv = 0.07/fps;\nbm = bm + (h1-h2)*v;\nmt = mt + (h2-h3)*v;\nbt = bt + (h1-h3)*v;\n\nw = bm*2;\nq3 = sin(w);\nq4 = cos(w);\n\n\nq10 = bm;\nq11 = mt;\nq12 = bt;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  vec2 d_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 3.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = ((2.0 * (\n    (texture (sampler_blur1, fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_6;\n  tmpvar_6 = ((2.0 * (\n    (texture (sampler_blur1, fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_7;\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  d_2 = -(tmpvar_4);\n  float tmpvar_8;\n  tmpvar_8 = (d_2 * 1.5).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.y;\n  tmpvar_9.y = tmpvar_6.y;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_5.x;\n  tmpvar_10.y = tmpvar_6.x;\n  vec2 tmpvar_11;\n  tmpvar_11 = ((uv - (\n    (tmpvar_9 * d_2)\n   * 0.5)) - (tmpvar_10 * tmpvar_8));\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\n  ret_3.y = (ret_3.y + ((\n    (ret_3.y - tmpvar_7.y)\n   * 0.042) + -0.008));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_5.x;\n  tmpvar_12.y = tmpvar_6.x;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_5.z;\n  tmpvar_13.y = tmpvar_6.z;\n  my_uv_1 = ((uv - (\n    (tmpvar_12 * d_2)\n   * 0.5)) - (tmpvar_13 * tmpvar_8));\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\n  ret_3.x = (ret_3.x + ((\n    (ret_3.x - tmpvar_7.x)\n   * 0.042) + -0.008));\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_5.z;\n  tmpvar_14.y = tmpvar_6.z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_5.y;\n  tmpvar_15.y = tmpvar_6.y;\n  my_uv_1 = ((uv - (\n    (tmpvar_14 * d_2)\n   * 0.5)) - (tmpvar_15 * tmpvar_8));\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_3.z = (ret_3.z + ((\n    (ret_3.z - tmpvar_7.z)\n   * 0.042) + -0.008));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_3;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 dz_2;\n  vec3 dy_3;\n  vec3 dx_4;\n  vec2 d_5;\n  vec3 ret_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((q4 * tmpvar_7.x) - (q3 * tmpvar_7.y));\n  tmpvar_8.y = ((q3 * tmpvar_7.x) + (q4 * tmpvar_7.y));\n  vec2 tmpvar_9;\n  tmpvar_9 = (0.5 + (tmpvar_8 * 2.0));\n  vec2 numerator_10;\n  numerator_10 = (tmpvar_9 - vec2(0.0, 0.5));\n  vec2 denominator_11;\n  denominator_11 = (tmpvar_9 - vec2(1.0, 0.5));\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((numerator_10.x * denominator_11.x) + (numerator_10.y * denominator_11.y));\n  tmpvar_12.y = ((numerator_10.y * denominator_11.x) - (numerator_10.x * denominator_11.y));\n  vec2 tmpvar_13;\n  tmpvar_13 = (((tmpvar_12 / \n    ((denominator_11.x * denominator_11.x) + (denominator_11.y * denominator_11.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_14;\n  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));\n  float tmpvar_15;\n  float tmpvar_16;\n  tmpvar_16 = (min (abs(\n    (tmpvar_13.x / tmpvar_13.y)\n  ), 1.0) / max (abs(\n    (tmpvar_13.x / tmpvar_13.y)\n  ), 1.0));\n  float tmpvar_17;\n  tmpvar_17 = (tmpvar_16 * tmpvar_16);\n  tmpvar_17 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_17) + 0.05368138) * tmpvar_17) - 0.1173503)\n     * tmpvar_17) + 0.1938925) * tmpvar_17) - 0.3326756)\n   * tmpvar_17) + 0.9999793) * tmpvar_16);\n  tmpvar_17 = (tmpvar_17 + (float(\n    (abs((tmpvar_13.x / tmpvar_13.y)) > 1.0)\n  ) * (\n    (tmpvar_17 * -2.0)\n   + 1.570796)));\n  tmpvar_15 = (tmpvar_17 * sign((tmpvar_13.x / tmpvar_13.y)));\n  if ((abs(tmpvar_13.y) > (1e-08 * abs(tmpvar_13.x)))) {\n    if ((tmpvar_13.y < 0.0)) {\n      if ((tmpvar_13.x >= 0.0)) {\n        tmpvar_15 += 3.141593;\n      } else {\n        tmpvar_15 = (tmpvar_15 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_15 = (sign(tmpvar_13.x) * 1.570796);\n  };\n  vec2 tmpvar_18;\n  tmpvar_18.x = (tmpvar_15 * 0.1591549);\n  tmpvar_18.y = tmpvar_14;\n  vec2 tmpvar_19;\n  tmpvar_19.x = ((tmpvar_18.x * 2.0) + q11);\n  tmpvar_19.y = ((0.2 * log(tmpvar_14)) + q12);\n  uv_1 = (0.5 + ((0.5 - \n    abs(((fract(\n      (tmpvar_19 * 0.5)\n    ) * 2.0) - 1.0))\n  ).yx * 1.06));\n  vec2 tmpvar_20;\n  vec2 tmpvar_21;\n  tmpvar_21 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_20.x = (texture (sampler_main, (uv_1 + tmpvar_21)).xyz - texture (sampler_main, (uv_1 - tmpvar_21)).xyz).y;\n  vec2 tmpvar_22;\n  tmpvar_22 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_20.y = (texture (sampler_main, (uv_1 + tmpvar_22)).xyz - texture (sampler_main, (uv_1 - tmpvar_22)).xyz).y;\n  d_5 = (texsize.zw * 1.2);\n  dx_4 = ((2.0 * (\n    (texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * d_5))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * d_5))).xyz * scale1)\n   + bias1)));\n  dy_3 = ((2.0 * (\n    (texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * d_5))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * d_5))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_23;\n  tmpvar_23.x = dx_4.y;\n  tmpvar_23.y = dy_3.y;\n  dz_2 = ((tmpvar_20 * 3.0) + tmpvar_23);\n  ret_6 = (vec3(((\n    pow ((sqrt(dot (dz_2, dz_2)) * 0.8), 0.7)\n   + \n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).y * 0.4)\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\n  vec2 tmpvar_24;\n  tmpvar_24.x = dx_4.x;\n  tmpvar_24.y = dy_3.x;\n  vec3 tmpvar_25;\n  tmpvar_25 = mix (mix (ret_6, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \n    (uv_1 + ((tmpvar_24 * texsize.zw) * 18.0))\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_1).zzz);\n  ret_6 = tmpvar_25;\n  vec4 tmpvar_26;\n  tmpvar_26.w = 1.0;\n  tmpvar_26.xyz = tmpvar_25;\n  ret = tmpvar_26.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float2 d = texsize.zw*3;\n    float3 dx = 2*GetBlur1(frac(uv+float2(1,0)*d))-2*GetBlur1(frac(uv-float2(1,0)*d));\n    float3 dy = 2*GetBlur1(frac(uv+float2(0,1)*d))-2*GetBlur1(frac(uv-float2(0,1)*d));\n    float3 b1 = GetBlur1(uv) - 0;\n    d *= -1;\n    float d2 = d*1.5;\n    float1 c1 = 0.042;\n    float1 c2 = -0.008;\n\n\n    float2 my_uv = uv - float2(dx.y,dy.y)*d*0.5 - float2(dx.x,dy.x)*d2;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n    ret.y += (ret.y - b1.y)*c1 + c2;\n\n\n    my_uv = uv - float2(dx.x,dy.x)*d*0.5 - float2(dx.z,dy.z)*d2;\n    ret.x = tex2D( sampler_fc_main, my_uv-floor(my_uv)).x;\n    ret.x += (ret.x - b1.x)*c1 + c2;\n\n\n    my_uv = uv - float2(dx.z,dy.z)*d*0.5 - float2(dx.y,dy.y)*d2;\n    ret.z = tex2D( sampler_fc_main, my_uv-floor(my_uv)).z;\n    ret.z += (ret.z - b1.z)*c1 + c2;\n//ret = 0;\n\n}","comp_hlsl":"float2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq*M_INV_PI_2, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center);\n   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);\n}\n\n\nfloat2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){\n   float2 uv_r = (domain-center);\n   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;\n}\n\n\nshader_body\n{\nfloat2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);\nfloat2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.2, float2(q11,q12));\nuv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 )).yx*1.06;\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3;\n\nd = texsize.zw*1.2;\ndx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );\ndy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7) + GetBlur2(uv).y*0.4-0.1;\n\nret = bg*float3(0.3,0.5,0.7);\nret = lerp(ret,float3(0.2,0.1,0),GetPixel(uv + float2(dx.x,dy.x)*texsize.zw*18).x*6);\nret = lerp(ret,1,GetPixel(uv).z);\n\n//ret = GetPixel(uv);\n}"}