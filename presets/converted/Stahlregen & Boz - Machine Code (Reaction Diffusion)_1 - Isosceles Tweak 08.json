{"version":2,"baseVals":{"rating":1,"gammaadj":1.14,"decay":1,"echo_zoom":1.002,"echo_orient":1,"wave_mode":4,"wave_thick":1,"wave_a":1.577,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.24,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":32.544,"warpscale":9.738,"dy":0.008,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0,"ob_size":0.005,"ob_r":0.01,"ob_a":0.6,"ib_size":0.26,"mv_x":16,"mv_y":16.8,"mv_l":0.15,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//decay = 0.94","frame_eqs_eel":"dy = dy -0.01;\n//bass_effect = max(max(bass,bass_effect)-1.4,0);\n//warp = if(above(bass_effect,0),10,0);\nred_rand = int(rand(100));\nblue_rand = int(rand(100));\nwave_r = 0.01*red_rand + 0.2*sin(time*1.311);\nwave_b = 0.01*blue_rand - 0.2*sin(time*1.46);\nwave_g = 1-0.5*(wave_r+wave_b)+ 0.2*cos(time*0.789);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 z_1;\n  vec3 tmpvar_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (0.1 * texsize.zw);\n  tmpvar_2 = (0.25 * ((\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + (tmpvar_3 * vec2(-1.0, 1.0)))).xyz)\n   + texture (sampler_main, \n    (uv + (tmpvar_3 * vec2(1.0, -1.0)))\n  ).xyz) + texture (sampler_main, (uv - tmpvar_3)).xyz));\n  float tmpvar_4;\n  tmpvar_4 = ((tmpvar_2.x * tmpvar_2.y) * tmpvar_2.y);\n  z_1.x = (tmpvar_2.x + ((\n    -(tmpvar_4)\n   + \n    (0.035 * (1.0 - tmpvar_2.x))\n  ) * 4.0));\n  z_1.y = (tmpvar_2.y + ((tmpvar_4 - \n    (0.095 * tmpvar_2.y)\n  ) * 4.0));\n  z_1.z = tmpvar_2.z;\n  z_1.x = (z_1.x + (0.4 * (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n   - texture (sampler_main, uv).xyz)).x);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (z_1 + (0.05 * (\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\n   - 1.0)));\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  float blur_2;\n  float crisp_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - 0.5);\n  uv2_1 = ((tmpvar_5 * 0.8) + 0.5);\n  crisp_3 = texture (sampler_main, uv2_1).y;\n  blur_2 = ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).y;\n  ret_4 = (texture (sampler_main, ((tmpvar_5 * 0.6) + 0.5)).zzz * (1.0 - (blur_2 * 1.15)));\n  vec3 tmpvar_6;\n  tmpvar_6 = max (ret_4, vec3(crisp_3));\n  uv2_1 = uv;\n  crisp_3 = texture (sampler_main, uv).x;\n  blur_2 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1).x;\n  ret_4 = (tmpvar_6 * (1.0 - (blur_2 * 1.15)));\n  vec3 tmpvar_7;\n  tmpvar_7 = max (ret_4, vec3(crisp_3));\n  ret_4 = tmpvar_7;\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = tmpvar_7;\n  ret = tmpvar_8.xyz;\n }"}