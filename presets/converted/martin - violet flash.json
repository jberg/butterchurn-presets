{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"darken":1,"wave_a":0.005428,"wave_scale":3.782626,"wave_smoothing":0.81,"wave_mystery":-1,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.45,"wave_g":0.4,"wave_b":0.5,"ob_size":0.06,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":47.999996,"mv_l":0.15,"mv_r":0.6,"mv_g":0.2,"mv_b":0.6999,"mv_a":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.53,"rad":0.0882,"tex_zoom":0.4928,"g":1,"b":0.7,"a":0.7,"r2":0.4,"g2":0,"b2":0.8,"a2":0.6,"border_b":0.2,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"trig = equal(q28%2,1)*q24;\n\nseed = sqr(time - int(time));\nrr1 = rr1 * (1-trig) + seed*trig;\n\ntextured = bnot(q24);\nang = 3.1416 /4 * q28;\n\nx = .5 + .01*rr1*(q28%3); y = x + .002;\nborder_a = .4;\n\na = .8; a2 = .5;\nrad = 0.14*rr1+.0;//MUSS HIER STEHEN - MIST\ntex_zoom = .7/rad;"},{"baseVals":{"x":0.46,"rad":0.159625,"tex_zoom":0.028461,"g":1,"b":1,"a":0.03,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\ny = rand(10)/10;\n\nr = rand(4)/3;\ng = rand(4)/3;\nb = rand(4)/3;\n\n\nis_beat = above(time, t0+.03);\nt0 = is_beat*time + (1-is_beat)*t0;\n\n\na = min(q21/2 ,.9) * is_beat;\nrad = a*a/3 ;"},{"baseVals":{"enabled":1,"x":0.553,"y":0.6,"rad":0.049138,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);"},{"baseVals":{"textured":1,"x":0.45,"rad":0.202682,"tex_ang":0.628319,"tex_zoom":4.461715,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":102,"sep":10,"scaling":0.891519,"smoothing":0,"g":0.5,"b":0.5,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k0 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = equal(k0%2,0);\nk2 = equal(k0%2,1);\n\n\nix = (100*value1)%7-3;\niy = (100*value2)%7-3;\n\nsp = bass_att + treb_att;\nsp = sp /1000;\n\n\ndx = (dx+sp*ix) * .99;\ndy = (dy+sp*iy) * .99 ;\n\n\nox = k1*dx + (1-k1)*ox;\noy = k2*dy + (1-k2)*oy;\n\n\n\n//ox = 0; oy = 0;\n\nx = ox+.5;\ny = oy+.5;\n\nr = .6;\ng = .8;\nb = .9;\na = .1 + q26/8;\na = max(a,1) / 4;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_eel":"index4 = rand(2);\nindex3 = rand(4);","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb);\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%2;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\nis_beat2 = ready * above (time, t0+.2);\nq19 = is_beat2;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.14159265359/2;\n\nq27 = index+1;\nq28 = index2;\nq29 = index3*4+1;\nq30 = index4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nsp0 = dec_slow*sp0 + (q24+.05)*(1-dec_slow);\ngo = go * dec_med + (1-dec_med)*(1-bnot(index2+index3));\nmovez = movez + .015*30/fps * go ;\nq31 = movez;\nq32 = .5 + .02*sin(time/5);\n\nq5 = index4%2;\n\nzoom = 1.0; rot = 0;\ncx = .5 + .1*sin(time/2);\ndx = .05*max(sin(time/9.7)-.95,0);\ndy = .002*(1-go);\nrot = 50*(dx-dy);\n\nmonitor = q5;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 zz_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - vec2(0.5, 0.5)) * aspect.xy);\n  mat2 tmpvar_4;\n  tmpvar_4[uint(0)] = _qa.xy;\n  tmpvar_4[1u] = _qa.zw;\n  zz_1 = (((tmpvar_3 * texsize.xy) * (0.006 * q28)) * tmpvar_4);\n  zz_1 = ((zz_1.yx * q5) + ((1.0 - q5) * zz_1));\n  uv1_2 = (0.3 * cos((\n    (tmpvar_3 * 16.0)\n   + \n    (time / 8.0)\n  )));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((0.995 * (texture (sampler_main, \n    (uv + (((\n      clamp ((sin(zz_1.yx) / cos(zz_1.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0))\n     * \n      cos(((rand_preset * 8.0).xy * zz_1))\n    ) * texsize.zw) * q29))\n  ).xyz + \n    (((0.004 / sqrt(\n      dot (uv1_2, uv1_2)\n    )) * q19) * vec3(0.5, 0.0, 1.0))\n  )) - 0.005);\n  ret = tmpvar_5.xyz;\n }","comp":"vec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_4.x = ((uv_1.x * 0.5) - (uv_1.y * -0.5));\n  uv2_4.y = ((uv_1.x * -0.5) + (uv_1.y * 0.5));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.25 + q31)));\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\n    ((2.0 * uv2_4) * dist_3)\n   + q32)).xyz * inten_2));\n  uv2_4.x = ((uv_1.x * -0.5) - (uv_1.y * 0.5));\n  uv2_4.y = ((uv_1.x * 0.5) + (uv_1.y * -0.5));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.5 + q31)));\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    ((2.0 * uv2_4) * dist_3)\n   + q32)).xyz * inten_2));\n  uv2_4.x = ((uv_1.x * 0.5) - (uv_1.y * -0.5));\n  uv2_4.y = ((uv_1.x * -0.5) + (uv_1.y * 0.5));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.75 + q31)));\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    ((2.0 * uv2_4) * dist_3)\n   + q32)).xyz * inten_2));\n  uv2_4.x = ((uv_1.x * -0.5) - (uv_1.y * 0.5));\n  uv2_4.y = ((uv_1.x * 0.5) + (uv_1.y * -0.5));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((1.0 + q31)));\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    ((2.0 * uv2_4) * dist_3)\n   + q32)).xyz * inten_2));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (xlat_mutableret1 * 1.6);\n  ret = tmpvar_5.xyz;\n }"}