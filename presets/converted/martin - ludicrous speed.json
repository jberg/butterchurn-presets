{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.3116,"wave_scale":1.22891,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_a":0.5,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.4999,"rad":0.143922,"tex_zoom":4.574821,"g":1,"b":1,"a":0.9,"r2":0.84,"g2":0.93,"b2":1,"border_r":0.8,"border_g":0,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);\nrad = .2*max(sin(time/9)-.6,0);\nx = .5 + .01 * sin(time/2); //slightly off-center\n\nborder_r = .4 * (1.5+sin(time/18));\nborder_g = .4 * (1.5+sin(time/38));\nborder_b = .4 * (1.5+sin(time/28));"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"rad":1.998625,"tex_zoom":0.499805,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\ntrel = time/2+q20;\n\nx = .5+sin(trel);\ny = .5+cos(trel*1.3 +q28/3);\nrad = .03;\na = q26/4+.2;  a2 = 0;\na = 1;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":0.891519,"smoothing":0.82,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1*cos(time/3);\nt2 = 1*sin(time/7);\n\nvol = mid_att + treb_att;\nvol_m = vol_m*0.999+vol*0.001;\nexc = above (vol, vol_m*1.1);\n\npulse = 0.95*pulse + 0.05*exc;\nwinkel = winkel + pulse/3;\nt3 = winkel;\n\n\n","point_eqs_eel":"  //Alle Funktionen muessen rel. zu t_rel sein\n\n\nt_abs = sample;\nt_rel = sample-time/6;\nampl = sin(t_abs*3)-0.0;\n\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel*2.3));\nb = sqr (cos(t_rel*.9));\n\na= 0.2*(cos(t_abs*1 )) + q26/16 ;\n\nxang = t2+t3/3;\nyang = t1*t2-t3/4;\nzang = t3;\nfov = 0.2;\n\nmonitor = t2;\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz =  mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"enabled":1,"samples":232,"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\nt2 = 2*sin(time/11);\nmonitor = time;","point_eqs_eel":"\nt_abs = sample;\nt_rel = sample-time/5;\nampl = time;\n\nox = ampl*10*sin (t_abs*68);\noy = ampl*10*cos (t_abs*28);\noz = ampl*10*cos (t_abs*128);\n\n\nr = sin(t_abs*1335)+1;\ng = sin(t_abs*1783)+1 ;\nb = rand(5)/5 ;\n\na=0.5+0.25 * sin(t_rel*15);\nxang = t1 ;\nyang = t1;\nzang = t1;\nfov = 0.12;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;"},{"baseVals":{"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ampl = time - int(time);\naml = ampl/2;\nx = .5 + ampl * sin(sample*230);\ny = .5 + ampl * cos(sample*230);\na = .03;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index4 = rand(12); p1 = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb);\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%8;\nmonitor = index4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.14159265359/2;\n\nq27 = 8-index;\nq28 = index3;\nq29 = index4;\n\nstop = equal (index,4);\nstop2 = .9 * stop2 + .1 * stop;\naccel = stop - stop2;\n\n//movez = movez + .01*(2+ q21)*30/fps;\nmovez = movez + .01*4*30/fps;\nq30 = movez;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nzoom = 1.0;\nq32 = pow(0.996, 30/fps); //fade","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 zz_2;\n  vec2 arg_3;\n  int tmpvar_4;\n  tmpvar_4 = int(q29);\n  int tmpvar_5;\n  tmpvar_5 = int((float(mod (float(tmpvar_4), 4.0))));\n  vec3 tmpvar_6;\n  tmpvar_6 = (0.03 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy))).xyz;\n  zz_2 = (((\n    ((uv - 0.5) * texsize.xy)\n   * 0.015) * q27) * aspect.zw);\n  mat2 tmpvar_7;\n  tmpvar_7[uint(0)] = _qa.xy;\n  tmpvar_7[1u] = _qa.zw;\n  zz_2 = (zz_2 * tmpvar_7);\n  if ((tmpvar_5 == 0)) {\n    arg_3 = clamp ((sin(zz_2) / cos(zz_2)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\n  } else {\n    if ((tmpvar_5 == 1)) {\n      arg_3 = clamp (((\n        sin(zz_2)\n       / \n        cos(zz_2)\n      ) / cos(zz_2.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\n    } else {\n      if ((tmpvar_5 == 2)) {\n        arg_3 = clamp (exp(zz_2.yx), vec2(-8.0, -8.0), vec2(8.0, 8.0));\n      } else {\n        if ((tmpvar_5 == 3)) {\n          arg_3 = clamp (sin((2.0 * zz_2.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\n        };\n      };\n    };\n  };\n  if ((tmpvar_4 >= 4)) {\n    arg_3 = (arg_3 - (sqrt(\n      dot (zz_2, zz_2)\n    ) / 4.0));\n  };\n  uv_1 = (uv + ((arg_3 * texsize.zw) * (1.0 + \n    (4.0 * q28)\n  )));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((q32 * texture (sampler_main, uv_1).xyz) + (tmpvar_6 * 0.8)) - 0.03);\n  ret = tmpvar_8.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)] = _qa.xy;\n  tmpvar_5[1u] = _qa.zw;\n  uv_1 = (uv_1 * tmpvar_5);\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.25 + q30)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_6;\n  tmpvar_6 = (((2.0 * uv2_4) * dist_3) + 0.5);\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_6).xyz + xlat_mutableblur);\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.5 + q30)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = (((2.0 * uv2_4) * dist_3) + 0.5);\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.75 + q30)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_8;\n  tmpvar_8 = (((2.0 * uv2_4) * dist_3) + 0.5);\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((1.0 + q30)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_9;\n  tmpvar_9 = (((2.0 * uv2_4) * dist_3) + 0.5);\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_9).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (xlat_mutableret1 + (vec3(0.0, 0.0, 0.15) * rad));\n  ret = tmpvar_10.xyz;\n }"}