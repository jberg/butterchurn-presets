{"version":2,"baseVals":{"rating":0,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\ny = 0.5+cos(time*1.618)*0.2;\nrad = bass*0.05;\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\nborder_g = 1-(sin(time)*0.3+0.3);\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\ny = 0.5+cos(time*3.14)*0.3;\nrad = bass*0.05;\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\nborder_g = 1-(sin(time)*0.3+0.3);\nborder_b = 1-(sin(time/3)*0.5+0.5);\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\ny = 0.5+cos(-time*1.14)*0.4;\nrad = bass*0.05;\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\nborder_g = 1-(sin(time)*0.3+0.3);\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//zoom = 0.99;\nib_r = sin(time*1.25*4)*0.3+0.7;\nib_g = sin(time*4)*0.3+0.3;\nib_b = sin(time/3*4)*0.5+0.5;\nwave_r = 1- ib_r;\nwave_g = 1- ib_g;\nwave_b = 1- ib_b;\n//wave_mystery = -1+bass/2;\nwave_x = 0.5+sin(time*3)*0.3;\nwave_y = 0.5+cos(time*2.187)*0.3;\n\nq6 = cos(time*0.77);\nq7 = cos(time*0.57);","pixel_eqs_eel":"r = bass/4;\ncx1 = 0.5+sin(time*0.618)*0.2;\ncy1 = 0.5+cos(time*1.618)*0.2;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = (bass)*(r*r-d*d)*0.3;\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\n\n\ncx1 = 0.5+sin(time*2.618)*0.3;\ncy1 = 0.5+cos(time*3.14)*0.3;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = -(mid)*(r*r-d*d)*0.3;\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\n\ncx1 = 0.5+sin(-time*2.618)*0.4;\ncy1 = 0.5+cos(-time*1.14)*0.4;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = -(treb)*(r*r-d*d)*0.3;\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\n\n\ndx = x1+x2+x3;\ndy = y1+y2+y3;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = bass;\n  tmpvar_1.y = treb;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\n   * \n    (0.005 + (0.045 * clamp ((tmpvar_1 - 1.0), 0.0, 1.0)))\n  ))).xyz - 0.001);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 N_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  N_1.x = (((\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\n   + bias2)).x * 0.7);\n  N_1.y = (((\n    (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\n   + bias2)).x * 0.7);\n  N_1.x = (N_1.x + ((\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n   - \n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ).x * 0.3));\n  N_1.y = (N_1.y + ((\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n   - \n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ).x * 0.3));\n  N_1.z = -0.05;\n  vec3 tmpvar_4;\n  tmpvar_4 = normalize(N_1);\n  N_1 = tmpvar_4;\n  vec3 tmpvar_5;\n  tmpvar_5.z = -0.8;\n  tmpvar_5.x = q6;\n  tmpvar_5.y = q7;\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.xy = ((uv_orig * 2.0) - 1.0);\n  vec3 tmpvar_7;\n  tmpvar_7 = normalize((tmpvar_5 - tmpvar_6));\n  vec3 tmpvar_8;\n  tmpvar_8 = normalize((tmpvar_6 - vec3(0.0, 0.0, 1.0)));\n  ret_2 = (vec3(clamp (dot (tmpvar_4, tmpvar_7), 0.0, 1.0)) * normalize((\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\n   + 0.05)));\n  ret_2 = (ret_2 + (pow (\n    clamp (dot (normalize((tmpvar_8 + \n      ((2.0 * tmpvar_4) * dot (tmpvar_8, tmpvar_4))\n    )), tmpvar_7), 0.0, 1.0)\n  , 16.0) * 0.5));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }"}