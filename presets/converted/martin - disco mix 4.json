{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":20.944651,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":0.47,"rad":0.24057,"tex_zoom":0.14057,"g":0.3,"b":0.5,"g2":0,"b2":0.3,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\nx = .5; y = .5;\na = q24; \na2 = q24;\n//a = 1;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.05134,"tex_zoom":0.12288,"r":0.3,"g":0.2,"b":0.2,"a":0.7,"g2":0,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = .5 + .3 * sin(time);\ng = .5 + .3 * sin(time/1.5);\nb = .5 + .3 * sin(time/3.7);\n\nr2 = 0; b2 = 0; g2 = 0;\n\na = .05; a2 = 0;"},{"baseVals":{"x":0.503,"rad":0.01,"tex_zoom":0.609857,"r":0,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\ndy = .1 * sin(time*14);;\ndx = q1*dy;\n\nx = .5 + dx;\ny = .5 + dy;\n\na = q25; a2 = q25;\nrad = q21/110;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":100,"thick":1,"scaling":0.045052,"smoothing":0.1,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t2 = .45 + rand(10)/100;","point_eqs_eel":"k1 = bnot((sample*100+time)%2);\n\ndy = .015*above(sin(sample*11),0) \n    +.008*above(sin(time+sample*74),0)\n    +.008*above(sin(time+sample*128),0);\n \ndx = .01*above(sin(sample*27),0) + \n      +.01*above(sin(time+sample*134),0);\n\nx = .2*(sample-.5) + .5 + dx;\ny = t2 + dy;\n\na = q24 * k1 * bnot(q27%4);\n\nr = .6; g = 0; b = .6;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"xk = 0;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\ndec_slow = pow (0.95, 30/fps);\ndec_xlow = pow (0.995, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\nq27 = index + 1;\n\npeakx = above(q22,1.5*maxp);\nmaxp = max(maxp, q22);\nmaxp = maxp*dec_xlow;\n\nk1 =  is_beat*equal(index%3,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\ntrig = q24 * bnot(index%4);\ndir = dir + trig * q26*(rand(100)/100-.5)/2 + peakx;\ndir_ = dir_ * dec_slow + dir*(1-dec_slow);\ndir__ = dir__ * dec_slow + dir_*(1-dec_slow);\n\nq5 = cos(dir__); \nq6 = sin(dir__);\n\nspeed = speed * bnot(trig) + trig*q26*5/fps ;\nspeed_= speed_* dec_slow + speed*(1-dec_slow);\n\nmovx = movx + speed_*q6;\nmovy = movy + speed_*q5;\n\n//movx = movx + speed;\n//movy = movy + speed;\n\n\nq7 = movx;\nq8 = movy;\n\ntilt = dir - dir__;\ntilt_ = dec_slow*tilt_ + (1-dec_slow)*tilt;\n\n\nmonitor = maxp;\nq9 = cos(tilt_*speed_);\nq10 = sin(tilt_*speed_);\n\nq12 = time;","pixel_eqs_eel":"zoom = 1.3;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = ((2.0 * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 64.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (((q24 * \n    (((texture (sampler_main, uv_1).xyz - (\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n     * 0.04)) + (0.15 * (vec3(\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\n    ) * roam_cos.xyz))) - 0.02)\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_5.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\n shader_body { \n  vec2 uv1_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = q9;\n  tmpvar_2[uint(0)].y = -(q10);\n  tmpvar_2[1u].x = q10;\n  tmpvar_2[1u].y = q9;\n  uv1_1 = (((uv_orig - 0.5) * aspect.xy) * tmpvar_2);\n  uv1_1 = (uv1_1 * aspect.yx);\n  float tmpvar_3;\n  tmpvar_3 = (3.0 / abs(uv1_1.y));\n  xlat_mutablers.x = (uv1_1.x * tmpvar_3);\n  xlat_mutablers.y = (tmpvar_3 / 2.0);\n  mat2 tmpvar_4;\n  tmpvar_4[uint(0)].x = q5;\n  tmpvar_4[uint(0)].y = -(q6);\n  tmpvar_4[1u].x = q6;\n  tmpvar_4[1u].y = q5;\n  xlat_mutablers = (tmpvar_4 * xlat_mutablers);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q7;\n  tmpvar_5.y = q8;\n  xlat_mutablers = (xlat_mutablers + tmpvar_5);\n  xlat_mutableret1 = ((texture (sampler_blur1, fract(\n    (xlat_mutablers / 12.0)\n  )).xyz * scale1) + bias1);\n  vec2 tmpvar_6;\n  tmpvar_6.y = 0.0;\n  tmpvar_6.x = q5;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((xlat_mutableret1 * 32.0) / tmpvar_3) + ((\n    ((q22 * sqrt(tmpvar_3)) / 4.0)\n   * \n    sin(((uv1_1 - q12) * q27))\n  .x) * texture (sampler_main, (\n    (((4.0 * xlat_mutableret1) / tmpvar_3).xy + ((uv1_1 / 2.0) / (0.5 + abs(uv1_1.y))))\n   + tmpvar_6)).xyz));\n  ret = tmpvar_7.xyz;\n }"}