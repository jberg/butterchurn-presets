{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_orient":3,"wave_mode":5,"wave_a":100,"wave_scale":0.721,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.028,"warpscale":0.905,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\nwave_g = 0.5 + 0.5*sin(4.1*time);\nwave_b = -1 + (1-wave_r + 1-wave_g);\nwarp = 0;\n\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\nrg1 = abs(sin(time));\nrg2 = -1*above(rg1,0.75) -0.66*below(rg1,0.25) - 0.33*above(rg1,0.25)*below(rg1,0.5) - 0*above(rg1,0.5)*below(rg1,0.75);\nrg3 = if(equal(pfthresh,2),rg2,rg3);\n\n\nob_r = 1-abs(wave_r);\nob_b = 1-abs(wave_b);\nob_g = 1-abs(wave_g);\necho_alpha = echo_alpha - rg3;\necho_zoom = echo_zoom + sin(bass_att);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\n\nwx = 0.2*cos(time)*x;\nwy = 0.2*sin(1.2*time)*y;\nrot = rot + dx_r*abs(dy_r*4-treb_att-thresh);\nzoom = zoom + 0.05*sin(4-(4*cos(0.5-rad*cos(tan(14*dx_r*bass_att))*cos(1.12*time)*rad*\n14*rad))*16*dx_r);\nrot = rot + dx_r;\nrot = rot + dy_r;\ndx = dx + 1.1*dx_r;\ndy = dy + 1.1*dy_r;\nrot = rot + above(bass_att,1.25)*1.2*tan(cos(time));\nwarp = warp + above(bass_att,1.3)*12;\nzoom = zoom - above(bass_att,1.2)*1.2*cos(2-abs(rad*2-time))*wx*rad;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 7.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = fract((ret_1 - (\n    (clamp (((vol / vol_att) - 1.1), 0.0, 1.0) * 0.5)\n   + 0.004)));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":""}