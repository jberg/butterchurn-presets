{"version":2,"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.003,"warpscale":0.359,"zoom":1.0002,"dy":-0.004,"warp":0.01,"wave_x":0.2,"wave_y":0.88,"ob_size":0,"ob_a":0.8,"ib_size":0.005,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":63,"x":0.56,"y":0,"rad":0.11039,"ang":3.40549,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = r + 0.3*(0.6*sin(time*1.4) + 0.4*sin(0.98*time));\nb = b + 0.3*(0.6*sin(time*1.134) + 0.4*sin(0.78*time));\ng = g + 0.3*(0.6*sin(time*1.287) + 0.4*sin(0.6*time));\n\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;\n\n//r=0.7;\n//g=0.1;\n//b=0;\n\n//r2=0.7;\n//g2=0.7;\n//b2=0;","init_eqs_eel":"","frame_eqs_eel":"r = r + 0.3*(0.6*sin(time*1.4) + 0.4*sin(0.98*time));\nb = b + 0.3*(0.6*sin(time*1.134) + 0.4*sin(0.78*time));\ng = g + 0.3*(0.6*sin(time*1.287) + 0.4*sin(0.6*time));\n\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;\n\n//r=0.7;\n//g=0.1;\n//b=0;\n\n//r2=0.7;\n//g2=0.7;\n//b2=0;"},{"baseVals":{"enabled":1,"sides":34,"num_inst":3,"y":0,"rad":0.11046,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0},"init_eqs_str":"a.q4=0;","frame_eqs_str":"a.r+=.3*(.6*Math.sin(2.4*a.time)+.4*Math.sin(.34*a.time));a.b+=.3*(.6*Math.sin(1.65*a.time)+.4*Math.sin(.976*a.time));a.g+=.3*(.6*Math.sin(2.05*a.time)+.4*Math.sin(.577*a.time));a.r=a.q4;a.b=1-a.r;a.g=1-a.r;a.r2=a.r;a.b2=a.b;a.g2=a.g;a.x=div(.5+a.instance,a.num_inst);","init_eqs_eel":"","frame_eqs_eel":"r = r + 0.3*(0.6*sin(time*2.4) + 0.4*sin(0.34*time));\nb = b + 0.3*(0.6*sin(time*1.65) + 0.4*sin(0.976*time));\ng = g + 0.3*(0.6*sin(time*2.05) + 0.4*sin(0.577*time));\n\nr = q4;\nb = 1-r;\ng = 1-r;\n\n//r=0;\n//b=0;\n//g=0;\nr2=r;\nb2=b;\ng2=g;\n\nx = ((.5+instance)/num_inst);"},{"baseVals":{"sides":54,"x":0.44,"y":0,"rad":0.11039,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;","init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dx1=0;a.q3=0;a.q1=0;a.bass_thresh=0;a.q2=0;a.vol=0;a.q4=0;","frame_eqs_str":"a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.91*(a.bass_thresh-1.3)+1.3);a.q2=a.bass_thresh;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.q3=a.vol;a.q4=Math.min(.5*a.vol,1);a.dy=-.005;a.warp=.0215+.006*a.mid;a.sx=1.003;","pixel_eqs_str":"a.dx1=.132*Math.cos(a.y*a.q3*30);a.dx=.00001<Math.abs(above(a.y,.8))?.00001<Math.abs(below(a.y,.83))?.00001<Math.abs(above(a.x,.05))?.00001<Math.abs(below(a.x,.93))?a.dx1*(1-a.rad+.1)*1.5:0:0:0:0;a.q1=a.dx;a.sx=1+.0075*a.y*(a.bass-.25*a.treb);","init_eqs_eel":"","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\n\n\n\nq2=bass_thresh;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\nq3=vol;\n\nq4 = min(vol*0.5, 1);\ndy = -0.005;\nwarp= 0.0215+.006*mid;\n\nsx = 1.003;","pixel_eqs_eel":"dx1=(cos(y*q3*30)*1.2)*0.11;\n\ndx=if(above(y,0.8),if(below(y,0.83),if(above(x,0.05),if(below(x,0.93),(dx1*(1-rad+0.1))*1.5,0),0),0),0);\n\nq1=dx;\n\nsx = 1+0.0075*y*(bass-.25*treb);","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = uv.x;\n  vec2 tmpvar_2;\n  tmpvar_2 = fract(uv);\n  tmpvar_1.y = (uv.y - pow (pow (\n    (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1) - 0.05)\n  , \n    (texture (sampler_main, tmpvar_2).xyz - 0.9)\n  ).x, 0.007));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_main, fract(fract(\n    fract(tmpvar_1)\n  ))).xyz + 0.001);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.0);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader, ret_2)));\n  ret_2 = (ret_2 * hue_shader);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\n    float3 rc = pow(GetBlur1(frac(uv))-0.05, GetPixel(frac(uv))-0.9);\n    float2 ruv = frac(frac(float2(uv.x, uv.y-pow(rc.x,0.007))));\n    ret = tex2D(sampler_main, frac(float2(ruv.x, ruv.y))).xyz;\n    ret += 0.001;\n    ret *= 1; \n    \n\n}","comp_hlsl":"shader_body\n{\n\n//based on Geiss' bas relief shader, modified by stahlregen\n\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1;\n    float3 what = lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader,ret));\n    ret *=what;\n    ret *= hue_shader;\n\n    //ret *= 1.5; //old gamma effect    \n}"}