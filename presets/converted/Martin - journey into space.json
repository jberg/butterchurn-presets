{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"modwavealphabyvolume":1,"darken":1,"wave_a":0.002705,"wave_scale":1.291486,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.11,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"rad":0.108525,"tex_ang":1.00531,"tex_zoom":1.531168,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,0);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 - ( 1/(dist+1))/2;\ny = 1-x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q9/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":34,"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,2);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 + ( 1/(dist+1))/1.9;\ny = 1-x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q9/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,1);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 - ( 1/(dist+1))/1.9;\ny = x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q9/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":63,"y":1,"rad":0.548217,"tex_zoom":2.223327,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,3);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 + ( 1/(dist+1))/1.9;\ny = x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q9/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.4);"},{"baseVals":{"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\ny = 1-sample;\na = (q24 * equal(q27%4,0));\n"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%12;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att ;\nq27 = index + 1;\nq28 = index2;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nq10 = 20; //speed shot\nq9 = .8; //brightness shot\n\n\n\n//***********************\ntrig1= q24*bnot(index%4);\ntrig2= q24*bnot((index+4)%16);\ntrig3= q24*bnot((index+8)%16);\n\n\nq5 = cos(time/3.7);\nq6 = .3*sin(time/2);\nq7 = .3*sin(time/1.5);\n\n\n\n//**************\ntrel = trel + (1+q22)/fps;\nz0 = 4;\nq11 = .3*sin(trel*2); \nq12 = .1*cos(trel*1.5); \nq13 = 2+z0 + 6*sin(trel*1.1);\n\nq14 = .3*sin(trel*2.4); \nq15 = .2*cos(trel*1) ; \nq16 = 4+z0 + 3*sin(trel*1.6);\n\nq17 = .3*sin(trel*1); \nq18 = .2*cos(trel*1.2); \nq19 = 3+z0 + sin(trel*.8);","pixel_eqs_eel":"rot = .05 * q1 * (1-rad);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (q31 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv_1 = (uv + ((0.1 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv_1 = (uv_1 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 14.0)\n   + rand_frame.xy)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((texture (sampler_main, \n    (((uv_1 - 0.5) * (0.95 + (\n      (0.1 * q28)\n     * tmpvar_5))) + 0.5)\n  ).xyz + \n    (vec3((0.01 / sqrt(dot (uv6_2, uv6_2)))) * (0.3 * (1.0 + roam_cos)).xyz)\n  ) * 0.99) - 0.025);\n  ret = tmpvar_7.xyz;\n }","comp":"vec2 xlat_mutableKugel1;\nvec2 xlat_mutableKugel2;\nfloat xlat_mutablerad1;\nfloat xlat_mutablerad2;\nfloat xlat_mutablerad3;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablersk;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv4;\n shader_body { \n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q6;\n  tmpvar_2.y = q7;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv + tmpvar_2) - 0.5) * aspect.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q11;\n  tmpvar_4.y = q12;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_4);\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  float tmpvar_5;\n  tmpvar_5 = clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0);\n  xlat_mutableKugel1 = ((xlat_mutableuv4 * tmpvar_5) / (1.0 + q13));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q14;\n  tmpvar_6.y = q15;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_6);\n  vec2 x_7;\n  x_7 = (xlat_mutablersk + 0.1);\n  float tmpvar_8;\n  tmpvar_8 = (1.0 + q16);\n  xlat_mutablerad2 = ((2.0 * tmpvar_8) * sqrt(dot (x_7, x_7)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\n  float tmpvar_9;\n  tmpvar_9 = clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0);\n  xlat_mutableKugel2 = ((xlat_mutableuv4 * tmpvar_9) / tmpvar_8);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q17;\n  tmpvar_10.y = q18;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_10);\n  float tmpvar_11;\n  tmpvar_11 = (1.0 + q19);\n  xlat_mutablerad3 = ((4.0 * tmpvar_11) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\n  float tmpvar_12;\n  tmpvar_12 = clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0);\n  uv1_1 = (tmpvar_3 + ((\n    (xlat_mutableKugel1 + xlat_mutableKugel2)\n   + \n    ((xlat_mutableuv4 * tmpvar_12) / tmpvar_11)\n  ) * 0.5));\n  float tmpvar_13;\n  tmpvar_13 = (1.0/((uv1_1.y + (uv1_1.x * q5))));\n  xlat_mutablers0.x = (uv1_1.x * tmpvar_13);\n  xlat_mutablers0.y = (tmpvar_13 / 4.0);\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (xlat_mutablers0.y + (time * 2.0));\n  float tmpvar_14;\n  tmpvar_14 = clamp ((4.0 / tmpvar_13), 0.0, 1.0);\n  xlat_mutableuv2 = ((0.4 * uv1_1) * (sqrt(\n    dot (uv1_1, uv1_1)\n  ) + 1.0));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  float tmpvar_15;\n  tmpvar_15 = (0.2 * q22);\n  xlat_mutableret1 = ((texture (sampler_main, fract(\n    ((xlat_mutableuv2 + 0.5) - (((vec3(\n      dot (texture (sampler_noise_lq, (xlat_mutablers / 16.0)), vec4(0.32, 0.49, 0.29, 0.0))\n    ) - 0.5) * tmpvar_14) * 0.2).xy)\n  )) * 2.0).xyz + ((\n    ((tmpvar_15 * (float(mod (q27, 3.0)))) / xlat_mutablerad1)\n   + \n    ((tmpvar_15 * (float(mod ((q27 + 1.0), 3.0)))) / xlat_mutablerad2)\n  ) + (\n    (tmpvar_15 * (float(mod ((q27 + 2.0), 3.0))))\n   / xlat_mutablerad3)));\n  xlat_mutableret1 = (xlat_mutableret1 + ((\n    ((0.4 * tmpvar_5) * ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1))\n   + \n    ((0.4 * tmpvar_9) * ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1))\n  ) + (\n    (0.4 * tmpvar_12)\n   * \n    ((texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1) + bias1)\n  )));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = max (xlat_mutableret1, vec3((clamp (\n    (1.0/((float(mod (((uv.x * 2562.0) * (uv.y * 2562.0)), 13333.0)))))\n  , 0.0, 1.0) * (1.0 - \n    (4.0 * tmpvar_14)\n  ))));\n  ret = tmpvar_16.xyz;\n }"}