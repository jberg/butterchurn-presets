{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"modwavealphabyvolume":1,"darken":1,"wave_a":0.002705,"wave_scale":1.291486,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.11,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"rad":0.108525,"tex_ang":1.00531,"tex_zoom":1.531168,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_str":"a.g0=0;a.q9=0;a.cmax=0;a.q24=0;a.q10=0;a.r0=0;a.trig=0;a.q27=0;a.dist=0;a.b0=0;","frame_eqs_str":"a.trig=a.q24*equal(mod(a.q27,4),0);a.dist=bnot(a.trig)*(a.dist+div(a.q10,a.fps));a.x=.5-div(div(1,a.dist+1),2);a.y=1-a.x;a.r0=bnot(a.trig)*a.r0+div(a.trig*rand(100),100);a.g0=bnot(a.trig)*a.g0+div(a.trig*rand(100),100);a.b0=bnot(a.trig)*a.b0+div(a.trig*rand(100),100);a.cmax=Math.max(Math.max(a.r0,a.g0),a.b0);a.r=div(a.r0,a.cmax);a.r2=a.r;a.g=div(a.g0,a.cmax);a.g2=a.g;a.b=div(a.b0,a.cmax);a.b2=a.b;a.rad=div(a.q9,a.dist+1);a.a=div(1,1+div(a.dist,4));a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,0);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 - ( 1/(dist+1))/2;\ny = 1-x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q9/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":34,"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.g0=0;a.q9=0;a.cmax=0;a.q24=0;a.q10=0;a.r0=0;a.trig=0;a.q27=0;a.dist=0;a.b0=0;","frame_eqs_str":"a.trig=a.q24*equal(mod(a.q27,4),2);a.dist=bnot(a.trig)*(a.dist+div(a.q10,a.fps));a.x=.5+div(div(1,a.dist+1),1.9);a.y=1-a.x;a.r0=bnot(a.trig)*a.r0+div(a.trig*rand(100),100);a.g0=bnot(a.trig)*a.g0+div(a.trig*rand(100),100);a.b0=bnot(a.trig)*a.b0+div(a.trig*rand(100),100);a.cmax=Math.max(Math.max(a.r0,a.g0),a.b0);a.r=div(a.r0,a.cmax);a.r2=a.r;a.g=div(a.g0,a.cmax);a.g2=a.g;a.b=div(a.b0,a.cmax);a.b2=a.b;a.rad=div(a.q9,a.dist+1);a.a=div(1,1+div(a.dist,4));a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,2);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 + ( 1/(dist+1))/1.9;\ny = 1-x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q9/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.g0=0;a.q9=0;a.cmax=0;a.q24=0;a.q10=0;a.r0=0;a.trig=0;a.q27=0;a.dist=0;a.b0=0;","frame_eqs_str":"a.trig=a.q24*equal(mod(a.q27,4),1);a.dist=bnot(a.trig)*(a.dist+div(a.q10,a.fps));a.x=.5-div(div(1,a.dist+1),1.9);a.y=a.x;a.r0=bnot(a.trig)*a.r0+div(a.trig*rand(100),100);a.g0=bnot(a.trig)*a.g0+div(a.trig*rand(100),100);a.b0=bnot(a.trig)*a.b0+div(a.trig*rand(100),100);a.cmax=Math.max(Math.max(a.r0,a.g0),a.b0);a.r=div(a.r0,a.cmax);a.r2=a.r;a.g=div(a.g0,a.cmax);a.g2=a.g;a.b=div(a.b0,a.cmax);a.b2=a.b;a.rad=div(a.q9,a.dist+1);a.a=div(1,1+div(a.dist,4));a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,1);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 - ( 1/(dist+1))/1.9;\ny = x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q9/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":63,"y":1,"rad":0.548217,"tex_zoom":2.223327,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.g0=0;a.q9=0;a.cmax=0;a.q24=0;a.q10=0;a.r0=0;a.trig=0;a.q27=0;a.dist=0;a.b0=0;","frame_eqs_str":"a.trig=a.q24*equal(mod(a.q27,4),3);a.dist=bnot(a.trig)*(a.dist+div(a.q10,a.fps));a.x=.5+div(div(1,a.dist+1),1.9);a.y=a.x;a.r0=bnot(a.trig)*a.r0+div(a.trig*rand(100),100);a.g0=bnot(a.trig)*a.g0+div(a.trig*rand(100),100);a.b0=bnot(a.trig)*a.b0+div(a.trig*rand(100),100);a.cmax=Math.max(Math.max(a.r0,a.g0),a.b0);a.r=div(a.r0,a.cmax);a.r2=a.r;a.g=div(a.g0,a.cmax);a.g2=a.g;a.b=div(a.b0,a.cmax);a.b2=a.b;a.rad=div(a.q9,a.dist+1);a.a=div(1,1+div(a.dist,4));a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,3);\n\ndist = bnot(trig)*(dist+q10/fps);\n\nx = .5 + ( 1/(dist+1))/1.9;\ny = x;\n\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\n\ncmax = max(max(r0,g0),b0);\n\nr = r0/cmax; r2 = r;\ng = g0/cmax; g2 = g;\nb = b0/cmax; b2 = b;\n\nrad = q9/(dist+1);\n//rad = .2;\na = 1 / (1+dist/4) ; a2 = 0;"}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.4);","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.4);"},{"baseVals":{"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = sample;\ny = 1-sample;\na = (q24 * equal(q27%4,0));\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\ny = 1-sample;\na = (q24 * equal(q27%4,0));\n"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.trig2=0;a.index2=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.trel=0;a.q9=0;a.rott=0;a.is_beat=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.z0=0;a.q10=0;a.q4=0;a.q16=0;a.q26=0;a.p2=0;a.avg=0;a.q19=0;a.beat=0;a.q17=0;a.p1=0;a.peak=0;a.trig1=0;a.q2=0;a.q27=0;a.q14=0;a.trig3=0;a.q3=0;a.t0=0;a.q7=0;a.q28=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.5,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),12);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+\na.treb_att;a.q27=a.index+1;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q10=20;a.q9=.8;a.trig1=a.q24*bnot(mod(a.index,4));a.trig2=a.q24*bnot(mod(a.index+4,16));a.trig3=a.q24*bnot(mod(a.index+8,16));a.q5=Math.cos(div(a.time,3.7));a.q6=.3*Math.sin(div(a.time,2));a.q7=.3*Math.sin(div(a.time,1.5));a.trel+=div(1+a.q22,a.fps);a.z0=\n4;a.q11=.3*Math.sin(2*a.trel);a.q12=.1*Math.cos(1.5*a.trel);a.q13=2+a.z0+6*Math.sin(1.1*a.trel);a.q14=.3*Math.sin(2.4*a.trel);a.q15=.2*Math.cos(1*a.trel);a.q16=4+a.z0+3*Math.sin(1.6*a.trel);a.q17=.3*Math.sin(1*a.trel);a.q18=.2*Math.cos(1.2*a.trel);a.q19=3+a.z0+Math.sin(.8*a.trel);","pixel_eqs_str":"a.rot=.05*a.q1*(1-a.rad);","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%12;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att ;\nq27 = index + 1;\nq28 = index2;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nq10 = 20; //speed shot\nq9 = .8; //brightness shot\n\n\n\n//***********************\ntrig1= q24*bnot(index%4);\ntrig2= q24*bnot((index+4)%16);\ntrig3= q24*bnot((index+8)%16);\n\n\nq5 = cos(time/3.7);\nq6 = .3*sin(time/2);\nq7 = .3*sin(time/1.5);\n\n\n\n//**************\ntrel = trel + (1+q22)/fps;\nz0 = 4;\nq11 = .3*sin(trel*2); \nq12 = .1*cos(trel*1.5); \nq13 = 2+z0 + 6*sin(trel*1.1);\n\nq14 = .3*sin(trel*2.4); \nq15 = .2*cos(trel*1) ; \nq16 = 4+z0 + 3*sin(trel*1.6);\n\nq17 = .3*sin(trel*1); \nq18 = .2*cos(trel*1.2); \nq19 = 3+z0 + sin(trel*.8);","pixel_eqs_eel":"rot = .05 * q1 * (1-rad);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (q31 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv_1 = (uv + ((0.1 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv_1 = (uv_1 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 14.0)\n   + rand_frame.xy)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((texture (sampler_main, \n    (((uv_1 - 0.5) * (0.95 + (\n      (0.1 * q28)\n     * tmpvar_5))) + 0.5)\n  ).xyz + \n    (vec3((0.01 / sqrt(dot (uv6_2, uv6_2)))) * (0.3 * (1.0 + roam_cos)).xyz)\n  ) * 0.99) - 0.025);\n  ret = tmpvar_7.xyz;\n }","comp":"vec2 xlat_mutableKugel1;\nvec2 xlat_mutableKugel2;\nfloat xlat_mutablerad1;\nfloat xlat_mutablerad2;\nfloat xlat_mutablerad3;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablersk;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv4;\n shader_body { \n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q6;\n  tmpvar_2.y = q7;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv + tmpvar_2) - 0.5) * aspect.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q11;\n  tmpvar_4.y = q12;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_4);\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  float tmpvar_5;\n  tmpvar_5 = clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0);\n  xlat_mutableKugel1 = ((xlat_mutableuv4 * tmpvar_5) / (1.0 + q13));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q14;\n  tmpvar_6.y = q15;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_6);\n  vec2 x_7;\n  x_7 = (xlat_mutablersk + 0.1);\n  float tmpvar_8;\n  tmpvar_8 = (1.0 + q16);\n  xlat_mutablerad2 = ((2.0 * tmpvar_8) * sqrt(dot (x_7, x_7)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\n  float tmpvar_9;\n  tmpvar_9 = clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0);\n  xlat_mutableKugel2 = ((xlat_mutableuv4 * tmpvar_9) / tmpvar_8);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q17;\n  tmpvar_10.y = q18;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_10);\n  float tmpvar_11;\n  tmpvar_11 = (1.0 + q19);\n  xlat_mutablerad3 = ((4.0 * tmpvar_11) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\n  float tmpvar_12;\n  tmpvar_12 = clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0);\n  uv1_1 = (tmpvar_3 + ((\n    (xlat_mutableKugel1 + xlat_mutableKugel2)\n   + \n    ((xlat_mutableuv4 * tmpvar_12) / tmpvar_11)\n  ) * 0.5));\n  float tmpvar_13;\n  tmpvar_13 = (1.0/((uv1_1.y + (uv1_1.x * q5))));\n  xlat_mutablers0.x = (uv1_1.x * tmpvar_13);\n  xlat_mutablers0.y = (tmpvar_13 / 4.0);\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (xlat_mutablers0.y + (time * 2.0));\n  float tmpvar_14;\n  tmpvar_14 = clamp ((4.0 / tmpvar_13), 0.0, 1.0);\n  xlat_mutableuv2 = ((0.4 * uv1_1) * (sqrt(\n    dot (uv1_1, uv1_1)\n  ) + 1.0));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  float tmpvar_15;\n  tmpvar_15 = (0.2 * q22);\n  xlat_mutableret1 = ((texture (sampler_main, fract(\n    ((xlat_mutableuv2 + 0.5) - (((vec3(\n      dot (texture (sampler_noise_lq, (xlat_mutablers / 16.0)), vec4(0.32, 0.49, 0.29, 0.0))\n    ) - 0.5) * tmpvar_14) * 0.2).xy)\n  )) * 2.0).xyz + ((\n    ((tmpvar_15 * (float(mod (q27, 3.0)))) / xlat_mutablerad1)\n   + \n    ((tmpvar_15 * (float(mod ((q27 + 1.0), 3.0)))) / xlat_mutablerad2)\n  ) + (\n    (tmpvar_15 * (float(mod ((q27 + 2.0), 3.0))))\n   / xlat_mutablerad3)));\n  xlat_mutableret1 = (xlat_mutableret1 + ((\n    ((0.4 * tmpvar_5) * ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1))\n   + \n    ((0.4 * tmpvar_9) * ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1))\n  ) + (\n    (0.4 * tmpvar_12)\n   * \n    ((texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1) + bias1)\n  )));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = max (xlat_mutableret1, vec3((clamp (\n    (1.0/((float(mod (((uv.x * 2562.0) * (uv.y * 2562.0)), 13333.0)))))\n  , 0.0, 1.0) * (1.0 - \n    (4.0 * tmpvar_14)\n  ))));\n  ret = tmpvar_16.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = q31*length((abs(uv1.x)-abs(uv1.y)));\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv += .1*lum(GetBlur1(uv))*d;\nuv -= rs/(20+0*q27);\n\nuv6 = .4*sin(uv*14+rand_frame);\nmus = .01/(length(uv6));\nmus *= .3*(1+roam_cos);\n//mus = .2;\n\nfloat3 crisp= tex2D(sampler_main,(uv-.5)*(.95+.1*q28*z)+.5);\n\nfloat3 ret1 = crisp + mus;\n\nq25 = 1;\nret = q25*(ret1*.99-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat rad1, rad2, rad3, mask1, mask2, mask3;\nfloat2 rs, rs0, uv2, uv3,uv4, rsk, Kugel1, Kugel2, Kugel3,dz1;\nfloat3 noise, ret1, ret2;\n\nshader_body {\nfloat2 uv6 = uv;\nuv = uv + float2 (q6,q7);\nfloat2 uv1 = (uv-.5 )*aspect.xy;\n\n//Kugel1\nrsk = (uv1 + float2 (q11,q12)) ;\ndz1 = normalize(rsk);\nrad1 = 8*(q13)*length (rsk) ;\nuv4 =  tan(rad1)*dz1;\nmask1 = saturate(10-7*rad1);\nKugel1 = uv4*mask1/(1+q13);\n\n//Kugel2\nrsk = (uv1 + float2 (q14,q15)) ;\ndz1 = normalize(rsk);\nrad2 = 2*(1+q16)*length (rsk+.1) ;\nuv4 =  tan(rad2)*dz1;\nmask2 = saturate(10-7*rad2);\nKugel2 = uv4*mask2/(1+q16);\n\n//Kugel3\nrsk = (uv1 + float2 (q17,q18)) ;\ndz1 = normalize(rsk);\nrad3 = 4*(1+q19)*length (rsk) ;\nuv4 =  tan(rad3)*dz1;\nmask3 = saturate(10-7*rad3);\nKugel3 = uv4*mask3/(1+q19);\n\nuv1 += (Kugel1 + Kugel2 + Kugel3)*.5;\nfloat z = 1/(uv1.y+uv1.x*q5);\nrs0.x = (uv1.x)*z;\nrs0.y = z/4;\nrs.x = rs0.x ;\nrs.y = rs0.y + time*2;\n\n//uv1 = mul(uv1,float2x2(_qa));\nnoise = lum(tex2D(sampler_noise_lq,rs/16));\n\nfloat mask = saturate(4/z);\nuv2 = .4*uv1 * (length(uv1)+1);\nuv2 *= aspect.yx;\nuv3 =frac(uv2+.5-(noise-.5)*mask*.2);\n\nfloat xx = uv6.x*2562;\nfloat yy = uv6.y*2562;\nfloat ran = (xx*yy)% 13333 ;\nfloat3 stars = saturate(1/ran) * (1-4*mask); \n\n\nret1 =  tex2D (sampler_main, uv3)*2;\nret1 += .2*q22*(q27%3)/rad1+\n        .2*q22*((q27+1)%3)/rad2+\n        .2*q22*((q27+2)%3)/rad3;\nret1 += .4*mask1*GetBlur1(0) + .4*mask2*GetBlur1(0.1) + .4*mask3*GetBlur1(0.2);\nret = max(ret1,stars);    \n}"}