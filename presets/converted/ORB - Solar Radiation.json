{"version":1,"baseVals":{"rating":5,"decay":0.95,"echo_zoom":1.071,"echo_alpha":0.5,"echo_orient":3,"darken":1,"wave_a":0.001,"warpanimspeed":100,"warpscale":0.01,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.3696,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0.5},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = -q1*0.2;\n\ntex_capture = above(q3,1);\ntex_zoom = 1.2;"},{"baseVals":{"textured":1,"x":0.25,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"rad":1.81639,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\ntex_capture = 1;//above(q3,1);\ntex_zoom = 0.6;"},{"baseVals":{"sides":100,"rad":1.08922,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*sin(q1*1.5);\ny = 0.5 + 0.5*sin(q1*1.7);"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.6;\nv = sample*1000000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v)*speed*atan(v*1.51);\nys = ys + sin(v)*speed*atan((v));\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x*0.6 + 0.3;\ny = y;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.22 + x*2) + 0.1;\ng = 0.4 + 0.4*sin(time*1.307 + y*2);\nb = 0.4 + 0.4*sin(time*1.959 + x*y);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.6;\nv = sample*1000000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v)*speed*atan(v*1.51);\nys = ys + sin(v)*speed*atan((v));\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x*0.6 + 0.3;\nx = -x + 1;\ny = y;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.22 + x*x) + 0.1;\ng = 0.4 + 0.4*sin(time*1.107 + y*2);\nb = 0.4 + 0.4*sin(time*1.959 + x*y);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x*0.6;\ny = y*0.9 + 0.05 + bass*0.08;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\ng = 0.4 + 0.4*sin(time*1.478);\nb = 0.4 + 0.4*sin(time*1.125);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = -x*0.6 + 1;\ny = y*0.9 + 0.05 + bass*0.08;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\ng = 0.4 + 0.4*sin(time*1.478);\nb = 0.4 + 0.4*sin(time*1.125);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"//warp = bass*3;\ndecay_r = 0.65 + 0.2*(abs(cos(difftime*1.56+rarr)));\ndecay_g = 0.5 + 0.2*(abs(cos(difftime*1.36+rarr)));\ndecay_b = 0.5 + 0.2*(abs(cos(difftime*1.2+rarr)));\n//dy = 0.98;\n\nbasstime = basstime + bass*0.03;\nbasstime2 = basstime + bass*0.03;\nq1 = basstime2;\n\n//start in most active range\nbasstime = if(below(basstime,1000),1000,basstime);\n//basstime = if(above(basstime,495),450,basstime);\n\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;","pixel_eqs_eel":"saw_r = saw_r + 0.0001*bass;\nsaw_r =  if(above(saw_r,1),0,saw_r);\n\nsaw_g = saw_g + 0.00012*bass;\nsaw_g =  if(above(saw_g,1),0,saw_g);\n\nsaw_b = saw_b + 0.00011*bass;\nsaw_b =  if(above(saw_b,1),0,saw_b);\n\n\ndecay_r = 2 - y*saw_r;\ndecay_g = 2 - y*saw_g;\ndecay_b = 2 - y*saw_b;\n\n\nrot =0;\nzoom = 1.02;","warp":"","comp":""}