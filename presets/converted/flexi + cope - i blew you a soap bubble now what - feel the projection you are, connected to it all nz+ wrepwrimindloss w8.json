{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":2,"wrap":0,"wave_scale":0.01,"warpscale":5.921,"zoom":1.0003,"warp":0.59124,"sy":0.99998,"ob_size":0,"ob_r":1,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0,"mv_a":0,"b1x":0.5},"shapes":[{"baseVals":{"enabled":1,"sides":50,"num_inst":200,"rad":0.01,"tex_ang":0.87965,"tex_zoom":0.1995,"r":0,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.x1=0;a.q6=0;a.ss=0;a.it=0;a.zoom=0;a.p=0;a.q1=0;a.q5=0;a.z3=0;a.w3=0;a.my_x=0;a.oz=0;a.x3=0;a.my_y=0;a.oy=0;a.w1=0;a.sz=0;a.x2=0;a.l=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.sample=0;a.ox=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.rad=div((16+14*Math.sin(.1*a.time))*a.rad,.3+Math.abs(a.z3)*a.d);a.it+=1;a.sz=1;a.ss=6*a.sample;a.ox=.5*a.sz*pow(-1,a.it)*below(a.ss,1)+.5*pow(-1,a.it)*above(a.ss,1)*a.sz*below(a.ss,2)+.5*above(a.ss,2)*pow(-1,a.it)*a.sz*below(a.ss,3);a.oy=(a.ss-.5)*a.sz*below(a.ss,1)+.5*a.sz*above(a.ss,1)*below(a.ss,2)+(.5-(a.ss-2))*a.sz*above(a.ss,2)*below(a.ss,3);a.oz=.5*-a.sz*below(a.ss,1)+(a.ss-1-.5)*a.sz*above(a.ss,1)*below(a.ss,2)+.5*a.sz*above(a.ss,\n2)*below(a.ss,3);a.ox=a.ox+above(a.ss,3)*below(a.ss,4)*-.5*a.sz+above(a.ss,4)*below(a.ss,5)*a.sz*(-.5+(a.ss-4))+above(a.ss,5)*a.sz*.5;a.oy=a.oy+above(a.ss,3)*below(a.ss,4)*.5*a.sz*pow(-1,a.it)+above(a.ss,4)*below(a.ss,5)*a.sz*-.5+above(a.ss,5)*a.sz*(-.5+(a.ss-5));a.oz=a.oz+above(a.ss,3)*below(a.ss,4)*a.sz*(.5-(a.ss-3))+above(a.ss,4)*below(a.ss,5)*a.sz*.5*pow(-1,a.it)+above(a.ss,5)*a.sz*.5*pow(-1,a.it);a.my_x=a.ox+.1*Math.sin(a.q2);a.my_y=a.oy+.1*Math.sin(a.q3);a.my_z=a.oz+.1*Math.sin(a.q1);a.d=3;\na.zoom=.9;a.w3=a.q3;a.w2=a.q1;a.w1=a.q2;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+\na.z3,a.l));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+div(a.my_x,a.q6);a.y=.5+div(a.my_y,a.q5);a.r=.5+.5*Math.sin(22*a.sample+a.q2);a.g=.5+.5*Math.sin(26*a.sample+a.q1);a.b=.5+.5*Math.sin(14*a.sample+a.q3);a.r2=.1*a.r;a.g2=.1*a.g;a.b2=.1*a.b;","init_eqs_eel":"","frame_eqs_eel":"\nsample=instance/num_inst;\n\nrad= (16+14*sin(.1*time))*rad/(.3+abs(z3)*d);\n\n/////shifter's cube\n\nit = it+1;\nsz = 1;\nss = sample*6;\nox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);\noy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);\noz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);\nox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;\noy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));\noz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);\n\nmy_x =ox+.1*sin(q2);\nmy_y =oy+.1*sin(q3);\nmy_z =oz+.1*sin(q1);\n\n\n/////// rotations\n\nd = 3;\nzoom = .9;\n\nw3 = q3;\nw2 = q1;\nw1 = q2;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\np = tan(asin(1) + atan2(d+z3,l));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x/q6;\ny = 0.5 + my_y/q5;\n\nr=.5+.5*sin(22*sample+q2);\ng=.5+.5*sin(26*sample+q1);\nb=.5+.5*sin(14*sample+q3);\n\nr2=.1*r;\ng2=.1*g;\nb2=.1*b;"},{"baseVals":{"enabled":1,"textured":1,"num_inst":30,"x":0.1,"y":0.12,"rad":0.29767,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.05},"init_eqs_str":"a.sample=0;a.q1=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.y+=3*a.y*a.sample*a.sample;a.tex_zoom=1.5+Math.sin(144*a.sample+a.time);a.tex_ang=5*a.q1*Math.sin(388*a.sample);a.r=.5+.5*Math.sin(a.sample+a.time);a.r2=a.r;a.g=.5+.5*Math.sin(2*a.sample+1.2*a.time);a.g2=a.g;a.b=.5+.5*Math.sin(3*a.sample+1.3*a.time);a.b2=a.b;","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\n\ny=y+3*y*sample*sample;\n\ntex_zoom=1.5+1.*sin(144*sample+time);\ntex_ang=5*q1*sin(388*sample);\nr=.5+.5*sin(sample+time);\nr2=r;\ng=.5+.5*sin(2*sample+1.2*time);\ng2=g;\nb=.5+.5*sin(3*sample+1.3*time);\nb2=b;"},{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.02705,"ang":1.5708,"tex_ang":1.25664,"tex_zoom":3.07268,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.ampl=div(2*a.t_abs,2);a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);a.yang=div(0*a.time,7);a.zang=div(-a.time,\n22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.a=.5*div(1,a.mz);a.rad=.005*div(1,a.mz);","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\na=1/mz*.5;\n//a2=1/mz*.5;\n//border_a=1/mz*.5;\nrad=1/mz*.005;"},{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.1979,"ang":1.5708,"tex_ang":1.25664,"tex_zoom":3.07268,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.ampl=div(2*a.t_abs,2);a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);a.yang=div(0*a.time,7);a.zang=div(-a.time,\n22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.sides=Math.floor(rand(100));a.ang=div(Math.floor(rand(628)),100);a.a=\ndiv(Math.floor(rand(1E3)),1E3);a.rad=div(Math.floor(rand(1E3)),4E3);","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nsides=int(rand(100));\nang=int(rand(628))/100;\na=int(rand(1000))/1000;\nrad=int(rand(1000))/4000;"}],"waves":[{"baseVals":{"usedots":1,"r":0.5,"g":0.5,"a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"scaling":0.20929,"smoothing":0,"r":0.3,"g":0.2,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"r":0.8,"g":0.8,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"smoothing":0.4,"g":0.6,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.d=0;a.n=0;a.mq1=0;a.z=0;a.n2=0;a.tb=0;a.tg=0;a.q25=0;a.q12=0;a.w2=0;a.q22=0;a.q21=0;a.wzoom=0;a.q13=0;a.tr=0;a.q29=0;a.q6=0;a.j3=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.n1=0;a.mq24=0;a.bass_thresh=0;a.v=0;a.chng=0;a.mq28=0;a.w3=0;a.count=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.pi=0;a.q10=0;a.atime=0;a.ry=0;a.pi2inv=0;a.q4=0;a.rx=0;a.j2=0;a.q26=0;a.w1=0;a.tx=0;a.zz=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.j1=0;a.q2=0;a.q27=0;a.maskangle=0;a.q3=0;a.q32=\n0;a.q7=0;a.q28=0;a.ty=0;a.q30=0;a.rb=0;a.q20=0;a.mtime=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q4=Math.sin(.03*\na.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.wzoom=.18*Math.sin(a.time);a.q3=a.wzoom;a.q1=.8-.3*Math.sin(1.3*-a.time);a.q2=.8-.3*Math.cos(-a.time);a.monitor=a.fps;a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.q20=a.vol;a.mtime+=.05*a.vol;a.rx=.3+.05*Math.sin(.3*a.mtime);a.ry=.5+.05*Math.sin(.4*a.mtime);a.q4=a.rx;a.q5=a.ry;a.tx=.5+.4*Math.sin(.18*a.mtime);a.ty=.5+1.3*Math.sin(.14*a.mtime);a.q6=a.tx;a.q7=a.ty;a.tr=.5+.4*(.6*Math.sin(.64*a.mtime)+.4*\nMath.sin(.32*a.mtime));a.tb=.5+.4*(.6*Math.sin(.24*-a.mtime)+.4*Math.sin(.72*a.mtime));a.tg=.5+.4*(.6*Math.sin(.42*a.mtime)+.4*Math.cos(.5*a.mtime));a.q11=a.tr;a.q12=a.tg;a.q13=a.rb;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.count=1*equal(a.bass_thresh,2)+(1-equal(a.bass_thresh,2))*a.count;a.count-=.02*above(a.count,.02);a.q10=a.count;a.d=20;a.z=.4;a.zz=10+2*a.bass_att;a.pi=2*Math.asin(1);a.pi2inv=div(.5,a.pi);a.maskangle=Math.asin(div(1,\na.d));a.q32=a.maskangle;a.q31=a.d;a.q30=a.z;a.q29=a.pi2inv;a.q28=a.pi;a.q27=div(1,a.zz);a.q26=a.time;a.v=.4;a.j1=.95*a.j1+sqr(4*a.bass)*a.v;a.j2=.95*a.j2+sqr(4*a.mid)*a.v;a.j3=.95*a.j3+sqr(4*a.treb)*a.v;a.n+=.0052*a.j1;a.n1+=.0052*a.j2;a.n2+=.0052*a.j3;a.w1=.01*a.n;a.w2=.01*a.n1;a.w3=.01*a.n2;a.q20=Math.cos(a.w1);a.q21=Math.sin(a.w1);a.q22=Math.cos(a.w2);a.q23=Math.sin(a.w2);a.q24=Math.cos(a.w3);a.q25=Math.sin(a.w3);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\n\nwzoom = 0.18*sin(time);\nq3=wzoom;\nq1 = 0.8 - 0.3*sin(-time*1.3);\nq2 = 0.8 - 0.3*cos(-time);\nmonitor=fps;\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\nq20 = vol;\n\nmtime = mtime+vol*0.05;\nrx = 0.3+0.05*sin(mtime*0.3);\nry = 0.5+0.05*sin(mtime*0.4);\nq4=rx;\nq5=ry;\ntx = 0.5+0.4*sin(mtime*0.18);\nty = 0.5+1.3*sin(mtime*0.14);\nq6=tx;\nq7=ty;\n\ntr = 0.5 + 0.4*(0.6*sin(mtime*0.64) + 0.4*sin(mtime*0.32));\ntb = 0.5 + 0.4*(0.6*sin(-mtime*0.24) + 0.4*sin(mtime*0.72));\ntg = 0.5 + 0.4*(0.6*sin(mtime*0.42) + 0.4*cos(mtime*0.50));\nq11=tr;\nq12=tg;\nq13=rb;\n\n\n\nbass_thresh = above(bass_att,bass_thresh)*2 +\n    (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ncount = equal(bass_thresh, 2)*1 + (1-equal(bass_thresh, 2))*count;\ncount = count - above(count, 0.02)*0.02;\nq10=count;\n\n// raytraced sphere code\n\nd = 20; // distance of the sphere, the farther you're away the more you'll see on the horizon\nz = 0.4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view\n\nzz = 10 + bass_att*2; // linear zoom\n\npi = asin(1)*2;\npi2inv = 0.5/pi;\nmaskangle = asin( 1/d);\nq32 = maskangle; // hit = (cameras angle < mask_angle)\nq31 = d;\nq30 = z;\nq29 = pi2inv;\nq28 = pi;\nq27 = 1/zz;\nq26 = time;\nv = 0.4;\nj1 = j1*0.95 + sqr(bass*4)*v;\nj2 = j2*0.95 + sqr(mid*4)*v;\nj3 = j3*0.95 + sqr(treb*4)*v;\n\nn = n + j1*0.0052;\nn1 = n1 + j2*0.0052;\nn2 = n2 + j3*0.0052;\n\n\nw1 = n*0.01;    // solid angles to rotate the sphere in its origin\nw2 = n1*0.01;\nw3 = n2*0.01;\n\nq20 = cos(w1);\nq21 = sin(w1);\nq22 = cos(w2);\nq23 = sin(w2);\nq24 = cos(w3);\nq25 = sin(w3);","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  xlat_mutableuv1 = (uv - 0.5);\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, ((xlat_mutableuv1 / 3.0) + (0.006 * time)));\n  vec2 tmpvar_2;\n  tmpvar_2 = tmpvar_1.xy;\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = tmpvar_2.y;\n  tmpvar_3[uint(0)].y = tmpvar_2.x;\n  tmpvar_3[1u].x = -(tmpvar_1.x);\n  tmpvar_3[1u].y = tmpvar_2.y;\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_3);\n  xlat_mutablemus = (vec3(abs((\n    (0.5 * cos((xlat_mutableuv6.y * 14.0)))\n   - \n    cos((xlat_mutableuv6.x * 71.0))\n  ))) * vec3(0.04, 0.0384, 0.036));\n  xlat_mutableuv6 = (0.2 * sin((\n    (12.0 * uv)\n   + rand_frame.xy)));\n  xlat_mutablemus = (xlat_mutablemus - ((0.001 / \n    sqrt(dot (xlat_mutableuv6, xlat_mutableuv6))\n  ) * vec3(0.2, 1.0, 1.0)));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))).xyz - texture (sampler_main, (uv - vec2(0.004, 0.0))).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))).xyz - texture (sampler_main, (uv - vec2(0.0, 0.004))).xyz), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    ((texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.015 - (\n      (sqrt(dot (tmpvar_5, tmpvar_5)) * tmpvar_4)\n     / 1.5))) - (dot (tmpvar_4, vec3(0.32, 0.49, 0.29)) * 0.012))\n   + xlat_mutablemus) * 0.99) - 0.04);\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  float dots_1;\n  float dy_2;\n  float dx_3;\n  vec2 uv1_4;\n  vec2 polar2_5;\n  vec3 p_6;\n  vec2 polar_7;\n  vec2 c_8;\n  vec3 ret_9;\n  vec2 tmpvar_10;\n  tmpvar_10 = ((q27 * (uv - 0.5)) * aspect.xy);\n  c_8 = tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));\n  float tmpvar_12;\n  float tmpvar_13;\n  tmpvar_13 = (min (abs(\n    (tmpvar_11 / q30)\n  ), 1.0) / max (abs(\n    (tmpvar_11 / q30)\n  ), 1.0));\n  float tmpvar_14;\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\n  tmpvar_14 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\n  tmpvar_14 = (tmpvar_14 + (float(\n    (abs((tmpvar_11 / q30)) > 1.0)\n  ) * (\n    (tmpvar_14 * -2.0)\n   + 1.570796)));\n  tmpvar_12 = (tmpvar_14 * sign((tmpvar_11 / q30)));\n  if ((abs(q30) > (1e-08 * abs(tmpvar_11)))) {\n    if ((q30 < 0.0)) {\n      if ((tmpvar_11 >= 0.0)) {\n        tmpvar_12 += 3.141593;\n      } else {\n        tmpvar_12 = (tmpvar_12 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_12 = (sign(tmpvar_11) * 1.570796);\n  };\n  bool tmpvar_15;\n  tmpvar_15 = (q32 >= tmpvar_12);\n  float tmpvar_16;\n  float tmpvar_17;\n  tmpvar_17 = (min (abs(\n    (tmpvar_10.x / tmpvar_10.y)\n  ), 1.0) / max (abs(\n    (tmpvar_10.x / tmpvar_10.y)\n  ), 1.0));\n  float tmpvar_18;\n  tmpvar_18 = (tmpvar_17 * tmpvar_17);\n  tmpvar_18 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_18) + 0.05368138) * tmpvar_18) - 0.1173503)\n     * tmpvar_18) + 0.1938925) * tmpvar_18) - 0.3326756)\n   * tmpvar_18) + 0.9999793) * tmpvar_17);\n  tmpvar_18 = (tmpvar_18 + (float(\n    (abs((tmpvar_10.x / tmpvar_10.y)) > 1.0)\n  ) * (\n    (tmpvar_18 * -2.0)\n   + 1.570796)));\n  tmpvar_16 = (tmpvar_18 * sign((tmpvar_10.x / tmpvar_10.y)));\n  if ((abs(tmpvar_10.y) > (1e-08 * abs(tmpvar_10.x)))) {\n    if ((tmpvar_10.y < 0.0)) {\n      if ((tmpvar_10.x >= 0.0)) {\n        tmpvar_16 += 3.141593;\n      } else {\n        tmpvar_16 = (tmpvar_16 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_16 = (sign(tmpvar_10.x) * 1.570796);\n  };\n  float x_19;\n  x_19 = (q31 * sin(tmpvar_12));\n  vec2 tmpvar_20;\n  tmpvar_20.x = tmpvar_16;\n  tmpvar_20.y = ((q28 - tmpvar_12) + (sign(x_19) * (1.570796 - \n    (sqrt((1.0 - abs(x_19))) * (1.570796 + (abs(x_19) * (-0.2146018 + \n      (abs(x_19) * (0.08656672 + (abs(x_19) * -0.03102955)))\n    ))))\n  )));\n  polar_7 = tmpvar_20;\n  vec3 tmpvar_21;\n  tmpvar_21.x = (sin(tmpvar_16) * sin(tmpvar_20.y));\n  tmpvar_21.y = (cos(tmpvar_16) * sin(tmpvar_20.y));\n  tmpvar_21.z = cos(tmpvar_20.y);\n  vec2 tmpvar_22;\n  tmpvar_22.x = ((tmpvar_21.z * q20) - (tmpvar_21.y * q21));\n  tmpvar_22.y = ((tmpvar_21.z * q21) + (tmpvar_21.y * q20));\n  vec2 tmpvar_23;\n  tmpvar_23.x = ((tmpvar_22.x * q22) - (tmpvar_21.x * q23));\n  tmpvar_23.y = ((tmpvar_22.x * q23) + (tmpvar_21.x * q22));\n  p_6.z = tmpvar_23.x;\n  vec2 tmpvar_24;\n  tmpvar_24.x = ((tmpvar_22.y * q24) - (tmpvar_23.y * q25));\n  tmpvar_24.y = ((tmpvar_22.y * q25) + (tmpvar_23.y * q24));\n  p_6.xy = tmpvar_24.yx;\n  float tmpvar_25;\n  float tmpvar_26;\n  tmpvar_26 = (min (abs(\n    (tmpvar_23.x / tmpvar_24.y)\n  ), 1.0) / max (abs(\n    (tmpvar_23.x / tmpvar_24.y)\n  ), 1.0));\n  float tmpvar_27;\n  tmpvar_27 = (tmpvar_26 * tmpvar_26);\n  tmpvar_27 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_27) + 0.05368138) * tmpvar_27) - 0.1173503)\n     * tmpvar_27) + 0.1938925) * tmpvar_27) - 0.3326756)\n   * tmpvar_27) + 0.9999793) * tmpvar_26);\n  tmpvar_27 = (tmpvar_27 + (float(\n    (abs((tmpvar_23.x / tmpvar_24.y)) > 1.0)\n  ) * (\n    (tmpvar_27 * -2.0)\n   + 1.570796)));\n  tmpvar_25 = (tmpvar_27 * sign((tmpvar_23.x / tmpvar_24.y)));\n  if ((abs(tmpvar_24.y) > (1e-08 * abs(tmpvar_23.x)))) {\n    if ((tmpvar_24.y < 0.0)) {\n      if ((tmpvar_23.x >= 0.0)) {\n        tmpvar_25 += 3.141593;\n      } else {\n        tmpvar_25 = (tmpvar_25 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_25 = (sign(tmpvar_23.x) * 1.570796);\n  };\n  float tmpvar_28;\n  tmpvar_28 = sqrt(dot (p_6.xz, p_6.xz));\n  float tmpvar_29;\n  float tmpvar_30;\n  tmpvar_30 = (min (abs(\n    (tmpvar_24.x / tmpvar_28)\n  ), 1.0) / max (abs(\n    (tmpvar_24.x / tmpvar_28)\n  ), 1.0));\n  float tmpvar_31;\n  tmpvar_31 = (tmpvar_30 * tmpvar_30);\n  tmpvar_31 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_31) + 0.05368138) * tmpvar_31) - 0.1173503)\n     * tmpvar_31) + 0.1938925) * tmpvar_31) - 0.3326756)\n   * tmpvar_31) + 0.9999793) * tmpvar_30);\n  tmpvar_31 = (tmpvar_31 + (float(\n    (abs((tmpvar_24.x / tmpvar_28)) > 1.0)\n  ) * (\n    (tmpvar_31 * -2.0)\n   + 1.570796)));\n  tmpvar_29 = (tmpvar_31 * sign((tmpvar_24.x / tmpvar_28)));\n  if ((abs(tmpvar_28) > (1e-08 * abs(tmpvar_24.x)))) {\n    if ((tmpvar_28 < 0.0)) {\n      if ((tmpvar_24.x >= 0.0)) {\n        tmpvar_29 += 3.141593;\n      } else {\n        tmpvar_29 = (tmpvar_29 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_29 = (sign(tmpvar_24.x) * 1.570796);\n  };\n  vec2 tmpvar_32;\n  tmpvar_32.x = tmpvar_25;\n  tmpvar_32.y = tmpvar_29;\n  polar_7 = (((tmpvar_32 * q29) * vec2(1.0, 2.0)) + vec2(0.0, 0.5));\n  vec2 tmpvar_33;\n  tmpvar_33 = (1.0 - abs((\n    (fract(polar_7) * 2.0)\n   - 1.0)));\n  polar2_5 = tmpvar_33;\n  vec2 tmpvar_34;\n  tmpvar_34.x = (tmpvar_33.x - q6);\n  tmpvar_34.y = (tmpvar_33.y - q5);\n  vec2 tmpvar_35;\n  tmpvar_35.y = 0.0;\n  tmpvar_35.x = texsize.z;\n  vec2 tmpvar_36;\n  tmpvar_36.x = 0.0;\n  tmpvar_36.y = texsize.w;\n  float tmpvar_37;\n  tmpvar_37 = (texture (sampler_main, (tmpvar_33 - tmpvar_35)).xyz - texture (sampler_main, (tmpvar_33 + tmpvar_35)).xyz).x;\n  dx_3 = tmpvar_37;\n  float tmpvar_38;\n  tmpvar_38 = (texture (sampler_main, (tmpvar_33 - tmpvar_36)).xyz - texture (sampler_main, (tmpvar_33 + tmpvar_36)).xyz).x;\n  dy_2 = tmpvar_38;\n  vec2 tmpvar_39;\n  tmpvar_39.x = tmpvar_37;\n  tmpvar_39.y = tmpvar_38;\n  uv1_4 = ((0.3 * cos(\n    (tmpvar_34 * 2.0)\n  )) - tmpvar_39);\n  float tmpvar_40;\n  tmpvar_40 = clamp ((0.04 / sqrt(\n    dot (uv1_4, uv1_4)\n  )), 0.0, 1.0);\n  uv1_4 = ((0.3 * cos(\n    (uv1_4 * 12.0)\n  )) - (9.0 * tmpvar_39));\n  dots_1 = (tmpvar_40 - dot ((\n    (texture (sampler_blur2, tmpvar_33).xyz * scale2)\n   + bias2), vec3(0.32, 0.49, 0.29)));\n  ret_9 = (dots_1 + ((texture (sampler_main, tmpvar_33).xyz * 12.0) * vec3(clamp (\n    (0.04 / sqrt(dot (uv1_4, uv1_4)))\n  , 0.0, 1.0))));\n  c_8 = ((0.5 - uv) * aspect.xy);\n  float tmpvar_41;\n  float tmpvar_42;\n  tmpvar_42 = (min (abs(\n    (c_8.x / q30)\n  ), 1.0) / max (abs(\n    (c_8.x / q30)\n  ), 1.0));\n  float tmpvar_43;\n  tmpvar_43 = (tmpvar_42 * tmpvar_42);\n  tmpvar_43 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_43) + 0.05368138) * tmpvar_43) - 0.1173503)\n     * tmpvar_43) + 0.1938925) * tmpvar_43) - 0.3326756)\n   * tmpvar_43) + 0.9999793) * tmpvar_42);\n  tmpvar_43 = (tmpvar_43 + (float(\n    (abs((c_8.x / q30)) > 1.0)\n  ) * (\n    (tmpvar_43 * -2.0)\n   + 1.570796)));\n  tmpvar_41 = (tmpvar_43 * sign((c_8.x / q30)));\n  if ((abs(q30) > (1e-08 * abs(c_8.x)))) {\n    if ((q30 < 0.0)) {\n      if ((c_8.x >= 0.0)) {\n        tmpvar_41 += 3.141593;\n      } else {\n        tmpvar_41 = (tmpvar_41 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_41 = (sign(c_8.x) * 1.570796);\n  };\n  float tmpvar_44;\n  float tmpvar_45;\n  tmpvar_45 = (min (abs(\n    (c_8.y / q30)\n  ), 1.0) / max (abs(\n    (c_8.y / q30)\n  ), 1.0));\n  float tmpvar_46;\n  tmpvar_46 = (tmpvar_45 * tmpvar_45);\n  tmpvar_46 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_46) + 0.05368138) * tmpvar_46) - 0.1173503)\n     * tmpvar_46) + 0.1938925) * tmpvar_46) - 0.3326756)\n   * tmpvar_46) + 0.9999793) * tmpvar_45);\n  tmpvar_46 = (tmpvar_46 + (float(\n    (abs((c_8.y / q30)) > 1.0)\n  ) * (\n    (tmpvar_46 * -2.0)\n   + 1.570796)));\n  tmpvar_44 = (tmpvar_46 * sign((c_8.y / q30)));\n  if ((abs(q30) > (1e-08 * abs(c_8.y)))) {\n    if ((q30 < 0.0)) {\n      if ((c_8.y >= 0.0)) {\n        tmpvar_44 += 3.141593;\n      } else {\n        tmpvar_44 = (tmpvar_44 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_44 = (sign(c_8.y) * 1.570796);\n  };\n  vec2 tmpvar_47;\n  tmpvar_47.x = tmpvar_41;\n  tmpvar_47.y = tmpvar_44;\n  polar_7 = tmpvar_47;\n  vec3 tmpvar_48;\n  tmpvar_48.x = (sin(tmpvar_41) * cos(tmpvar_44));\n  tmpvar_48.y = (sin(tmpvar_44) * cos(tmpvar_41));\n  tmpvar_48.z = (cos(tmpvar_41) * cos(tmpvar_44));\n  vec2 tmpvar_49;\n  tmpvar_49.x = ((tmpvar_48.z * q20) - (tmpvar_48.y * q21));\n  tmpvar_49.y = ((tmpvar_48.z * q21) + (tmpvar_48.y * q20));\n  vec2 tmpvar_50;\n  tmpvar_50.x = ((tmpvar_49.x * q22) - (tmpvar_48.x * q23));\n  tmpvar_50.y = ((tmpvar_49.x * q23) + (tmpvar_48.x * q22));\n  p_6.z = tmpvar_50.x;\n  vec2 tmpvar_51;\n  tmpvar_51.x = ((tmpvar_49.y * q24) - (tmpvar_50.y * q25));\n  tmpvar_51.y = ((tmpvar_49.y * q25) + (tmpvar_50.y * q24));\n  p_6.xy = tmpvar_51.yx;\n  float tmpvar_52;\n  float tmpvar_53;\n  tmpvar_53 = (min (abs(\n    (tmpvar_51.y / tmpvar_50.x)\n  ), 1.0) / max (abs(\n    (tmpvar_51.y / tmpvar_50.x)\n  ), 1.0));\n  float tmpvar_54;\n  tmpvar_54 = (tmpvar_53 * tmpvar_53);\n  tmpvar_54 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_54) + 0.05368138) * tmpvar_54) - 0.1173503)\n     * tmpvar_54) + 0.1938925) * tmpvar_54) - 0.3326756)\n   * tmpvar_54) + 0.9999793) * tmpvar_53);\n  tmpvar_54 = (tmpvar_54 + (float(\n    (abs((tmpvar_51.y / tmpvar_50.x)) > 1.0)\n  ) * (\n    (tmpvar_54 * -2.0)\n   + 1.570796)));\n  tmpvar_52 = (tmpvar_54 * sign((tmpvar_51.y / tmpvar_50.x)));\n  if ((abs(tmpvar_50.x) > (1e-08 * abs(tmpvar_51.y)))) {\n    if ((tmpvar_50.x < 0.0)) {\n      if ((tmpvar_51.y >= 0.0)) {\n        tmpvar_52 += 3.141593;\n      } else {\n        tmpvar_52 = (tmpvar_52 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_52 = (sign(tmpvar_51.y) * 1.570796);\n  };\n  float tmpvar_55;\n  tmpvar_55 = sqrt(dot (p_6.xz, p_6.xz));\n  float tmpvar_56;\n  float tmpvar_57;\n  tmpvar_57 = (min (abs(\n    (tmpvar_51.x / tmpvar_55)\n  ), 1.0) / max (abs(\n    (tmpvar_51.x / tmpvar_55)\n  ), 1.0));\n  float tmpvar_58;\n  tmpvar_58 = (tmpvar_57 * tmpvar_57);\n  tmpvar_58 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_58) + 0.05368138) * tmpvar_58) - 0.1173503)\n     * tmpvar_58) + 0.1938925) * tmpvar_58) - 0.3326756)\n   * tmpvar_58) + 0.9999793) * tmpvar_57);\n  tmpvar_58 = (tmpvar_58 + (float(\n    (abs((tmpvar_51.x / tmpvar_55)) > 1.0)\n  ) * (\n    (tmpvar_58 * -2.0)\n   + 1.570796)));\n  tmpvar_56 = (tmpvar_58 * sign((tmpvar_51.x / tmpvar_55)));\n  if ((abs(tmpvar_55) > (1e-08 * abs(tmpvar_51.x)))) {\n    if ((tmpvar_55 < 0.0)) {\n      if ((tmpvar_51.x >= 0.0)) {\n        tmpvar_56 += 3.141593;\n      } else {\n        tmpvar_56 = (tmpvar_56 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_56 = (sign(tmpvar_51.x) * 1.570796);\n  };\n  vec2 tmpvar_59;\n  tmpvar_59.x = tmpvar_52;\n  tmpvar_59.y = (tmpvar_56 * 2.0);\n  polar_7 = ((tmpvar_59 * q29) + vec2(0.0, 0.5));\n  polar2_5 = (1.0 - abs((\n    (fract(polar_7) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_60;\n  tmpvar_60.x = (polar2_5.x - q6);\n  tmpvar_60.y = (polar2_5.y - q5);\n  vec2 tmpvar_61;\n  tmpvar_61.y = 0.0;\n  tmpvar_61.x = texsize.z;\n  vec2 tmpvar_62;\n  tmpvar_62.x = 0.0;\n  tmpvar_62.y = texsize.w;\n  dx_3 = (texture (sampler_main, (polar2_5 - tmpvar_61)).xyz - texture (sampler_main, (polar2_5 + tmpvar_61)).xyz).x;\n  dy_2 = (texture (sampler_main, (polar2_5 - tmpvar_62)).xyz - texture (sampler_main, (polar2_5 + tmpvar_62)).xyz).x;\n  vec2 tmpvar_63;\n  tmpvar_63.x = dx_3;\n  tmpvar_63.y = dy_2;\n  uv1_4 = ((0.3 * cos(\n    (tmpvar_60 * 2.0)\n  )) - tmpvar_63);\n  float tmpvar_64;\n  tmpvar_64 = clamp ((0.04 / sqrt(\n    dot (uv1_4, uv1_4)\n  )), 0.0, 1.0);\n  uv1_4 = ((0.3 * cos(\n    (uv1_4 * 12.0)\n  )) - (9.0 * tmpvar_63));\n  dots_1 = (tmpvar_64 - dot ((\n    (texture (sampler_blur2, polar2_5).xyz * scale2)\n   + bias2), vec3(0.32, 0.49, 0.29)));\n  vec3 tmpvar_65;\n  tmpvar_65 = mix (ret_9, pow ((dots_1 + \n    ((texture (sampler_main, polar2_5).xyz * 12.0) * vec3(clamp ((0.04 / sqrt(\n      dot (uv1_4, uv1_4)\n    )), 0.0, 1.0)))\n  ), vec3(1.75, 1.75, 1.75)).yzx, vec3((1.0 - float(tmpvar_15))));\n  ret_9 = tmpvar_65;\n  vec4 tmpvar_66;\n  tmpvar_66 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv1_4.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_65.x > (q26 * q13)) && (tmpvar_65.x <= (q23 * q11)))) {\n    ret_9.z = (tmpvar_65.z - (tmpvar_66.x * 0.5));\n  };\n  if (((tmpvar_65.y > (q25 * q11)) && (tmpvar_65.y <= (q22 * q12)))) {\n    ret_9.x = (tmpvar_65.x - (tmpvar_66.y * 0.5));\n  };\n  if (((ret_9.z > (q24 * q12)) && (ret_9.z <= (q21 * q13)))) {\n    ret_9.y = (tmpvar_65.y - (tmpvar_66.z * 0.5));\n  };\n  vec4 tmpvar_67;\n  tmpvar_67.w = 1.0;\n  tmpvar_67.xyz = ret_9;\n  ret = tmpvar_67.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat2 uv1, uv6;\nfloat dx,dy;\n\nshader_body {\n\nuv1 = (uv-.5);\n\nfloat2 ang2= tex2D (sampler_noise_hq,uv1/3+.006*time).xy;\nuv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));\n\nmus = abs(.5*cos(uv6.y*14)-(cos(uv6.x*71)));\nmus *= float3 (1,.96,.9)/25;\n\nuv6 = .2*sin(12*uv+rand_frame);\nfloat3 dots = .001/length(uv6)* float3 (0.2,1,1);\n\n//dots = lum(tex2D (sampler_noise_hq,uv +rand_frame));\n//dots = (dots-.7) * (dots >= .7) * float3 (0.2,1,1);\n\nmus -= dots;\n\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nhor = float2 (.004,0);\nver = float2 (0,.004);\n\n\n\nfloat dx = lum(GetPixel(uv+hor)-GetPixel(uv-hor));\nfloat dy = lum(GetPixel(uv+ver)-GetPixel(uv-ver));\n\nfloat2 zz = float2 (dx,dy);\n\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\ncrisp +=.015 - length(zz)*blur/1.5;\n\nfloat3 ret1 = crisp - lum(blur)*.012 + mus;\n//ret1 = abs(mus)/2;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"float2 polar, factorA, factorB, product;\n\nsampler sampler_pano_starsmap;\n\nshader_body\n{\n\n\nfloat z = q30;\nfloat d = q31;\nfloat pi = q28;\nfloat pi2inv = q29;\nfloat mask_apex = q32;\nfloat zoom = q27;\n\nfloat2 c = zoom*(uv-0.5)*aspect.xy;\n\nfloat camera_apex = atan2( length(c),z);\n\nbool mask = mask_apex >= camera_apex;\n\nfloat longitude = atan2(c.x,c.y);\nfloat latitude = (pi - camera_apex + asin(d*sin(camera_apex)));\n\nfloat2 polar = float2(longitude,latitude);\n\nfloat3 p = float3( sin(polar.x)*sin(polar.y),cos(polar.x)*sin(polar.y),cos(polar.y));\n\nfactorA = p.zy;\nfactorB = float2(q20,q21);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zy = product.xy;\n\nfactorA = p.zx;\nfactorB = float2(q22,q23);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zx = product.xy;\n\nfactorA = p.yx;\nfactorB = float2(q24,q25);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\np.yx = product.xy;\n\npolar = float2(atan2(p.z,p.x),atan2(p.y,length(p.xz)))*pi2inv*float2(1,2)+float2(0,0.5);\n\n//Eo.S's mirror code!\nfloat2 polar2 = 1.0 - abs( frac( polar  ) * 2.0 - 1.0 );\n\nfloat2 uv1 = float2(polar2.x-q6, polar2.y-q5);\n\nfloat2 hor = float2 (texsize.z*1,0);\nfloat2 ver = float2 (0,texsize.w*1);\nfloat dx = GetPixel (polar2-hor) - GetPixel (polar2+hor);\nfloat dy = GetPixel (polar2-ver) - GetPixel (polar2+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = uv1*0+.3*cos(uv1*2) - dz;\nfloat dots = saturate(.04/length(uv1));\nuv1 = uv1*0+.3*cos(uv1*12) - 9*dz;\nfloat3 dots2 = saturate(.04/length(uv1));\ndots -= lum(GetBlur2(polar2));\n\nret = dots + GetPixel(polar2)*12*dots2;\n\n//ret = tex2D(sampler_main,polar2);\n\n//ret = lerp(ret,1,mask*tex2d(sampler_pano_earth_clouds,polar)*mid_att*0.5);\n\n\nc = -(uv-0.5)*aspect.xy;\npolar = float2( atan2(c.x,z), atan2(c.y,z));\np = float3( sin(polar.x)*cos(polar.y),sin(polar.y)*cos(polar.x),cos(polar.x)*cos(polar.y));\nfactorA = p.zy;factorB = float2(q20,q21);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zy = product.xy;factorA = p.zx;factorB = float2(q22,q23);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zx = product.xy;factorA = p.yx;factorB = float2(q24,q25);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\np.yx = product.xy;polar = float2( atan2(p.x,p.z),atan2(p.y,length(p.xz))*2)*pi2inv + float2(0,0.5);\n\npolar2 = 1.0 - abs( frac( polar  ) * 2.0 - 1.0 );\n\nuv1 = float2(polar2.x-q6, polar2.y-q5);\n\nhor = float2 (texsize.z,0);\nver = float2 (0,texsize.w*1);\ndx = GetPixel (polar2-hor) - GetPixel (polar2+hor);\ndy = GetPixel (polar2-ver) - GetPixel (polar2+ver);\ndz = float2 (dx,dy);\n\nuv1 = uv1*0+.3*cos(uv1*2) - dz;\ndots = saturate(.04/length(uv1));\nuv1 = uv1*0+.3*cos(uv1*12) - 9*dz;\ndots2 = saturate(.04/length(uv1));\ndots -= lum(GetBlur2(polar2));\n\nret = lerp(ret,pow(dots + GetPixel(polar2)*12*dots2,1.75).yzx,(1-mask));\nfloat4 noise9 = tex3D(sampler_noisevol_hq,\n                      ((uv1.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 +\n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5;\nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5;\nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5;\n\n}\n\n"}