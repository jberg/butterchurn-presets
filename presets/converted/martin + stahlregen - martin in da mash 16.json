{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_dots":1,"wave_thick":1,"darken":1,"wave_a":0.001,"wave_scale":2.346,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_a":0.8,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.low=0;a.high=0;a.q22=0;a.k0x=0;a.trel=0;a.dx=0;a.q23=0;a.yi=0;a.k1x=0;a.q26=0;a.dy=0;a.k0y=0;a.xi=0;a.q28=0;a.k1y=0;a.q20=0;","frame_eqs_str":"a.xi-=div(a.dx*a.q22,200);a.yi-=div(a.dy*a.q23,200);a.low=0;a.high=1;a.k0x=below(a.xi,a.low);a.k1x=above(a.xi,a.high);a.k0y=below(a.yi,a.low);a.k1y=above(a.yi,a.high);a.dx=1*a.k0x+-1*a.k1x;a.dy=1*a.k0y+-1*a.k1y;a.x=a.xi;a.y=a.yi;a.trel=div(a.time,2)+a.q20;a.x=.5+Math.sin(2*a.trel);a.y=.5+Math.cos(1.3*a.trel+div(a.q28,3));a.a=div(a.q26,4)+.2;","init_eqs_eel":"","frame_eqs_eel":"xi = xi - dx*q22/200;\nyi = yi - dy*q23/200;\n\nlow = 0; \nhigh = 1;\n\nk0x = below(xi,low);\nk1x = above(xi,high);\nk0y = below(yi,low);\nk1y = above(yi,high);\n\ndx = k0x*1 + k1x*-1;\ndy = k0y*1 + k1y*-1;\n\n//xi = 0; yi = 0;\nx = xi;\ny = yi;\n\ntrel = time/2+q20;\n\nx = .5+sin(trel*2);\ny = .5+cos(trel*1.3 +q28/3);\n\na = q26/4+.2; \n//a = 1;"},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.36696,"tex_ang":3.45575,"tex_zoom":0.99305,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a2 =0;a = 0;\na = q24/2;","init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\na = q24/2;"},{"baseVals":{"enabled":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.q21=0;","frame_eqs_str":"a.x=div(rand(10),10);a.y=div(rand(10),10);a.r=div(rand(4),3);a.g=div(rand(4),3);a.b=div(rand(4),3);a.a=Math.min(div(a.q21,2),.9);a.rad=div(a.a*a.a,3);","init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\ny = rand(10)/10;\n\nr = rand(4)/3;\ng = rand(4)/3;\nb = rand(4)/3;\n\na = min(q21/2 ,.9);\nrad = a *a/3 ;\n"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"k1 = (sample*100)%2;\nk2 = (sample*100)%4;\nxi = value1*k1 + xi*(1-k1);\nyi = value2*(1-k1) + yi*k1;\n\nx = .5 + xi;\ny = .5 + yi;\n\na = q22/8; \na = min(a,.2);","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\nk2 = (sample*100)%4;\nxi = value1*k1 + xi*(1-k1);\nyi = value2*(1-k1) + yi*k1;\n\nx = .5 + xi;\ny = .5 + yi;\n\na = q22/8; \na = min(a,.2);"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_str":"xi = rand(100)/100;\nyi = rand(100)/100;\n\nx = xi; y = yi;\n\na = q21/15;","init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\nyi = rand(100)/100;\n\nx = xi; y = yi;\n\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index=0;a.copy=0;a.q22=0;a.q21=0;a.grid=0;a.q29=0;a.q1=0;a.dec_med=0;a.str=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.go=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.rot1=0;a.q28=0;a.q30=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,4);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=Math.max(a.peak,4);a.q23=a.index;a.q24=a.is_beat;a.q26=Math.max(a.bass+a.mid+a.treb,3);a.go=a.go*a.dec_slow+(1-a.dec_slow)*equal(a.index2,2);a.movez+=div(3*(1+.3*a.q26),a.fps)*a.go;a.q30=a.movez;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,2);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.str=a.str*a.dec_slow+(1-a.dec_slow)*a.index3;a.q27=4-a.str;\na.grid=a.grid*a.dec_med+(1-a.dec_med)*equal(a.index2,2)*bnot(a.index);a.mv_a=0*a.grid;a.rot1=a.dec_med*a.rot1+(1-a.dec_med)*bnot(a.index2);a.q28=a.rot1;a.copy=a.copy*a.dec_slow+(1-a.dec_slow)*a.index3;a.q29=.3*a.copy;a.wave_a=0;","pixel_eqs_str":"a.dx=.02*a.q28;a.rot=.04*a.q2;a.zoom=.96+.1*Math.sin(div(a.time,7));","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\n\nq20 = avg;\nq21 = beat;\nq22 = max(peak,4);\nq23 = index;\nq24 = is_beat;\nq26 = max(bass + mid + treb,3);\n\ngo = go*dec_slow + (1-dec_slow) * equal(index2,2);\n\nmovez = movez + .1*(1+.3*q26)*30/fps * go;\nq30 = movez;\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3*3.1416/2;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nstr = str * dec_slow + (1-dec_slow) * index3;\nq27 = 4 - str;\n\ngrid = grid*(dec_med) + (1-dec_med)* equal(index2,2)*bnot(index);\nmv_a = grid * .6 *0;\n\nrot1 = dec_med * rot1 + (1-dec_med) * bnot(index2) ;\nq28 = rot1 ;\n\ncopy = copy * dec_slow + (1-dec_slow)*index3;\nq29 = .3*copy;\n\nwave_a = 0;","pixel_eqs_eel":"dx = 0.02*q28;\nrot = .04*q2;\nzoom = .96 + .1*sin(time/7);\n//zoom = 1.04;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_main, (uv - (\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((mix (tmpvar_2, \n    (1.0 - tmpvar_2.zyx)\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\n    (1.0 - rad)\n  , 18.0)));\n  ret = tmpvar_3.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.y = 0.0;\n  tmpvar_1.x = texsize.z;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.0;\n  tmpvar_2.y = texsize.w;\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((uv.x - 0.5) + 0.5);\n  tmpvar_3.y = uv.y;\n  xlat_mutabledz.x = dot ((texture (sampler_main, (tmpvar_3 + tmpvar_1)).xyz - texture (sampler_main, (tmpvar_3 - tmpvar_1)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz.y = dot ((texture (sampler_main, (tmpvar_3 + tmpvar_2)).xyz - texture (sampler_main, (tmpvar_3 - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutableuv3 = ((0.4 * cos(\n    (42.0 * uv3)\n  )) + (64.0 * xlat_mutabledz));\n  float tmpvar_4;\n  tmpvar_4 = clamp ((0.01 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (clamp ((\n    (12.0 * ((texture (sampler_main, (tmpvar_3 + \n      (0.2 * xlat_mutabledz)\n    )).xyz - (q1 * xlat_mutabledz.y)) + 0.04))\n   * \n    (0.1 + max (vec3(0.0, 0.0, 0.0), ((\n      (0.1 * vec3(tmpvar_4))\n     + \n      (0.9 * dot (vec3(tmpvar_4), vec3(0.32, 0.49, 0.29)))\n    ) * 1.252262)))\n  ), 0.0, 1.0) - 0.05);\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\n\nfloat3 noiseVal =lum (tex2D(sampler_noise_lq, corr*uv*.02+ .1*rand_frame));\n\nfloat2 k1 = float2((uv.x), (uv.y));\n\nfloat3 ret1 = GetBlur1(uv) ;\n\nfloat k2 = (20*uv)%2;\n\nfloat2 zz = uv.xy * texsize.xy *.08;\nfloat h1 = (tan(zz.x));\nfloat h2 = (tan(zz.y));\n\nuv.xy -= float2(h1,h2)*texsize.zw * 3;\n\n\nfloat3 crisp = tex2D(sampler_main,uv) + noiseVal/30;\n\ncrisp = lerp (crisp, 1-crisp.zyx, 0.01);\n    \n ret = crisp -.03 - 0.2*pow(1-rad,18);\n}","comp_hlsl":"float z;\nfloat3 ret1, neu, mus;\nfloat2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;\nshader_body\n{\nfloat2 uv2;\n//uv = (uv-0.5) * aspect.xy + .5;    \ndz = 0;\n\n\nfloat2 hor = float2(texsize.z,0);\nfloat2 ver = float2(0,texsize.w);\n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nfloat anz = 1;\nfloat n = 0;\n//uv = mul(uv-.5, float2x2(_qa))+.5;\nfloat z = uv.y/2+1; z = z/1.2; z = 1;\nuv4 = float2((uv.x-.5)/z+.5,uv.y/z);\n    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));\n    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));\n\n//uv4 = 0;\n\nmus = 1*GetPixel(uv4+.2*dz)-q1*1*dz.y+.04;\n\nuv2 = uv-.5;\n    dist = 1-frac(1.0/anz*n-.1); //evtl sqrt !;\n\n    inten =  sqrt(dist)*(1-dist*dist)*4;\n\n\n    uv3 = .4 * cos(42*uv3) + 64*dz;\n    neu = saturate(.01/length(uv3)) ;\n    neu = dist*neu + (1-dist)*lum(neu);\n    ret1 = max(ret1,neu*inten);\n\n\nret = -0*ret1  +  saturate(12*mus*(.1+ret1))-.05;\n}"}