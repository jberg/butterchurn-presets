{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":32,"additive":1,"rad":0.19477,"r":0,"b":1,"a":0,"r2":0.63,"g2":0.7,"b2":1,"a2":0.07,"border_a":0,"enabled":0},"init_eqs_str":"flip=1","frame_eqs_str":"\nflip=-flip;\nlens_scale = flip*0.5+0.5;\nlens_scale = 1 + lens_scale*2.4;\npos_scale = if( equal(flip,-1) , 0.5 , lens_scale );\n\nt1=q1*0.25;\n\nsample = 1;\nn= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= -xp/zp*pos_scale + 0.5;\ny= -yp/zp*pos_scale * 1.333 + 0.5;\n\nrad = rad*(1+q8/3)*lens_scale","init_eqs_eel":"flip=1","frame_eqs_eel":"\nflip=-flip;\nlens_scale = flip*0.5+0.5;\nlens_scale = 1 + lens_scale*2.4;\npos_scale = if( equal(flip,-1) , 0.5 , lens_scale );\n\nt1=q1*0.25;\n\nsample = 1;\nn= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= -xp/zp*pos_scale + 0.5;\ny= -yp/zp*pos_scale * 1.333 + 0.5;\n\nrad = rad*(1+q8/3)*lens_scale"},{"baseVals":{"sides":6,"rad":0.04378,"r":0.3,"g":0.6,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nt1=q1*0.25;\n\nsample = 1;\nn= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;\n\n\na= min(a+q8/2,1);\nr= min(r*(1+q8) , 1 );\ng= min(g*(1+q8) , 1 );\n\nr2= min(q8/2,1);\ng2= min(q8/4,1);\n\nrad= rad*(1+q8/7)","init_eqs_eel":"","frame_eqs_eel":"\nt1=q1*0.25;\n\nsample = 1;\nn= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;\n\n\na= min(a+q8/2,1);\nr= min(r*(1+q8) , 1 );\ng= min(g*(1+q8) , 1 );\n\nr2= min(q8/2,1);\ng2= min(q8/4,1);\n\nrad= rad*(1+q8/7)"},{"baseVals":{"sides":36,"rad":0.28428,"r":0,"a":0,"r2":0.23,"g2":0.54,"b2":1,"a2":0.05,"border_g":0.8,"border_b":0.4,"border_a":0.45,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nt1=q1*0.25;\n\nsample = 1;\nn= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;\n\na2= min( a2*(1+q8/2) , 1 );\nr2= min( r2*(1+q8/4) , 1 );\ng2= min( g2*(1+q8/3) , 1 );\n\nborder_a = min( border_a * (1+q8) , 1 );","init_eqs_eel":"","frame_eqs_eel":"\nt1=q1*0.25;\n\nsample = 1;\nn= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;\n\na2= min( a2*(1+q8/2) , 1 );\nr2= min( r2*(1+q8/4) , 1 );\ng2= min( g2*(1+q8/3) , 1 );\n\nborder_a = min( border_a * (1+q8) , 1 );"},{"baseVals":{"sides":6,"additive":1,"rad":0.15804,"r":0.3,"g":0.6,"b":1,"a":0.14,"r2":0.4,"g2":0.5,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nt1=q1*0.25;\n\nsample = 1;\nn= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;\n\n\na= min(a*q8,1);\n\nrad= rad*(1+q8)","init_eqs_eel":"","frame_eqs_eel":"\nt1=q1*0.25;\n\nsample = 1;\nn= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;\n\n\na= min(a*q8,1);\n\nrad= rad*(1+q8)"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.55045,"smoothing":1,"r":0.19,"g":0.15,"b":0.11},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.fix=0;a.yp=0;a.t1=0;a.q1=0;a.cubesize=0;a.xq=0;a.sang=0;a.zq=0;a.ang=0;a.tm=0;a.zp=0;a.q2=0;a.taille=0;","frame_eqs_str":"a.t1=.25*a.q1;a.a=.00001<Math.abs(above(.3*(a.treb+a.mid),1))?1:.5*a.treb;","point_eqs_str":"a.n=6.283*a.sample;a.cubesize=a.q2;a.fix=.5*div(1,a.cubesize);a.tm=4*a.q1+4*a.sample;a.taille=.25*a.bass+.3;a.xp=Math.sin(a.tm)*Math.cos(3*a.tm)*a.taille+.5;a.yp=Math.sin(1.1*a.tm)*Math.sin(4.1*a.tm)*a.taille+.5;a.zp=Math.sin(2.9*a.tm)*Math.cos(1.77*a.tm)*a.taille+.5;a.xp=div(Math.floor(a.xp*a.cubesize),a.cubesize)-.5+a.fix;a.yp=div(Math.floor(a.yp*a.cubesize),a.cubesize)-.5+a.fix;a.zp=div(Math.floor(a.zp*a.cubesize),a.cubesize)-.5+a.fix;a.ang=a.t1;a.sang=Math.sin(a.ang);a.cang=\nMath.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=.75*a.t1;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=2;a.x=div(a.xp,a.zp)+.5;a.y=1.333*div(a.yp,a.zp)+.5;","init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;\na=if(above((treb+mid)*.3,1),1,treb*.5);","point_eqs_eel":"n= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\ntaille=bass*.25+0.3;\nxp= sin(tm)*cos(tm*3)*taille+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*taille+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*taille+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"thick":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1=q1*0.25;","point_eqs_str":"n= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+3;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;","init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\ntm=q1*4+sample*4;\n\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\n\nxp= int(xp*cubesize)/cubesize -0.5+fix;\nyp= int(yp*cubesize)/cubesize -0.5+fix;\nzp= int(zp*cubesize)/cubesize -0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+3;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1=q1*0.25;","point_eqs_str":"n= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\n\nxp= rand(cubesize)/cubesize-0.5+fix;\nyp= rand(cubesize)/cubesize-0.5+fix;\nzp= rand(cubesize)/cubesize-0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;","init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\ncubesize=q2;\nfix=1/cubesize *0.5;\n\nxp= rand(cubesize)/cubesize-0.5+fix;\nyp= rand(cubesize)/cubesize-0.5+fix;\nzp= rand(cubesize)/cubesize-0.5+fix;\n\n\n//rotate\nang=t1;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n//rotate\nang=t1*0.75;\nsang=sin(ang);cang=cos(ang);\nxq=xp;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp= zp+2;\nx= xp/zp + 0.5;\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mainangle=0;a.q1=0;a.kick=0;a.beat=0;a.vol=0;a.bc=0;a.size=0;a.q2=0;a.trigger=0;a.q7=0;a.mtime=0;a.q8=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.dcsp=0;a.size=6;a.bc=0;","frame_eqs_str":"a.decay=.985;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.q8=a.vol;a.mtime+=.01*a.vol*div(75,a.fps);a.q7=a.mtime;a.monitor=div(512,8);a.warp=0;a.q1=.9*a.mtime;a.beat=above(a.vol,1.5);a.bc=Math.max(a.bc,0);a.bc=.00001<Math.abs(equal(a.bc,0))?a.bc+a.beat:a.bc-div(div(1,a.fps),4);a.trigger=equal(a.bc,1);a.monitor=a.bc;a.size+=a.trigger;a.size=.00001<Math.abs(above(a.size,9))?6:a.size;a.mainangle=.19125*a.q1;a.kick=.00001<Math.abs(equal(a.trigger,1))?2:1;a.dx=.003*Math.cos(a.mainangle)*\na.kick;a.dy=.003*Math.sin(a.mainangle)*a.kick;a.zoom=1-.005*a.vol*Math.abs(Math.cos(a.mainangle));a.q2=Math.floor(a.size);","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\n\ndcsp=0;\n\nsize =6;\nbc=0;","frame_eqs_eel":"decay=0.985;\nvol= (bass+mid+treb)*0.25;\nvol = vol*vol;\n\nq8=vol;\nmtime=mtime+vol*0.01*(75/fps);\n\nq7 = mtime;\n\nmonitor=512/8;\n\nwarp=0;\nq1=mtime*0.9;\n\nbeat = above(vol,1.5);\nbc = max(bc,0);\nbc = if( equal(bc,0) , bc+beat , bc-(1/fps)/4 );\n\ntrigger = equal(bc,1);\n\nmonitor=bc;\n\nsize = size + trigger;\nsize = if( above(size,9) ,6 , size );\nmainangle=q1*0.255*0.75;\nkick= if(equal(trigger,1),2,1);\ndx=cos(mainangle)*.003*kick;\ndy=sin(mainangle)*.003*kick;\nzoom=1-(vol*.005)*abs(cos(mainangle));\nq2=int(size); //cubesize","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).x;\n  tmpvar_4.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).x;\n  vec2 tmpvar_5;\n  tmpvar_5 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_4 * texsize.zw) * 2.0));\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\n  ) - 0.004) + ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.12)).x;\n  ret_1.y = (texture (sampler_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5).xy * texsize.zw)\n   * 3.0))).y - 0.004);\n  ret_1.z = texture (sampler_main, uv).z;\n  ret_1.z = (ret_1.z + ((\n    (ret_1.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\n   * 0.1) - 0.015));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 8;  // the distance of the 4 surrounding spots (N-E-S-W), where the gradient is calutated by\n                                // 4 - 12, has impact on the spreading speed\n                                // (wider distances may result in greater differences\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) ); // east-west gradient\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) ); // north-south gradient\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 // makes the graininess of the fur\n                                                                    // 0.5 (very raw) - 3 (fine leather)\n                       + rand_frame.xy;    // needs to be set to keep an overall randomness\n\n    float2 uv_bg = lerp(uv_orig,uv,0.4)   // scaling the input motion vector down, useful for a lower layer\n                   + float2(dx.x,dy.x)*texsize.zw  *2; // important: this is the spreading factor.\n                                                       // 1 to 8 are good values\n                                                       // (dependent on the distance the gradient is taken from)\n\n    ret.x = GetPixel(uv_bg).x // we will process the value from the previous frame\n            - (GetPixel(uv_bg).x - GetBlur3(uv_bg).x)  * 0.02  // this part darkens the most contrasty parts only\n                                                               // try differnet blur levels too\n            - 0.004  // overall fade to black\n                     // the play of the upper two factors makes the 3D impact\n            +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.12;  // intensity of the hairs (0.04 - 0.4)\n\nfloat2 uv_mid = lerp(uv_orig,uv,0.3) +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*texsize.zw*3;\n ret.y = GetPixel(uv_mid).y - 0.004;\n\n\nfloat2 uv_fg = uv;\n   ret.z = GetPixel(uv_fg).z;\n   ret.z += (ret.z - GetBlur1(uv_fg).z)*0.1 - 0.015;\n\n}","comp_hlsl":""}