{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437056,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":3.544901,"ang":0.816814,"tex_zoom":1.386143,"r":0,"g":1,"b":1,"a":0,"b2":1,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"t1 = .5*aspectx;","frame_eqs_str":"trig = trig + q24;\ntrig = below(trig,18)*trig;\n\nradius = radius + .01*30/fps;\n\nradius = radius * (1-bnot(trig));\na2 = 1/(6*radius);\nang = 1/radius*1;\nrad = radius;\n\nx = radius;\n","init_eqs_eel":"t1 = .5*aspectx;","frame_eqs_eel":"trig = trig + q24;\ntrig = below(trig,18)*trig;\n\nradius = radius + .01*30/fps;\n\nradius = radius * (1-bnot(trig));\na2 = 1/(6*radius);\nang = 1/radius*1;\nrad = radius;\n\nx = radius;\n"},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a2 =0;a = 0;\na = q24/2;","init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\na = q24/2;"},{"baseVals":{"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = rand(10)/10;\ny = rand(10)/10;\n\nr = rand(4)/3;\ng = rand(4)/3;\nb = rand(4)/3;\n\na = min(q21/2 ,.9);\nrad = a *a/3 ;\n","init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\ny = rand(10)/10;\n\nr = rand(4)/3;\ng = rand(4)/3;\nb = rand(4)/3;\n\na = min(q21/2 ,.9);\nrad = a *a/3 ;\n"},{"baseVals":{"sides":63,"textured":1,"rad":0.301766,"tex_ang":0.879646,"tex_zoom":0.954309,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"x = .5 +.001*q22*int(sample*10); y = sample*10 - int(sample*10);\n\nr = 1; b = 1; g = 1;\na = 1;\n\n\n\n","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"x = .5 +.001*q22*int(sample*10); y = sample*10 - int(sample*10);\n\nr = 1; b = 1; g = 1;\na = 1;\n\n\n\n"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_str":"xi = rand(100)/100;\nyi = rand(100)/100;\n\nx = xi; y = yi;\n\na = q21/15;","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\nyi = rand(100)/100;\n\nx = xi; y = yi;\n\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index4=0;a.index=0;a.q22=0;a.q21=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q28=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.monitor=a.index4;\na.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.14159265359*a.p2,4);a.q27=8-a.index;a.q28=a.index2;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=a.q1*bnot(a.index2);","pixel_eqs_str":"a.rot=.04*a.q5*Math.sin(4*a.q22*a.rad);a.zoom=1.008;","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nmonitor = index4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.14159265359/4;\n\nq27 = 8-index;\nq28 = index2;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nq5 = q1 * bnot(index2);","pixel_eqs_eel":"rot = .04*q5*(sin(q22*4*(rad)));\nzoom = 1+.008 ;","warp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  vec3 theta_2;\n  theta_2 = ((0.474 * tmpvar_1) * (q21 * q21));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((dot (\n    (texture (sampler_main, uv).xyz + 0.015)\n  , vec3(0.32, 0.49, 0.29)) * (1.0 - \n    (0.1 * abs((sin(theta_2) / cos(theta_2))))\n  )) - ((0.02 / \n    (rad + 0.02)\n  ) * tmpvar_1));\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\n  tmpvar_2.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * aspect.xy) * 9.0)\n  )) - tmpvar_2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (-0.5 * (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1)))\n   + \n    clamp (((0.04 * bass_att) / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  ) + 0.2) * 2.0);\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"float2 uv2;\n\nshader_body {\n//uv2 = mul(uv-.5,float2x2(_qa))+.5;\n\nfloat3 ist = GetBlur1(uv);\n\nfloat3 crisp = tex2D(sampler_main,uv);\ncrisp += .015-.0*pow(rad,2);\n\nfloat3 ret1 = crisp;\n\nfloat k2 = q21*q21*.3;\nret1 = lum(ret1) * (1-.1*abs(tan(k2*ist*1.58)));\n\n\nret = ret1 - .02/(rad+.02)*ist;\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = (uv-.5)*aspect.xy;\n\n\nfloat3 ret1 = tex2D(sampler_main, uv) + GetBlur1(uv);\n\nfloat2 hor = float2 (.001,0);\nfloat2 ver = float2 (0,.001);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = uv1*0+.3*cos(uv1*9) -dz;\n\nfloat dots = saturate(.04*bass_att/length(uv1));\n\n\nret1 = (-.5*ret1) + dots + .2;\n\nret = ret1*2;\n}"}