{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":1.741,"wave_smoothing":0.81,"modwavealphastart":0.37,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.59,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":94,"rad":0.26574,"ang":2.32478,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.5,"g":1,"b":0.9,"a":0.03,"r2":0.83,"g2":0.93,"b2":0.8,"a2":0.06,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.26458,"tex_ang":1.4451,"tex_zoom":1.49331,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"x":0.503,"rad":0.15648,"tex_zoom":0.60986,"g":1,"b":1,"a":0.3,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\n\nxi = value1*k1 + xi*(1-k1);\nyi = value2*(1-k1) + yi*k1;\n\nx = .5 + 5*xi;\ny = .5 + 5*yi;\n\na = bass_att + mid_att + treb_att;"},{"baseVals":{"enabled":1,"sep":20,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":5.90461,"smoothing":0,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\nx = sample ;\n\nval = value1;\ny = val * (.25-(sample-.5)*(sample-.5)) + .5;\n\nr = .6; g = 1; b = 1;\na=1;"},{"baseVals":{"usedots":1,"thick":1,"additive":1,"scaling":0.09987,"smoothing":0.4,"r":0,"b":0,"a":0.32,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\nx = sample;\nr = .0; b = .0; g = 1; a = .6;\ny = .5 + value1;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_eel":"fade = .5;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb);\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.14159265358/2;\nq27 = index + 1;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nzoom = 1.0;\nrot = -0.00 * index;\n\nfade = fade*dec_med + pow(0.996, 30/fps) * (1-dec_med);\nq32 = fade;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 zz_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qa.xy;\n  tmpvar_2[1u] = _qa.zw;\n  zz_1 = (((\n    (uv - vec2(0.5, 0.5))\n   * texsize.xy) * (0.015 * q27)) * tmpvar_2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((q32 * texture (sampler_main, \n    (uv + ((clamp (\n      (sin(zz_1) / cos(zz_1))\n    , vec2(-20.0, -20.0), vec2(20.0, 20.0)) * texsize.zw) * 8.0))\n  ).xyz) + (\n    (0.03 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy)))\n  .xyz * \n    (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  )) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((tmpvar_1.xyz + clamp (\n    (3.0 * (((texture (sampler_blur1, \n      (uv - (0.01 * tmpvar_1.xyz).xy)\n    ).xyz * scale1) + bias1) - vec3(0.1, 0.1, 0.2)))\n  , 0.0, 1.0)) * 1.3);\n  ret = tmpvar_2.xyz;\n }"}