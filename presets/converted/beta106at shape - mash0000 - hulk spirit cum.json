{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"rad":0.20068,"tex_zoom":4.32548},"init_eqs_eel":"","frame_eqs_eel":"ba=bass-.9;\ntr=treb-.9;\nmi=mid-.9;\n\nrad=(ba+tr+mi)*.333;\nss=ss+mi*.5;\nss=if(above(8,ss),if(below(3,ss),ss,8),3);\naa=aa+.01*(bass+bass_att+treb+treb_att-3.5);\nsides=ss;\nang=aa;\n\ntextured=if(below(1.3,treb),0,1);\nrr=rr+ba*.4;\ngg=gg+tr*.4;\nbb=bb+mi*.4;\nr=rr-.5*gg;\nb=gg-.5*bb;\ng=bb-.5*rr;\nr2=b;\nb2=g;\ng2=r;\nx=q3;\ny=q4;\nt3=x;\nt4=y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"ff=ff+2.7;\nbb=bb+bass+mid+treb;\nbt=bb/ff;\nbeat=above(bass,bt);\nbeathard=if(beat,bass-bt,0);\nmonitor=t3;\ndecay=1;\nq1=beat;\nq2=beathard;\nwrap=1;\n\n\ncx=1-q3;\ncy=1-q4;\nba=bass-.9;\ntr=treb-.9;\nmi=mid-.9;\nxx=xx+ba*.01-tr*.001;\nyy=yy+tr*.01-ba*.001;\nxx=if(above(1,xx),if(below(0,xx),xx,1),0);\nyy=if(above(1,yy),if(below(0,yy),yy,1),0);\n\nq3=xx;\nq4=yy;","pixel_eqs_eel":"dx=if(below(x,q3),abs(y)*.1,0)*q1;\ndy=if(below(x,q3),abs(y)*.1*(sin(bass*3.14+treb*3.14)),0)*(1-q1);\nrot=if(above(x,q3),-abs(y)*.1+x*q2*sin(bass),rot);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  ).y * 1280.0) * texsize.z);\n  tmpvar_2.y = (((\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  ).y * 1024.0) * texsize.w);\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.005))).y;\n  ret_1 = (ret_1 + ((\n    (ret_1 - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\n   * 0.3) - 0.05));\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.1));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":""}