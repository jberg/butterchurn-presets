{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.474,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.8,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":7,"additive":1,"num_inst":1024,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0,"g":1,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"a.max_age=0;a.n=0;a.x0=0;a.y0=0;a.z0=0;a.rad0=0;","frame_eqs_str":"a.max_age=a.reg00;a.n=12*a.instance;a.x0=a.gmegabuf[Math.floor(a.n)];a.y0=a.gmegabuf[Math.floor(a.n+1)];a.z0=a.gmegabuf[Math.floor(a.n+2)];.00001<Math.abs(-100>a.z0?1:0)?(a.rad=0,a.gmegabuf[Math.floor(a.n+8)]=a.max_age):(a.rad0=div(pow(1-div(a.gmegabuf[Math.floor(a.n+8)],a.max_age),.2),a.z0)*a.gmegabuf[Math.floor(a.n+7)]+.01,a.rad=.032*Math.abs(a.rad0),a.x=.5+div(a.x0,a.z0),a.y=.5+div(a.y0,a.z0));a.a=1;a.a2=.2;a.g=.8;a.g2=0;a.b=.2*(3<rand(10)?1:0)+.2*(0>a.z0?1:0);a.b2=0;","init_eqs_eel":"","frame_eqs_eel":"max_age = reg00;\nn = instance*12;\n\nx0 = gmegabuf (n);\ny0 = gmegabuf (n+1);\nz0 = gmegabuf (n+2); \nif (z0 < -100, rad = 0; gmegabuf(n+8) = max_age,\n  rad0 = pow(1-gmegabuf(n+8)/max_age,0.2)/z0* gmegabuf(n+7) + 0.01;\n  rad = abs(rad0)*0.032 ;\n\n  x = 0.5 + x0/z0;\n  y = 0.5 + y0/z0;\n);\n\na = 1; a2 = 0.2;\n\ng = .8; g2 = .0;\n//b = (gmegabuf(n+7)>0)*0.04/abs(rad0); b2 = 0;\nb = (rand(10)>3)*0.2 + 0.2*(z0<0); b2 =0;\n\n"},{"baseVals":{"sides":12,"thickoutline":1,"x":0.9,"y":0.7,"rad":0.02958,"tex_zoom":0.9355,"g":0.5,"b":1,"g2":0,"b2":0.4,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = 1;","init_eqs_eel":"","frame_eqs_eel":"a = 1;"},{"baseVals":{"sides":44,"textured":1,"rad":1.397,"tex_zoom":0.44799,"a":0.5,"r2":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"thickoutline":1,"x":0.65,"y":0.8,"rad":0.14595,"tex_zoom":0.3357,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q22;","init_eqs_eel":"","frame_eqs_eel":"a = q22;"}],"waves":[{"baseVals":{"enabled":1,"samples":160,"sep":20,"usedots":1,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6},"init_eqs_str":"a.q32=0;","frame_eqs_str":"","point_eqs_str":"a.x=div(rand(100),100);a.y=.5-div(1-.7,a.q32)-.15*(div(rand(100),100)-.5);a.a=.15;a.r=0;a.b=1;a.g=0;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(100)/100;\ny =  0.5 - (1-0.7)/q32- 0.15*(rand(100)/100-0.5);\na = 0.15;\n\nr= 0; b=1; g = 0;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.max_age=0;a.ind2=0;a.n=0;a.free=0;a.high=0;a.index=0;a.tht=0;a.v00=0;a.yobf=0;a.dt=0;a.y0=0;a.q1=0;a.dec_med=0;a.q5=0;a.ran1_=0;a[\"new\"]=0;a.push=0;a.new1=0;a.is_beat=0;a.q24=0;a.vol_alt=0;a.dec_slow=0;a.ran2=0;a.ind1=0;a.q10=0;a.v0=0;a.med=0;a.beat=0;a.vol=0;a.peak=0;a.dec_fast=0;a.q27=0;a.bass1=0;a.q3=0;a.t0=0;a.vol_=0;a.dec=0;a.m=0;a.ran1=0;a.q32=0;a.phi=0;a.air=0;a.max_age=4.5;a.reg00=a.max_age;for(var b=a.n=0;12288>b;b++)a.gmegabuf[Math.floor(a.n)]=a.max_age-1+rand(2),\na.n+=1;a.q9=2*(rand(25)-10);a.q3=div(rand(100),100);a.q4=div(rand(100),100);","frame_eqs_str":"a.dec_fast=1-div(8.8,a.fps);a.dec_med=1-div(6,a.fps);a.dec_slow=1-div(1.6,a.fps);a.vol=div(a.bass+a.med+a.treb,3);a.vol_=a.vol_*a.dec_slow+(1-a.dec_slow)*a.vol;a.beat=a.vol;a.is_beat=above(a.beat,1+4*a.peak)*above(a.time,a.t0+.2);a.t0=.00001<Math.abs(a.is_beat)?a.time:a.t0;a.peak=.00001<Math.abs(a.is_beat)?a.beat:a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,1024);a.ind1=a.ind1*a.dec_med+(1-a.dec_fast)*a.index;a.ind2=a.ind2*a.dec_med+(1-a.dec_fast)*a.ind1;a.q27=a.ind2;a.q24=\na.is_beat;a.ran1=.00001<Math.abs(a.is_beat)?div(rand(100),100)-.5:a.ran1;a.ran2=.00001<Math.abs(a.is_beat)?div(rand(100),50)+1:a.ran2;a.ran1_=a.dec_med*a.ran1_+(1-a.dec_med)*a.ran1;a.high=2.9<a.ran2?1:0;a.q5=a.ran1_;a.n=0;a.push=Math.max(0,a.vol-a.vol_alt)*a.vol_;a.air=.1*a.dt;a.dt=div(1,a.fps);a.v00=pow(a.push,.25)+.4;a.free=512;a[\"new\"]=0;a.y0=-.68;a.yobf=a.y0+.1;for(var b=0;512>b;b++)a.megabuf[Math.floor(a.n)]=a.gmegabuf[Math.floor(a.n)],a.megabuf[Math.floor(a.n+1)]=a.gmegabuf[Math.floor(a.n+1)],\na.megabuf[Math.floor(a.n+2)]=a.gmegabuf[Math.floor(a.n+2)],.00001<Math.abs(a.gmegabuf[Math.floor(a.n+8)]>a.max_age?1:0)?.00001<Math.abs(band(a.push>=10*a.dt*bnot(a.high)?1:0,200>a[\"new\"]?1:0))?(--a.free,a[\"new\"]+=1,a.tht=div(rand(100),500)*(1+1.5*a.high),a.phi=rand(12),a.v0=a.v00*(1+div(rand(10),40)),a.gmegabuf[Math.floor(a.n)]=1.7*a.ran1,a.gmegabuf[Math.floor(a.n+1)]=a.y0+2.2*a.high,a.gmegabuf[Math.floor(a.n+2)]=2,a.gmegabuf[Math.floor(a.n+3)]=a.v0*Math.sin(a.tht)*Math.cos(a.phi),a.gmegabuf[Math.floor(a.n+\n4)]=a.v0*Math.cos(4*a.tht)*(1-1.5*a.high),a.gmegabuf[Math.floor(a.n+5)]=a.v0*Math.sin(a.tht)*Math.sin(a.phi)*1.5*a.vol,a.gmegabuf[Math.floor(a.n+7)]=0,a.gmegabuf[Math.floor(a.n+8)]=div(rand(100),100)):0:(--a.free,a.gmegabuf[Math.floor(a.n)]+=a.gmegabuf[Math.floor(a.n+3)]*a.dt,a.gmegabuf[Math.floor(a.n+1)]+=a.gmegabuf[Math.floor(a.n+4)]*a.dt,a.gmegabuf[Math.floor(a.n+2)]+=a.gmegabuf[Math.floor(a.n+5)]*a.dt,a.gmegabuf[Math.floor(a.n+3)]*=1-a.air,a.gmegabuf[Math.floor(a.n+4)]*=1-a.air,a.gmegabuf[Math.floor(a.n+\n4)]-=.8*a.dt,a.gmegabuf[Math.floor(a.n+5)]*=1-a.air,a.gmegabuf[Math.floor(a.n+7)]=(a.gmegabuf[Math.floor(a.n+1)]>a.yobf?1:0)*Math.min(1,18*(a.gmegabuf[Math.floor(a.n+1)]-a.yobf)),.00001<Math.abs(band(a.gmegabuf[Math.floor(a.n+1)]<a.yobf?1:0,0>a.gmegabuf[Math.floor(a.n+4)]?1:0))?a.gmegabuf[8]=a.max_age:0,a.gmegabuf[Math.floor(a.n+8)]+=a.dt),a.n+=12;for(b=a.n=0;512>b;b++)a.m=6132+a.n,a.gmegabuf[Math.floor(a.m)]=div(a.gmegabuf[Math.floor(a.n)]+a.megabuf[Math.floor(a.n)],2),a.gmegabuf[Math.floor(a.m+\n1)]=div(a.gmegabuf[Math.floor(a.n+1)]+a.megabuf[Math.floor(a.n+1)],2),a.gmegabuf[Math.floor(a.m+2)]=div(a.gmegabuf[Math.floor(a.n+2)]+a.megabuf[Math.floor(a.n+2)],2),a.gmegabuf[Math.floor(a.m+7)]=a.gmegabuf[Math.floor(a.n+7)],a.gmegabuf[Math.floor(a.m+8)]=a.gmegabuf[Math.floor(a.n+8)],a.n+=12;a.dec=.00001<Math.abs(a.bass>a.bass1?1:0)?.5:.9;a.bass1=a.bass1*a.dec+a.bass*(1-a.dec);a.q1=Math.min(1,Math.max(0,a.bass1-1.5)*Math.abs(a.q3-.5)*3);a.q10=Math.max(a.vol_-.1,.1);a.vol_alt=a.vol;a.q32=a.aspecty;\na.new1=.00001<Math.abs(0<a[\"new\"]?1:0)?a[\"new\"]:a.new1;a.monitor=a.new1;","pixel_eqs_str":"a.dy=-.007*a.y;a.warp=0;a.rot=div(.025*Math.sin(a.q27+7*a.x+0*a.y)*.2,Math.abs(a.y-.7)+.1)*a.q10;a.zoom=1.003+.2*Math.max(0,a.y-.7);","init_eqs_eel":"max_age =  4.5; // Sekunden\nreg00 = max_age;\n\nn = 0;\nloop (12*1024, gmegabuf(n) = max_age-1 + rand(2); n+=1);\n\n\nq9 = (rand(25)-10)*2;\nq3 = rand (100)/100;\nq4 = rand (100)/100;\n\n//q2 = q3 = q4 = 0;\n//record\n// 0 : xpos\n// 1 : ypos\n// 2 : zpos\n// 3 :vx\n// 4 :vy\n// 5 :vz\n\n\n// 8 : age","frame_eqs_eel":"dec_fast = 1 - 0.22*40/fps;\ndec_med  = 1 - 0.15*40/fps;\ndec_slow = 1 - 0.04* 40/fps;\n\nvol = (bass+med+treb)/3;\nvol_ = vol_*dec_slow + (1-dec_slow)*vol;\nbeat = vol;\nis_beat = above(beat, 1+peak*4) * above (time, t0+.2);\nt0   = if (is_beat,time,t0);\npeak = if (is_beat, beat, peak*dec_med);\n\nindex = (index + is_beat) %1024;\nind1 = ind1*dec_med + (1-dec_fast)*index;\nind2 = ind2*dec_med + (1-dec_fast)*ind1;\nq27 = ind2;\nq24 = is_beat;\n\n//Partikel\nran1 = if (is_beat, rand(100)/100-0.5, ran1);\nran2 = if (is_beat, rand(100)/50+1, ran2);\nran1_ = dec_med * ran1_ + (1-dec_med)*ran1;\nhigh = ran2 > 2.9;\nq5 = ran1_;\n\nn = 0;\npush = max(0,vol-vol_alt)*vol_; air = 0.1*dt; \ndt = 1/fps;\nv00 = pow(push,0.25)+0.4; Free = 512; New = 0;\n\ny0 = -0.68; yobf = y0+0.1;\nloop (512,\n   megabuf (n) = gmegabuf (n);\n   megabuf (n+1) = gmegabuf (n+1);\n   megabuf (n+2) = gmegabuf (n+2);\n  if (gmegabuf(n+8) > max_age,\n    if (band(push >= dt*10 * !high,New < 200), \n    Free -= 1; New +=1;\n    // Init Neues Partikel\n     Tht = rand (100) / 500 * (1+high*1.5);\n     Phi   = rand (12);\n     v0 = v00 * (1 + rand(10)/40);\n     gmegabuf (n) = ran1*1.7;\n     gmegabuf (n+1) = y0 + 2.2 * high;\n     gmegabuf (n+2) = 2;\n     gmegabuf (n+3) = v0*sin(Tht) * cos(Phi);\n     gmegabuf (n+4) = v0*cos(4*Tht) * (1-high*1.5);\n     gmegabuf (n+5) = v0*sin(Tht)*sin(Phi)*1.5*vol;\n     gmegabuf (n+7) = 0;\n     gmegabuf (n+8) = rand(100)/100;,0)\n  ,\n  //Integration\n   Free -= 1;\n   gmegabuf (n)   += gmegabuf(n+3)*dt;\n   gmegabuf (n+1) += gmegabuf(n+4)*dt;\n   gmegabuf (n+2) += gmegabuf(n+5)*dt;\n\n   gmegabuf (n+3) *= (1-air);\n   gmegabuf (n+4) *= (1-air);\n   gmegabuf (n+4) -= 0.8*dt;\n   gmegabuf (n+5) *= (1-air);\n   gmegabuf (n+7) = (gmegabuf(n+1)>yobf) * min(1,18*(gmegabuf(n+1)-yobf));\n   if (band(gmegabuf(n+1)<yobf,gmegabuf(n+4)<0),gmegabuf(8) = max_age,0);\n//  gmegabuf(n+7)=1;\n   gmegabuf (n+8) += dt;);\nn += 12);\n  \n//Kopien\nn = 0;\nloop (512,\n  m = 511*12+n;\n  gmegabuf (m) = (gmegabuf(n) + megabuf(n))/2;  \n  gmegabuf (m+1) = (gmegabuf(n+1) + megabuf(n+1))/2;  \n  gmegabuf (m+2) = (gmegabuf(n+2) + megabuf(n+2))/2;  \n  gmegabuf (m+7) = gmegabuf(n+7);  \n  gmegabuf (m+8) = gmegabuf(n+8);  \nn += 12);\n\n\n\ndec = if (bass>bass1,0.5,0.9);\nbass1 = bass1*dec + bass*(1-dec);\nq1 = min(1,max(0,bass1-1.5) * abs(q3-0.5)*3);\n\nq10 = max (vol_-0.1,0.1);\nvol_alt = vol;\n\n\nq32 = aspecty;\n\n\nnew1 = if (new>0,new,new1);\n\nmonitor = New1;","pixel_eqs_eel":"dy = -.007*y;\nwarp =.0;\nrot = .025*sin(q27+x*7+y*0)*0.2/(abs(y-0.7)+0.1) * q10;// * (1-2*(y>0.7));\nzoom = 1.003 + 0.2*max(0,y-0.7);","warp":"vec2 ver;\nfloat xlat_mutablecloud;\nvec2 xlat_mutabledz;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablez;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.y = 0.0;\n  tmpvar_1.x = texsize.z;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.0;\n  tmpvar_2.y = texsize.w;\n  ver = (tmpvar_2 * 2.0);\n  vec3 ret_3;\n  xlat_mutabledz.x = (2.0 * dot (vec3((texture (sampler_main, \n    (uv + tmpvar_1)\n  ).z - texture (sampler_main, \n    (uv - tmpvar_1)\n  ).z)), vec3(0.32, 0.49, 0.29)));\n  xlat_mutabledz.y = (2.0 * dot (vec3((texture (sampler_main, \n    (uv + ver)\n  ).z - texture (sampler_main, \n    (uv - ver)\n  ).z)), vec3(0.32, 0.49, 0.29)));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q3;\n  tmpvar_4.y = (0.4 + (q4 * 0.4));\n  xlat_mutableuv1 = (uv_orig - tmpvar_4);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv_orig);\n  xlat_mutablez = ((0.8 * (xlat_mutableuv1.y - 0.4)) - (mix (tmpvar_5.x, \n    ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1)\n  .x, 0.5) * 0.03));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (xlat_mutableuv1.x * xlat_mutablez);\n  tmpvar_6.y = xlat_mutablez;\n  vec2 tmpvar_7;\n  tmpvar_7.x = 0.0;\n  tmpvar_7.y = (-(time) * 0.014);\n  xlat_mutableuv2 = (tmpvar_6 + tmpvar_7);\n  vec2 tmpvar_8;\n  tmpvar_8.x = 0.0;\n  tmpvar_8.y = (time * 0.004);\n  vec2 uvi_9;\n  uvi_9 = ((xlat_mutableuv2 * 1.5) + tmpvar_8);\n  float zv_10;\n  zv_10 = (0.002 * time);\n  xlat_mutablecloud = (1.0 - (1.5 * abs(\n    (texture (sampler_noise_hq, ((xlat_mutableuv2 + (0.07 * \n      abs((((\n        (dot (texture (sampler_noise_hq, uvi_9), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\n          (uvi_9 * 2.0)\n         + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\n       + \n        (dot (texture (sampler_noise_hq, ((uvi_9 * 4.0) + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\n      ) + (\n        dot (texture (sampler_noise_hq, ((uvi_9 * 8.0) + zv_10)), vec4(0.32, 0.49, 0.29, 0.0))\n       / -8.0)) - 1.0))\n    )) / 2.0)) - 0.5)\n  ))).x;\n  xlat_mutablecloud = (xlat_mutablecloud * clamp ((\n    (texture (sampler_noise_hq, (xlat_mutableuv2 * vec2(2.0, 0.5))).x + 0.5)\n   - \n    (3.0 * abs(xlat_mutableuv2.x))\n  ), 0.0, 1.0));\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.0;\n  tmpvar_11.y = ((-0.01 * time) * (0.125 * float(\n    int((8.0 * pow (xlat_mutablecloud, 4.0)))\n  )));\n  float tmpvar_12;\n  tmpvar_12 = (texture (sampler_noise_hq, (18.0 * (\n    (xlat_mutableuv2 + (0.05 * xlat_mutablecloud))\n   + tmpvar_11))) - 0.75).x;\n  xlat_mutablecloud = (xlat_mutablecloud * (1.0 + (\n    (0.2 * tmpvar_12)\n   * \n    (xlat_mutablecloud * xlat_mutablecloud)\n  )));\n  ret_3.x = ((0.3 * xlat_mutablecloud) + (0.7 * tmpvar_5.xyz)).x;\n  xlat_mutableuv1 = (uv - vec2(0.0, 0.71));\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_blur1, uv);\n  float tmpvar_14;\n  tmpvar_14 = clamp (((12.0 * \n    (((10.0 * xlat_mutableuv1.y) + ((\n      (tmpvar_13.xyz * scale1)\n     + bias1).x / 2.0)) - 1.0)\n  ) + tmpvar_12), 0.0, 1.0);\n  xlat_mutableuv1 = (uv - 0.7);\n  ret_3.z = (((\n    ((((4.0 * tmpvar_14) * (1.0 - tmpvar_14)) * clamp ((tmpvar_5.x - 0.2), 0.0, 1.0)) + texture (sampler_main, (uv + (xlat_mutabledz * 0.003))).z)\n   - \n    (0.03 * sqrt(dot (xlat_mutabledz, xlat_mutabledz)))\n  ) - (\n    pow (((tmpvar_13.xyz * scale1) + bias1).z, 8.0)\n   * 0.2)) - 0.01);\n  ret_3.y = (texture (sampler_main, mix (uv, uv_orig, vec2(0.5, 0.5))).y * (0.85 - (0.2 * \n    ((tmpvar_13.xyz * scale1) + bias1)\n  .y)));\n  ret_3.x = (ret_3.x + ((texture (sampler_noise_lq, \n    (2.0 * xlat_mutableuv2)\n  ) * 0.08) * clamp (\n    (1.0 - (3.0 * ret_3.x))\n  , 0.0, 1.0)).x);\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_3;\n  ret = tmpvar_15.xyz;\n }","comp":"float dunk;\nfloat xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nfloat xlat_mutablesmask;\nfloat xlat_mutablesmoke;\nvec2 xlat_mutableuv1;\nfloat xlat_mutablez;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.y = 0.0;\n  tmpvar_1.x = texsize.z;\n  dunk = ((rand_preset.x * 0.3) + 0.1);\n  vec2 uv_2;\n  vec3 ret_3;\n  uv_2 = (uv + (texsize.zw / 2.0));\n  xlat_mutableuv1 = (uv_2 - vec2(0.0, 0.7));\n  xlat_mutablesmask = (((10.0 * xlat_mutableuv1.y) + (\n    ((texture (sampler_blur1, uv_2).xyz * scale1) + bias1)\n  .x / 2.0)) - 1.0);\n  float tmpvar_4;\n  tmpvar_4 = clamp (((2.0 * xlat_mutablesmask) + 0.3), 0.0, 1.0);\n  xlat_mutablenoise = ((3.0 * (1.0 - tmpvar_4)) * texture (sampler_noise_lq, ((xlat_mutableuv1 * 1.5) + (rand_frame * 0.2).xy)).x);\n  float tmpvar_5;\n  tmpvar_5 = clamp (((12.0 * xlat_mutablesmask) + (xlat_mutablenoise / 2.0)), 0.0, 1.0);\n  xlat_mutablez = ((0.35 / xlat_mutableuv1.y) + (xlat_mutablenoise / 2.0));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\n  xlat_mutablers0.y = xlat_mutablez;\n  vec2 tmpvar_6;\n  tmpvar_6.x = (xlat_mutablers0.x + (time / 4.0));\n  tmpvar_6.y = (xlat_mutablez + (time * 0.21));\n  xlat_mutablers = (tmpvar_6 * tmpvar_5);\n  float t_7;\n  t_7 = ((texture (sampler_main, uv_2).x - dunk) * (1.0 - (tmpvar_5 * \n    pow (uv_2.y, 4.0)\n  )));\n  float tmpvar_8;\n  tmpvar_8 = clamp (((1.2 * t_7) - 0.2), 0.0, 1.0);\n  t_7 = tmpvar_8;\n  vec3 tmpvar_9;\n  tmpvar_9.x = tmpvar_8;\n  tmpvar_9.y = (tmpvar_8 * tmpvar_8);\n  tmpvar_9.z = pow (tmpvar_8, 8.0);\n  vec3 tmpvar_10;\n  tmpvar_10 = clamp ((tmpvar_9 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  float t_11;\n  t_11 = ((texture (sampler_blur2, (uv_2 + 0.03)).xyz * scale2) + bias2).x;\n  float tmpvar_12;\n  tmpvar_12 = clamp (((1.2 * t_11) - 0.2), 0.0, 1.0);\n  t_11 = tmpvar_12;\n  vec3 tmpvar_13;\n  tmpvar_13.x = tmpvar_12;\n  tmpvar_13.y = (tmpvar_12 * tmpvar_12);\n  tmpvar_13.z = pow (tmpvar_12, 8.0);\n  vec3 tmpvar_14;\n  tmpvar_14 = clamp ((tmpvar_13 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  ret_3 = ((tmpvar_10 * (tmpvar_10 * \n    (3.0 - (2.0 * tmpvar_10))\n  )) + ((\n    (((1.0 - texture (sampler_main, uv_2).x) * (1.0 - tmpvar_5)) * abs((texture (sampler_main, (uv_2 - tmpvar_1)).x - texture (sampler_main, (uv_2 + tmpvar_1)).x)))\n   * \n    (tmpvar_14 * (tmpvar_14 * (3.0 - (2.0 * tmpvar_14))))\n  ) * q9));\n  xlat_mutablesmoke = ((texture (sampler_blur1, uv_2).xyz * scale1) + bias1).z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = uv_2.x;\n  tmpvar_15.y = ((0.85 - xlat_mutableuv1.y) + ((\n    ((texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))) - 1.0)\n  .x * 0.2) * q10));\n  float t_16;\n  t_16 = ((texture (sampler_main, tmpvar_15).x + texture (sampler_main, tmpvar_15).y) - dunk);\n  float tmpvar_17;\n  tmpvar_17 = clamp (((1.2 * t_16) - 0.2), 0.0, 1.0);\n  t_16 = tmpvar_17;\n  vec3 tmpvar_18;\n  tmpvar_18.x = tmpvar_17;\n  tmpvar_18.y = (tmpvar_17 * tmpvar_17);\n  tmpvar_18.z = pow (tmpvar_17, 8.0);\n  vec3 tmpvar_19;\n  tmpvar_19 = clamp ((tmpvar_18 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  ret_3 = (ret_3 + ((\n    (tmpvar_19 * (tmpvar_19 * (3.0 - (2.0 * tmpvar_19))))\n   * tmpvar_5) * 0.85));\n  float tmpvar_20;\n  tmpvar_20 = ((3.6 * tmpvar_4) * (1.0 - tmpvar_4));\n  ret_3 = (ret_3 * (clamp (\n    (1.0 - (xlat_mutablesmoke * (1.0 - tmpvar_20)))\n  , 0.0, 1.0) * clamp (\n    (1.0 - (tmpvar_20 * float((rand_preset.x > 0.5))))\n  , 0.0, 1.0)));\n  vec3 tmpvar_21;\n  tmpvar_21.z = 0.0;\n  tmpvar_21.xy = (((texture (sampler_blur3, uv_2).xyz * scale3) + bias3).xy * vec2(3.0, 5.0));\n  ret_3 = (ret_3 + ((xlat_mutablesmoke * \n    dot (tmpvar_21, vec3(0.32, 0.49, 0.29))\n  ) * vec3(1.0, 0.84, 0.62)));\n  float tmpvar_22;\n  tmpvar_22 = clamp (((1.2 * \n    clamp (texture (sampler_main, uv_2).y, 0.0, 1.0)\n  ) - 0.2), 0.0, 1.0);\n  vec3 tmpvar_23;\n  tmpvar_23.x = tmpvar_22;\n  tmpvar_23.y = (tmpvar_22 * tmpvar_22);\n  tmpvar_23.z = pow (tmpvar_22, 8.0);\n  vec3 tmpvar_24;\n  tmpvar_24 = clamp ((tmpvar_23 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  ret_3 = (ret_3 + (tmpvar_24 * (tmpvar_24 * \n    (3.0 - (2.0 * tmpvar_24))\n  )));\n  float tmpvar_25;\n  tmpvar_25 = clamp (0.52, 0.0, 1.0);\n  vec3 tmpvar_26;\n  tmpvar_26.x = tmpvar_25;\n  tmpvar_26.y = (tmpvar_25 * tmpvar_25);\n  tmpvar_26.z = pow (tmpvar_25, 8.0);\n  vec3 tmpvar_27;\n  tmpvar_27 = clamp ((tmpvar_26 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  vec3 tmpvar_28;\n  tmpvar_28 = mix (clamp (ret_3, 0.0, 1.0), (tmpvar_27 * (tmpvar_27 * \n    (3.0 - (2.0 * tmpvar_27))\n  )), vec3((pow (\n    ((1.0 - uv_2.y) - ((uv_2.x - 0.5) * (q3 - 0.5)))\n  , 4.0) * q1)));\n  ret_3 = tmpvar_28;\n  vec4 tmpvar_29;\n  tmpvar_29.w = 1.0;\n  tmpvar_29.xyz = tmpvar_28;\n  ret = tmpvar_29.xyz;\n }","warp_hlsl":"float cloud;\nfloat2 uv1,uv2,uv20, uv3,dz;\nfloat  z, sun, tmp, mask, mask2, smask;\nstatic float2 hor = float2 (texsize.z,0)*1;\nstatic float2 ver = float2 (0,texsize.w)*2;\n\nfloat noise4 (float2 uvi) { float n1,n2,n3,n4,n5,zv; zv = 0.002*time;\n  n1 = lum(tex2D(sampler_noise_hq, (uvi)));\n  n2 = lum(tex2D(sampler_noise_hq, (uvi*2+zv)));\n  n3 = lum(tex2D(sampler_noise_hq, (uvi*4+zv)));\n  n4 = lum(tex2D(sampler_noise_hq, (uvi*8+zv)));\n  return abs(n1 + n2/2 + n3/4 + n4/-8  -1);}\n\nfloat dist (float2 uvi) {return .8*(uvi.y-.4);}\n\nshader_body {\n\nfloat2 dither = 0;\ndz.x = 2*lum(tex2D(sampler_main,uv+hor+dither).b - tex2D(sampler_main,uv-hor+dither).b);\ndz.y = 2*lum(tex2D(sampler_main,uv+ver+dither).b - tex2D(sampler_main,uv-ver+dither).b);\n\nuv1 = uv_orig-float2 (q3,0.4 + q4*0.4);\nz = dist(uv1) -lerp(GetPixel(uv_orig).r,GetBlur1(uv_orig).r,.5)*.03;\nuv2 = float2 (uv1.x*pow(z,1),z);\nuv2 += float2(0,-time*.014);\n\nuv3 = uv2 +.07*noise4(uv2*1.5+float2(0,time*.004)); \ncloud = 1-1.5*abs(tex2D (sampler_noise_hq,uv3/2)-.5);\n\nfloat glow = tex2D (sampler_noise_hq,uv2*float2(2,.5));\nglow = saturate(glow+.5 -3*abs(uv2.x));\ncloud *= glow;\n  \nfloat k1 = 1.0/8.0*int(8*pow(cloud,4));\nfloat noise = tex2D (sampler_noise_hq,18*(uv2+.05*cloud+float2(0,-.01*time*k1)))-.75;\ncloud *= 1+.2*noise*pow(cloud,2)  ;\n\nfloat k5 = .7;\nret.r = (1-k5)*cloud + k5*GetPixel(uv_orig);\n\n//in comp fast exakt kopieren !!!!!\nuv1 = uv- float2 (0,.71);\nsmask =  10*uv1.y+GetBlur1(uv).r/2-1;\nmask2=  saturate(smask);\n\n//noise = 4*mask2*(1-mask2)*(tex2D (sampler_noise_hq,uv1*8+rand_frame).x-0.5);\nmask =         saturate(12*smask+noise);\n\nuv1 = uv-.7;\nret.b = 4*mask*(1-mask)* saturate(GetPixel(uv_orig).r-0.2) \n       + GetPixel(uv+dz*.003).b -.03*length(dz) - pow(GetBlur1(uv).b,8)*.2 - 0.01 ;\n\nret.g = GetPixel(lerp(uv,uv_orig,0.5)).g* (0.9 - 0.15*tex2D(sampler_noise_lq,uv)) ;\nret.g = GetPixel(lerp(uv,uv_orig,0.5)).g* (0.85-0.2*GetBlur1(uv).g) ;\n\nret.r += tex2D(sampler_noise_lq,2*uv2)*0.08 * saturate(1-3*ret.r); //#\n\n}\n\n","comp_hlsl":"#define sat saturate\nfloat2 dz, uv1, uv2, rs0, rs, uv_wat;\nfloat  z,smoke, noise, water, smask, mask, mask2;\nstatic const float2 hor = float2 (texsize.z*1,0);\nstatic const float dunk = rand_preset.x*0.3+0.1;\nfloat3 lavcol (float t){ \n  t = sat(1.2*t-.2);\n  return smoothstep(0,.8,float3(t,pow(t,2),pow(t,8)));}\n\n\nshader_body {\nuv += texsize.zw/2;\nuv1 = uv- float2 (0,.7);\nsmask =  10*uv1.y+GetBlur1(uv).r/2-1;\nmask2 =  saturate(2*smask+0.3);\n\nnoise = 3*(1-mask2)*(tex2D (sampler_noise_lq,uv1*1.5+rand_frame*0.2).x);\nmask =         saturate(12*smask+noise/2);\n\nz = .35/(uv1.y) + noise/2;\n\nrs0.x = uv1.x * z; rs0.y = z ;\nrs = float2 (rs0.x+time/4, rs0.y+time*.21)*mask;\nwater = tex2D(sampler_noise_hq,rs) + tex2D(sampler_noise_hq,rs/4-time/8)-1;\n\n//Lava\n\nret = lavcol ((GetPixel(uv).r-dunk)*(1-mask*pow(uv.y,4)));\nret += (1-GetPixel(uv).r)*(1-mask)* abs(GetPixel(uv-hor).r - GetPixel(uv+hor).r) * lavcol(GetBlur2(uv+0.03).r)*q9;\nsmoke = GetBlur1(uv).b;\n\n//Reflektion\nfloat2 uv3 = float2(uv.x,0.85-uv1.y+water*.2*q10);\nret += lavcol(GetPixel(uv3).r+GetPixel(uv3).g-dunk)*(mask)*0.85;\n\nmask = saturate(18*uv1.y-1.2*(1-GetBlur1(uv).r));\nfloat ufer = 3.6*mask2* (1-mask2);\nret *= saturate (1-smoke*(1-ufer)) * saturate(1-ufer * (rand_preset.x > 0.5));\n\n//ret += smoke * float3 (1,0.84,0.62)*0.8;\nret += smoke * lum(GetBlur3(uv).rg*float2(3,5))*float3 (1,0.84,0.62);\n\n//Partikel\nret += lavcol(sat(GetPixel(uv).g));\nret = lerp (sat(ret), lavcol(0.6), pow(1-uv.y-(uv.x-0.5)*(q3-0.5),4)*q1);\n\n\n//ret = GetPixel(uv).g;\n}\nwritten by martin\nEND"}