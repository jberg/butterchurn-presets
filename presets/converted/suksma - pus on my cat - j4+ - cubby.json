{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.01,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.83,"rad":0.54278,"tex_ang":1.5708,"tex_zoom":1.8566,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.17,"rad":0.54278,"tex_ang":4.71239,"tex_zoom":1.8566,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"rad":0.98609,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r=if(above(treb,.4),1,.8);\ng=if(above(mid,.4),1,.8);\nb=if(above(bass,.4),1,.8);\nr2=r;\ng2=g;\nb2=b;\nz=if(above(bass,1.2),z*.95,3.14);\nz=if(above(mid,1.2),-z,z);\ntex_ang=z;\nzz=above(treb,1.3)+zz*.95;\na=zz*.07+.2;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\n//t1 = if(above(vg,1.8),1.8,vg);\nt1=time*.3;\nt5=time*.2;\n//t2=sin(time)*1.5+2;\n//t3=.25;\n//t2=2;\nt4=0;\na=1;\nt2=2.9;","point_eqs_eel":"tm=if(above(yp,0.98),t1,tm);\ntm2=if(above(yp,0.98),t5,tm2);\nex=if(above(yp,0.98),t2,ex);\n//ex=2;\nsp=.01;\nyp=if(above(xp,0.9998),yp+sp,yp);\nxp=if(above(xp,0.9998),0,xp+sp);\nyp=if(above(yp,0.9998),0,yp);\nx=((xp*ex)*.1+.5)-(.05*ex)-t3;\ny=((yp*ex)*.1+.5)-(.05*ex)-t4;\n\n//g=sin(xp*yp*1.506+tm);\n//b=sin(xp*yp*3.142+tm);\n//r=cos(xp*yp*1.506+tm);\n\ng=sin(xp*3.14+tm)*sin(yp*3.14+tm2);\nb=sin(xp*3.14+tm2)*sin(yp*6.28+tm);\nr=1-b;\n\n\n\n\n\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\n//t1 = if(above(vg,1.8),1.8,vg);\nt1=time*.3;\n//t2=sin(time)*1.5+2;\n//t3=.25;\n//t2=sin(time*.071)*1.2+4.1;\nt2=2;\nt3=0;\nt4=0;","point_eqs_eel":"tm=if(above(yp,0.98),t1,tm);\nex=if(above(yp,0.98),t2,ex);\n//ex=2;\nsp=.01;\nyp=if(above(xp,0.9998),yp+sp,yp);\nxp=if(above(xp,0.9998),0,xp+sp);\nyp=if(above(yp,0.9998),0,yp);\nx=((xp*ex)*.1+.5)-(.05*ex)-t3+.001;\ny=((yp*ex)*.1+.5)-(.05*ex)-t4+.001;\n\n//g=sin(xp*yp*1.506+tm);\n//b=sin(xp*yp*3.142+tm);\n//r=cos(xp*yp*1.506+tm);\n\nr=sin(xp*3.14+tm)*sin(yp*3.14+tm);\ng=sin(xp*6.28+tm)*sin(yp*6.28+tm);\nb=.4;\n\n\n\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\n//t1 = if(above(vg,1.8),1.8,vg);\nt1=time*.3;\n//t2=sin(time)*1.5+2;\n//t3=.25;\n//t2=sin(time*.071)*1.2+4.1;\nt2=2;\nt3=0;\nt4=0;","point_eqs_eel":"tm=if(above(yp,0.98),t1,tm);\nex=if(above(yp,0.98),t2,ex);\n//ex=2;\nsp=.01;\nyp=if(above(xp,0.9998),yp+sp,yp);\nxp=if(above(xp,0.9998),0,xp+sp);\nyp=if(above(yp,0.9998),0,yp);\nx=((xp*ex)*.1+.5)-(.05*ex)-t3;\ny=((yp*ex)*.1+.5)-(.05*ex)-t4;\n\n//g=sin(xp*yp*1.506+tm);\n//b=sin(xp*yp*3.142+tm);\n//r=cos(xp*yp*1.506+tm);\n\nr=sin(xp*3.14+tm)*sin(yp*3.14+tm);\ng=sin(xp*6.28+tm)*sin(yp*6.28+tm);\nb=.4;\n\n\n\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .5 + vol;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = tm*.132;\nsxang = 0;\nyang = tm*.153;\nayang = 0;\nzang = tm*.110;\nazang = 0;\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1;\ng = .25+.25*sin(sp);\nb = 0;\na = .5 + (oz+2)*.5;\na = a*below(z,2);\nminrgb = min(r,min(g,b));\nmaxrgb = max(r,max(g,b));\nl = (maxrgb-minrgb)*.5;\ndiff = maxrgb-minrgb;\nsum = maxrgb+minrgb;\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\nh = h*0.1666666;\nh = if(below(h,0),0,if(above(h,1),1,h));\n\nh = h + time*0.05*1.324;\nh = h - int(h);\n\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\ntmpa = 2*l - tmpb;\nhvr = h + .333333;\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\nhvg = h;\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\nhvb = h - .333333;\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\n\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"}],"init_eqs_eel":"batr=bass_att+treb_att;\nnatr=batr;","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nv=2;\nbb = bb - vvb*v;\nmm = mm - vvm*v;\ntt = tt - vvt*v;\nq4 = -bb;\nq5 = -mm;\nq6 = -tt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*5;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\n\n\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nnatr=bass_att+thresh*treb_att;\ncha=abs(batr-natr);\nspik=above(abs(cha-addict),addict);\naddict=(addict+cha)/2;\n\n//effects here\nzoom=zoom+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;\n\n\n//added the rotation effect with the same code just to offer some possibilities, activate it if you dare - goody\n//rot=rot+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;\n\n//zoomexp=2/zoom;\nmv_r=log(thresh)*spik;\nmv_b=abs(spik*cha-1);\nmv_g=sin(time+thresh);\nmv_a=spik*.75;\n\n//end.\nbatr=natr;\nmonitor=log(thresh);\n\n\nwave_r = wave_r + 0.35*sin(3*time) + 0.15*sin(2.5*time);\nwave_g = wave_g + 0.35*sin(2.7*time) + 0.15*sin(2.11*time);\nwave_b = wave_b + 0.35*sin(2.84*time) + 0.15*sin(2.3*time);\n\nwave_mystery=wave_mystery*(addict);\n\n\ncog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);\nocog = below(cog,30000)*cog;\n\n\nq1=batr;\nq2=spik;\n\n\n\n\n\n\n//Hai guiz, you found the secret message. What are you gonna do now?","pixel_eqs_eel":"//Tiles- \n//movement first:\ndxm=.01*sin(time*.41);\ndym=.01*sin(time*.36);\n\n//Now the tiles themselves:\ndx=dxm+.01*sin(x*80+sin(time))+.005*sin(q1*(y*sin(time*.94)));\ndy=dym+.01*sin(y*80+sin(time))+.005*sin(q1*(x*sin(time*.97)));\n//end tiles","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  ) * 0.35));\n  ret_1 = (ret_1 - 0.004);\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.18));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 6.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = dot (((\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_4.y = dot (((\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  ret_2 = (0.5 * ((tmpvar_6.xyz * scale3) + bias3));\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) - 0.01));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\n  ) - 0.01));\n  ret_2 = (ret_2 + 0.75);\n  float tmpvar_8;\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * (\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n   - \n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\n  )), pow (hue_shader, vec3(tmpvar_8)));\n  ret2_1 = ((-0.5 * (\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\n  ret2_1 = (ret2_1 - 0.75);\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (ret2_1, (ret2_1 * (\n    ((tmpvar_6.xyz * scale3) + bias3)\n   - \n    ((tmpvar_7.xyz * scale1) + bias1)\n  )), pow (hue_shader, tmpvar_9));\n  ret2_1 = tmpvar_10;\n  vec3 tmpvar_11;\n  tmpvar_11 = abs((tmpvar_9 - (2.0 * tmpvar_10)));\n  ret_2 = (tmpvar_11 - (0.25 * sqrt(tmpvar_11)));\n  ret_2 = (ret_2 * (ret_2 + (\n    ((bass + mid) + treb)\n   * 0.4)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_2;\n  ret = tmpvar_12.xyz;\n }"}