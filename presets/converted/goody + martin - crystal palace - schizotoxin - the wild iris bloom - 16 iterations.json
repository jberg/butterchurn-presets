{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"x":0.8,"rad":0.24243,"tex_ang":1.88496,"tex_zoom":1.72851,"r":0.8,"g":1,"b":0.5,"a":0.6,"r2":0.9,"g2":0.9,"b2":1,"a2":0.3,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.13,"y":0.19,"rad":0.11045,"tex_ang":3.14159,"tex_zoom":1.71105,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.2,"b":0.2,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":36,"additive":1,"rad":0.18717,"r":0,"g":0.02,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":0.5033,"g":0.6,"b":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\nx0 = .5 + .4 * sin(time/2);\n\nangle = rand(1000)/1000*6.28;\nrad =  rand(1000)/1000;\nrad = rad * rad;\n\nx = x0 + .1*rad*sin(angle);\ny = .5 + .1*rad*cos(angle);\n a = 1-rad;"},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.0;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.33;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.66;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_eel":""}],"init_eqs_eel":"vol = 0; p1 = 0;\nvx = .2; vy = -0.1;\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.98, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\n\nvol = bass_att + treb_att;\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\nq26 = max(atan (vol - v2*.8),.3);\n\nq27 = index + 1;\n\nsw = sw*dec_med + (1-dec_med)*(index2%2);\nq28 = sw;\n\nk1 =  is_beat*bnot(index*20);\nk2 =  is_beat*bnot(index);\n\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_slow * p2+ (1-dec_slow)*p1;\nrott = p2 * 3.1416/2;\nmonitor = k1;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq5 = cos(time/6);\nq6 = -sin(time/6);\nq7 = -q6;\nq8 = q5;\n\nzoom = 1;\nrot = -0;\n\nmovez = movez + .006*(q1+1.1)*30/fps;\nq29 = movez;\nrota = rota + .003*(2-q1)*30/fps;\nq30 = rota;\nq31 = 2 + 16*abs(cos(time/18));\nq32 = cos(time/23)/4;","pixel_eqs_eel":"","warp":"vec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv8;\n shader_body { \n  vec2 uv_1;\n  vec3 xlat_varmod_2;\n  float z_3;\n  vec3 ret_4;\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\n  vec2 x_5;\n  x_5 = (xlat_mutableuv1 * 5.0);\n  float tmpvar_6;\n  tmpvar_6 = (sqrt(dot (x_5, x_5)) + time);\n  xlat_mutablers = clamp (((\n    sin(tmpvar_6)\n   / \n    cos(tmpvar_6)\n  ) * normalize(xlat_mutableuv1)), vec2(-5.0, -5.0), vec2(5.0, 5.0));\n  xlat_mutableuv8 = (sin((xlat_mutableuv1 * \n    (q31 + (rad * 2.0))\n  )) * 7.0);\n  z_3 = (1.0 - cos((8.0 * \n    (sqrt(dot (xlat_mutableuv8, xlat_mutableuv8)) * ((abs(xlat_mutableuv1.x) + abs(xlat_mutableuv1.y)) + q32))\n  )));\n  z_3 = (z_3 * (0.2 * clamp (\n    dot (vec3(z_3), vec3(0.32, 0.49, 0.29))\n  , 0.0, 1.0)));\n  float tmpvar_7;\n  tmpvar_7 = float((z_3 <= 1.0));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_7) * 3.0)\n   * xlat_mutablers.yx) + (\n    ((0.5 * tmpvar_7) * z_3)\n   * \n    sign(z_3)\n  )));\n  mat2 tmpvar_8;\n  vec4 tmpvar_9;\n  tmpvar_9 = (_qb * 0.5);\n  tmpvar_8[uint(0)] = tmpvar_9.xy;\n  tmpvar_8[1u] = tmpvar_9.zw;\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_main, uv_1);\n  vec3 tmpvar_11;\n  tmpvar_11 = (tmpvar_10.xyz + vec3((0.075 * abs(\n    (0.0225 / sqrt((xlat_mutableuv1 * tmpvar_8).x))\n  ))));\n  xlat_varmod_2 = ((0.98 - (texture (sampler_noise_lq, \n    ((50.0 * uv_1) + time)\n  ) - 0.15).xyz) - (tmpvar_10.xyz - (0.5 * \n    ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n  )));\n  ret_4 = (((\n    (1.0/(tmpvar_7))\n   * tmpvar_11) * xlat_varmod_2) + ((tmpvar_7 * tmpvar_11) * xlat_varmod_2));\n  ret_4 = (ret_4 * (vec3(0.96, 0.96, 0.96) - (0.1 * texture (sampler_noise_hq, uv_1)).xyz));\n  vec3 tmpvar_12;\n  tmpvar_12.z = 0.0;\n  tmpvar_12.xy = uv_orig;\n  ret_4 = (ret_4 * (vec3(1.76, 1.64, 1.52) * dot (tmpvar_12, vec3(0.32, 0.49, 0.29))));\n  ret_4 = (ret_4 * 0.86);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_4;\n  ret = tmpvar_13.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  float t_rel_2;\n  float inten_4;\n  float dist_5;\n  float ang2_6;\n  vec3 ret_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_fc_main, uv);\n  ret_7 = tmpvar_8.xyz;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_5 = 0.0;\n  inten_4 = 0.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  t_rel_2 = q29;\n  for (float n_3 = 0.0; n_3 < 16.0; n_3 += 1.0) {\n    ang2_6 = (((6.28 * n_3) / 16.0) + q30);\n    float tmpvar_9;\n    tmpvar_9 = cos(ang2_6);\n    float tmpvar_10;\n    tmpvar_10 = sin(ang2_6);\n    xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\n    xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\n    dist_5 = (1.0 - fract((\n      (n_3 * 16.0)\n     - t_rel_2)));\n    inten_4 = (dist_5 * (1.0 - (dist_5 * dist_5)));\n    xlat_mutableuv3 = ((-0.85 * xlat_mutableuv2) * dist_5);\n    xlat_mutableblur = (((texture (sampler_blur1, \n      fract(xlat_mutableuv3)\n    ).xyz * scale1) + bias1) * vec3(0.5, 0.9, 1.0));\n    xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, \n      (xlat_mutableuv3 * 2.0)\n    ).xyz - xlat_mutableblur) * inten_4));\n  };\n  uv_1 = (uv_1 * (tmpvar_8.xy * uv_orig));\n  ret_7 = (uv_1.x - (tmpvar_8.xyz * uv_1.x));\n  ret_7 = (ret_7 + (xlat_mutableret1 * 16.0));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_7;\n  ret = tmpvar_11.xyz;\n }"}