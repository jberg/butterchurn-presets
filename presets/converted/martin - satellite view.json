{"version":2,"baseVals":{"rating":1,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.232543,"wave_smoothing":0.81,"wave_mystery":0.28,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":0.01,"warpscale":0.01,"zoom":1.001832,"dx":1,"warp":0.01,"sx":0.999997,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":18,"textured":1,"x":0.57,"rad":0.099499,"tex_zoom":3.264423,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"border_b":0,"border_a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":0.476928,"ang":1.130974,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.81,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"shift = 0;\nstep = 0;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\n\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\nis_beat2 = ready * above (time, t0+.2);\nq19 = is_beat2;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.14159265359/2;\n\nq27 = index+1;\nq28 = index2+1;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nmovex = movex +.002*30/fps;\nq30 = movex;\n\nalt = alt * (1-dec_med) + q26*dec_med;\nq26 = q26 - alt;\nstep = step + 1*max(q26,0) + q24 -int(step);\nq30 = step;\nq30 = movex;\n\nlx = lx + .001*30/fps;\nly = ly + .01*30/fps*q2;\nq10 = lx;\nq11 = 0;\n\n\nzoom = (1.0  + .0*rad);\ndx = .0;\ndy = .00;\nrot = .1*q1;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (((q28 - 1.0) * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 86.0)).x;\n  uv_1 = (uv + ((\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .xy * vec2(0.0, 1.0)) + (0.01 * \n    clamp (((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3)), vec2(-18.0, -18.0), vec2(18.0, 18.0))\n  )));\n  uv6_2 = (0.4 * sin((\n    ((tmpvar_3 * 2.0) * q28)\n   + rand_frame.xy)));\n  xlat_mutablemus = (vec3((0.06 / sqrt(\n    dot (uv6_2, uv6_2)\n  ))) * roam_sin.xyz);\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (xlat_mutablemus, vec3(dot (xlat_mutablemus, vec3(0.32, 0.49, 0.29))), vec3(clamp ((0.2 * \n    dot (xlat_mutablemus, vec3(0.32, 0.49, 0.29))\n  ), 0.0, 1.0)));\n  xlat_mutablemus = tmpvar_5;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ((q24 * (\n    (((texture (sampler_main, (\n      ((uv_1 - 0.5) * 1.01)\n     + 0.48)).xyz - (\n      ((texture (sampler_blur2, fract(uv_1)).xyz * scale2) + bias2)\n     * 0.03)) + (0.15 * tmpvar_5)) * 0.97)\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_6.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec3 xlat_mutablemus;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv2_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutablemus = (texture (sampler_main, (0.1 * xlat_mutabledz)).xyz + 0.01);\n  uv2_1 = (uv - 0.5);\n  xlat_mutabledz = vec2(0.0, 0.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q30;\n  float tmpvar_5;\n  tmpvar_5 = (q30 / 2.0);\n  tmpvar_4.y = tmpvar_5;\n  xlat_mutableuv3 = (((0.01999998 * uv2_1) + 0.5) + tmpvar_4);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\n  vec3 tmpvar_6;\n  tmpvar_6 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\n  xlat_mutableneu = ((0.00999999 * tmpvar_6) + (0.99 * dot (tmpvar_6, vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), xlat_mutableneu);\n  vec2 tmpvar_7;\n  tmpvar_7.x = q30;\n  tmpvar_7.y = tmpvar_5;\n  xlat_mutableuv3 = (((1.353333 * uv2_1) + 0.5) + tmpvar_7);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\n  vec3 tmpvar_8;\n  tmpvar_8 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\n  xlat_mutableneu = ((0.6766666 * tmpvar_8) + (0.3233334 * dot (tmpvar_8, vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\n  vec2 tmpvar_9;\n  tmpvar_9.x = q30;\n  tmpvar_9.y = tmpvar_5;\n  xlat_mutableuv3 = (((0.6866666 * uv2_1) + 0.5) + tmpvar_9);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\n  vec3 tmpvar_10;\n  tmpvar_10 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\n  xlat_mutableneu = ((0.3433333 * tmpvar_10) + (0.6566667 * dot (tmpvar_10, vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\n  vec2 tmpvar_11;\n  tmpvar_11.x = q30;\n  tmpvar_11.y = tmpvar_5;\n  xlat_mutableuv3 = (((0.01999998 * uv2_1) + 0.5) + tmpvar_11);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\n  vec3 tmpvar_12;\n  tmpvar_12 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\n  xlat_mutableneu = ((0.00999999 * tmpvar_12) + (0.99 * dot (tmpvar_12, vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ((texture (sampler_main, (uv_orig * 0.8)).xyz + (xlat_mutablemus * 6.0)) + (32.0 * (xlat_mutableret1 * xlat_mutablemus)));\n  ret = tmpvar_13.xyz;\n }"}