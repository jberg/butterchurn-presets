{"version":1,"baseVals":{"rating":4,"decay":0.9,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":1,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_b":0.2,"ob_a":0.5,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.88,"y":0.8,"rad":0.330038,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);\ny = 0.5+ 0.4*sin(0.311*time+0.213*q8);\nang = 3.1415-3.1415*cos(time*0.1389);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.88,"y":0.2,"rad":0.330038,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.212*time+0.1*q8);\ny = 0.5+ 0.4*sin(0.2891*time+0.121*q8);\nang = 3.1415+3.1415*sin(time*0.181);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.12,"y":0.8,"rad":0.330038,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.0932*time+0.421*q6);\ny = 0.5+ 0.4*sin(0.1178*time+0.2135*q6);\nang = 3.1415-3.1415*cos(time*0.1154);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.12,"y":0.2,"rad":0.330038,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.105*time+0.3*q4);\ny = 0.5+ 0.4*sin(0.1267*time+0.323*q4);\nang = 3.1415+3.1415*sin(time*0.2654);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.463735,"smoothing":0},"init_eqs_eel":"//pi\nt8=3.14159265/2;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = sin(bass+0.86*t8);\nt5 = 10+8*cos(time+0.56*t8);","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -2.5+(1.5)*sin(sample);\ny1 = (-1)*cos(t8*nsample);\nz1 = (-1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\nr =sin(abs(x2*sin(time)))*0.5 + 0.5;\nb = sin(abs(y3+sin(0.8765*time)))*0.5 + 0.5;\ng = x2*z2;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.463735,"smoothing":0},"init_eqs_eel":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+0.776*t8);\nt5 = 10+8*cos(time+0.56*t8);\n","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -.75+(1.5)*sin(sample);\ny1 = (1)*cos(t8*nsample);\nz1 = (1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.75*(x4/(1+z4*0.5));\ny=0.5+0.75*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\nr = y2*z2;\nb = z3+y3;\ng = z3/x2;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.463735,"smoothing":0},"init_eqs_eel":"//pi\nt8=3.14159265*1.56;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 12+13*sin(time+2.46*t8);\nt5 = 2+8*cos(time+1.66*t8);\nr = 1;\nb = 0;\ng=0;","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -.5+(2.5)*sin(sample);\ny1 = (1)*cos(t8*nsample);\nz1 = (1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5-1*(x4/(1+z4*0.5));\ny=0.5-1*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\ng=y2;\nb=x2;\nr= z2+z3;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.463735,"smoothing":0},"init_eqs_eel":"//pi\nt8=3.14159265*0.15;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+0.66*t8);\nt5 = 10+8*cos(time+0.66*t8);\n","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -.75+(1.5)*sin(sample);\ny1 = (1)*cos(t8*nsample);\nz1 = (1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.8*(x4/(1+z4*0.5));\ny=0.5+0.8*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\n\nb = z4;\nr=z2-x1;\ng=y2+z2;"}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\nwave_a=0;\ndecay = 0.976;\ndecay=0.99;\n//q8 - bass tracking\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\noldq8 = q8;\nq7 = 0.00004*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\n//q6 = treble tracking\nq6 =  oldq6+ 0.0002*(pow(1+0.1*bass+0.1*bass_att+1.2*treb+0.4*treb_att+0.1*mid+0.1*mid_att,6)/fps);\noldq6 = q6;\n//q4 = midrage tracking\nq4 =  oldq4+ 0.0002*(pow(1+0.1*bass+0.1*bass_att+0.1*treb+0.1*treb_att+1.2*mid+0.4*mid_att,6)/fps);\noldq4 = q4;\n\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\noldq8 = q8;\n\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\noldq8 = q8;\n\nob_size = min(max(0,q7-0.3)+0.005,0.9);\nob_b = max(0,sin(q8*0.2542)*0.2 +0.1);\nob_r = max(0,sin(q8*0.985)*0.4 + 0.2);\nob_g = max(0,sin(q8*0.8711)*0.3 + 0.1);\nob_a =max(0,0.3*(q7-0.2))+0.1;\nib_r = 1-if(ob_size-0.005,0,1);\nib_g = ib_r*(0.21*0.2*sin(time*0.643));\nib_b = ib_r*(0.21*0.2*sin(time*0.853));\nib_a =1;\nmonitor = ob_a;\n//q6 = max(0.0005*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps),1)-1;\n//oldq6 = q6;\nmonitor =q6;","pixel_eqs_eel":"dx=dx+0.008*sin((y*2-1)*meshx)+0.008*sin((y*2-1)*meshx*1.3333);\ndy=dy+0.008*cos((x*2-1)*meshx*1.3333)+0.008*cos((x*2-1)*meshx);","warp":"","comp":""}