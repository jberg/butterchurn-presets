{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":54,"textured":1,"rad":0.49138,"ang":1.5708,"tex_ang":3.14159,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q3;\ny=1-q4;\n\nr = abs(q20);\ng = abs(q21);\nb = abs(q22);\n\nrad = .1*mid;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q5;\ny=1-q6;\n\nrad = .2*bass;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q1;\ny=1-q2;\n\nr = (q23);\ng = (q24);\nb = (q25);\na = q19;\n\nrad = bass*.1;"}],"waves":[{"baseVals":{"sep":51,"spectrum":1,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\ny = rand(1001)*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"spectrum":1,"usedots":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\ny = rand(1001)*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\ny = rand(1001)*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"enabled":1,"sep":51,"usedots":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\ny = rand(1001)*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"}],"init_eqs_eel":"//******** INITIALIZATION *********\n//---------- some global vars, do not change -------------\navg = 0.01;\nq7 = .25; //MyZoom\nq8 =  rand(2.0)-1.0; //fractal modifier\n//q8 = 1; //#\nq16 = 1 + rand(2); //Tele ; rather fish eye\n//q16 = 1; //#\nq18 = rand(0.8)+.1; //brightness balance back/front\nq30 = 1; //logarithmic Z-Dist storage; unused\nq31 =128;\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\ncran0 = rand(1);\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \ntrelx = 0;  trely = 0; trelz = 0;\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\n\n//Find random starting point\nwhile (exec2(\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2; \n\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\n\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\n\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\n\n  //***********BOT*************\n  //Coord. Trans. must exactly match def in warp S. !!!!\n  dist = 0.001;\n  while (exec2(\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\n    uvx += PosX; uvy += PosY; uvz += PosZ;\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\n    loop (7+1,\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \n    );\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\n    dist *= 1.05;\n  ,(dist < 0.6)*(len > 30)));\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \ndec_s = 1-.06*30/fps_;\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\n\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_; \nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\n                   bnot(beat*(rand(100)<30))*RotZ);\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\n\n//Lamp View\nlx = if (beat,rand(150)/200+.15,lx);\nly = if (beat,rand(150)/200+.15,ly);\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\nq1 = lampx; q2 = lampy;\n\n//Position \nDirX= reg26; DirY= reg27; DirZ = reg28;\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \nq4 = PosX; q5 = PosY; q6 = PosZ;\n\nangchg = (.2-dist_)*(dist_ < .2)*2;\ntravel = if (angchg > 0,0,travel+ds);\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\n//v2 = .008;\n//push old RotMat\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \nreg33 =reg23; reg34 =reg24; reg35 =reg25; \nreg36 =reg26; reg37 =reg27; reg38 =reg28; \n\nn = 0; avg = 0;\nloop (5,\n  n = n+1;\n  //new Rot. Mat for infinitesimal angles\n  ran1 = rand(100)/100;\n  ran2 = rand(100)/200-.25;\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\n\n  //pop old RotMat\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \n\n  //Multiply new RotMat by old one\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\n\n  reg20 =q20; reg21 =q21; reg22 =q22;\n  reg23 =q23; reg24 =q24; reg25 =q25;\n  reg26 =q26; reg27 =q27; reg28 =q28;\n\n  //***********BOT*************\n  //Coord. Trans. must exactly match def in warp S. !!!!\n  dist = 0.002;\n  while (exec2(\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\n    uvx += PosX; uvy += PosY; uvz += PosZ;\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\n    loop (7+1,\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \n    );\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\n    dist *= 1.1;\n  ,(dist < 0.6)*(len > 30)));\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\n  avg = avg+abs(megabuf(n)/5);\n); //end loop 5\n\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\n\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\nmonitor = avg;\ndist_ = dist_*dec_s + (1-dec_s)*dist;\n\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; \n//q15 = sign(4*avg - 1)*pow(abs(4*avg - 1), 1.25); // 500*ds*q7; // + ( sign(v1)*sqrt(abs(v1)) + sign(v2)*sqrt(abs(v2)) + sign(v3)*sqrt(abs(v3)) )\nq15 = 4*avg - 1.4;\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\nstart = start * .9;\nq11 = v1; q12 = v2; q13 = v3;\n//forward comp. of Rotation\n\nmonitor = 3.333*q15;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":"float sustain;\nfloat xlat_mutabledist;\nfloat xlat_mutablestruc;\nvec2 xlat_mutableuv1;\nvec3 xlat_mutableuv2;\n shader_body { \n  mat3 tmpvar_1;\n  tmpvar_1[uint(0)].x = q20;\n  tmpvar_1[uint(0)].y = q23;\n  tmpvar_1[uint(0)].z = q26;\n  tmpvar_1[1u].x = q21;\n  tmpvar_1[1u].y = q24;\n  tmpvar_1[1u].z = q27;\n  tmpvar_1[2u].x = q22;\n  tmpvar_1[2u].y = q25;\n  tmpvar_1[2u].z = q28;\n  vec3 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  tmpvar_2.z = q6;\n  sustain = (0.92 + (q14 * 1.5));\n  vec2 uv_3;\n  vec3 ret_4;\n  uv_3 = (((uv - 0.5) * (1.0 - \n    (q10 / (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z))\n  )) + 0.5);\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\n  vec4 tmpvar_5;\n  tmpvar_5 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  if ((tmpvar_5.y > 0.1)) {\n    vec3 tmpvar_7;\n    tmpvar_7 = (tmpvar_5.xyz - vec3(0.5, 0.5, 0.5));\n    vec4 nb2_8;\n    vec4 nb_9;\n    vec2 tmpvar_10;\n    tmpvar_10 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, (uv_3 - texsize.zw)).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.x = (1.0 - (tmpvar_10.y + (0.03125 * \n      (tmpvar_10.x - 0.505)\n    )));\n    vec2 tmpvar_11;\n    tmpvar_11 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, -1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.y = (1.0 - (tmpvar_11.y + (0.03125 * \n      (tmpvar_11.x - 0.505)\n    )));\n    vec2 tmpvar_12;\n    tmpvar_12 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, (uv_3 + texsize.zw)).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.z = (1.0 - (tmpvar_12.y + (0.03125 * \n      (tmpvar_12.x - 0.505)\n    )));\n    vec2 tmpvar_13;\n    tmpvar_13 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.w = (1.0 - (tmpvar_13.y + (0.03125 * \n      (tmpvar_13.x - 0.505)\n    )));\n    vec2 tmpvar_14;\n    tmpvar_14 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, -1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb2_8.x = (1.0 - (tmpvar_14.y + (0.03125 * \n      (tmpvar_14.x - 0.505)\n    )));\n    vec2 tmpvar_15;\n    tmpvar_15 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, 0.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb2_8.y = (1.0 - (tmpvar_15.y + (0.03125 * \n      (tmpvar_15.x - 0.505)\n    )));\n    vec2 tmpvar_16;\n    tmpvar_16 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, 1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb2_8.z = (1.0 - (tmpvar_16.y + (0.03125 * \n      (tmpvar_16.x - 0.505)\n    )));\n    vec2 tmpvar_17;\n    tmpvar_17 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 0.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb2_8.w = (1.0 - (tmpvar_17.y + (0.03125 * \n      (tmpvar_17.x - 0.505)\n    )));\n    vec4 tmpvar_18;\n    tmpvar_18 = min (nb_9, nb2_8);\n    nb_9.zw = tmpvar_18.zw;\n    nb_9.xy = min (tmpvar_18.xy, tmpvar_18.zw);\n    vec2 tmpvar_19;\n    tmpvar_19 = (0.003472222 * floor((\n      (288.0 * texture (sampler_pc_main, uv_3).yz)\n     + vec2(0.5, 0.5))));\n    vec2 tmpvar_20;\n    tmpvar_20.x = (tmpvar_7.x * abs(tmpvar_7.y));\n    tmpvar_20.y = (abs(tmpvar_7.x) * tmpvar_7.y);\n    xlat_mutabledist = (min (min (nb_9.x, nb_9.y), (1.0 - \n      (tmpvar_19.y + (0.03125 * (tmpvar_19.x - 0.505)))\n    )) + (0.01 * tmpvar_20)).x;\n  } else {\n    xlat_mutabledist = tmpvar_6.x;\n  };\n  vec2 tmpvar_21;\n  tmpvar_21 = (0.003472222 * floor((\n    (288.0 * texture (sampler_pc_main, uv_3).yz)\n   + vec2(0.5, 0.5))));\n  xlat_mutabledist = (min (xlat_mutabledist, (1.0 - \n    (tmpvar_21.y + (0.03125 * (tmpvar_21.x - 0.505)))\n  )) - (q10 * 0.8));\n  float tmpvar_22;\n  tmpvar_22 = (xlat_mutabledist + (pow (xlat_mutabledist, 3.0) * 0.2));\n  vec3 tmpvar_23;\n  tmpvar_23.xy = (xlat_mutableuv1 * tmpvar_22);\n  tmpvar_23.z = tmpvar_22;\n  xlat_mutableuv2 = (((tmpvar_23 / q7) * tmpvar_1) + tmpvar_2);\n  xlat_mutableuv2 = ((fract(\n    ((xlat_mutableuv2 / 8.0) + 0.5)\n  ) - 0.5) * 8.0);\n  vec4 tmpvar_24;\n  tmpvar_24.w = 0.0;\n  tmpvar_24.xyz = (vec3((texture (sampler_noisevol_lq, (xlat_mutableuv2 / 16.0)).x * 3.0)) * 80.0);\n  float tmpvar_25;\n  tmpvar_25 = sqrt(dot (tmpvar_24.xyz, tmpvar_24.xyz));\n  xlat_mutablestruc = (sqrt(dot (tmpvar_24.xyz, tmpvar_24.xyz)) / 80.0);\n  if (((tmpvar_25 < 80.0) && (xlat_mutabledist > 0.005))) {\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * texture (sampler_main, uv_3).x));\n    vec2 tmpvar_26;\n    tmpvar_26 = (0.003472222 * floor((\n      (288.0 * vec2((1.0 - xlat_mutabledist)))\n     + vec2(0.5, 0.5))));\n    vec2 tmpvar_27;\n    tmpvar_27.x = ((32.0 * (\n      (1.0 - xlat_mutabledist)\n     - tmpvar_26.x)) + 0.495);\n    tmpvar_27.y = tmpvar_26.x;\n    ret_4.yz = tmpvar_27;\n  } else {\n    vec3 tmpvar_28;\n    tmpvar_28.x = (0.5 * (sustain + 1.0));\n    tmpvar_28.y = sustain;\n    tmpvar_28.z = sustain;\n    vec3 tmpvar_29;\n    tmpvar_29.y = 0.0;\n    tmpvar_29.x = (1.0 - sustain);\n    tmpvar_29.z = (1.0 - sustain);\n    ret_4 = ((texture (sampler_fw_main, fract(uv_3)).xyz * tmpvar_28) - (0.01 * tmpvar_29));\n  };\n  vec4 tmpvar_30;\n  tmpvar_30.w = 1.0;\n  tmpvar_30.xyz = ret_4;\n  ret = tmpvar_30.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 dz_2;\n  vec3 ret2_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = (abs((uv.x - 0.5)) + 0.5);\n  tmpvar_4.y = uv.y;\n  uv_1 = (abs((tmpvar_4 - 0.5)) + 0.5);\n  ret2_3 = (texture (sampler_main, uv_1).xyz * (0.6 + (0.5 * \n    sin(((uv_1.x * 10.0) + (3.141593 * (q27 + q28))))\n  )));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (vec3(dot (texture (sampler_main, uv_1).xyz, vec3(0.32, 0.49, 0.29))), ret2_3, pow (ret2_3, vec3((0.15 + \n    (mid_att * 0.025)\n  ))));\n  ret2_3 = tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_1 - 0.5);\n  vec2 tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(0.0005, 0.0) * q21);\n  tmpvar_7.x = (texture (sampler_main, (uv_1 + tmpvar_8)).x - texture (sampler_main, (uv_1 - tmpvar_8)).z);\n  vec2 tmpvar_9;\n  tmpvar_9 = (vec2(0.0, 0.0005) * q20);\n  tmpvar_7.y = (texture (sampler_main, (uv_1 + tmpvar_9)).x - texture (sampler_main, (uv_1 - tmpvar_9)).z);\n  dz_2 = (tmpvar_7 + ((texture (sampler_noise_hq, \n    (((tmpvar_6 / (\n      (((0.5 * q26) + (0.5 * q27)) / q16)\n     + rad)) * ((q23 * 0.1) + (q24 * 0.1))) + q31)\n  ) - 0.5) * 0.1).xy);\n  vec2 tmpvar_10;\n  tmpvar_10 = abs((tmpvar_6 - dz_2));\n  vec3 tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = abs(q21);\n  float tmpvar_13;\n  tmpvar_13 = abs(q20);\n  tmpvar_11.x = (tmpvar_13 + tmpvar_12);\n  float tmpvar_14;\n  tmpvar_14 = abs(q22);\n  tmpvar_11.y = (tmpvar_12 + tmpvar_14);\n  tmpvar_11.z = (tmpvar_14 + tmpvar_13);\n  vec3 tmpvar_15;\n  tmpvar_15 = log(exp2((\n    (3.141593 * tmpvar_11)\n   * \n    ((0.7 * texture (sampler_main, uv_1).xyz) + ((pow (\n      abs((0.03333 / sqrt(dot (tmpvar_10, tmpvar_10))))\n    , 0.75) * tmpvar_5) * (5.0 + sqrt(mid))))\n  .yzx)));\n  vec3 tmpvar_16;\n  float tmpvar_17;\n  tmpvar_17 = abs(q24);\n  float tmpvar_18;\n  tmpvar_18 = abs(q23);\n  tmpvar_16.x = (tmpvar_18 + tmpvar_17);\n  float tmpvar_19;\n  tmpvar_19 = abs(q25);\n  tmpvar_16.y = (tmpvar_17 + tmpvar_19);\n  tmpvar_16.z = (tmpvar_19 + tmpvar_18);\n  vec2 tmpvar_20;\n  tmpvar_20 = fract(-(tmpvar_10));\n  vec2 tmpvar_21;\n  tmpvar_21 = fract(dz_2);\n  vec3 tmpvar_22;\n  tmpvar_22 = log(exp2((\n    (3.141593 * tmpvar_16)\n   * texture (sampler_main, \n    fract(-(abs((tmpvar_20 - \n      (2.0 * (dot (tmpvar_21, tmpvar_20) * tmpvar_21))\n    ))))\n  ).xyz)));\n  vec3 tmpvar_23;\n  float tmpvar_24;\n  tmpvar_24 = abs(q27);\n  float tmpvar_25;\n  tmpvar_25 = abs(q26);\n  tmpvar_23.x = (tmpvar_25 + tmpvar_24);\n  float tmpvar_26;\n  tmpvar_26 = abs(q28);\n  tmpvar_23.y = (tmpvar_24 + tmpvar_26);\n  tmpvar_23.z = (tmpvar_26 + tmpvar_25);\n  vec3 tmpvar_27;\n  tmpvar_27 = log(exp2((\n    (3.141593 * tmpvar_23)\n   * texture (sampler_main, \n    fract(-(tmpvar_10))\n  ).zxy)));\n  vec3 tmpvar_28;\n  tmpvar_28 = mix (tmpvar_15, tmpvar_22, (1.5708 - (1.570796 - \n    (sign(tmpvar_27) * (1.570796 - (sqrt(\n      (1.0 - abs(tmpvar_27))\n    ) * (1.570796 + \n      (abs(tmpvar_27) * (-0.2146018 + (abs(tmpvar_27) * (0.08656672 + \n        (abs(tmpvar_27) * -0.03102955)\n      ))))\n    ))))\n  )));\n  vec3 tmpvar_29;\n  tmpvar_29 = mix (tmpvar_15, tmpvar_22, tmpvar_27);\n  vec3 tmpvar_30;\n  tmpvar_30.z = 0.0;\n  tmpvar_30.xy = ((uv_1 - 0.5) + (0.4 * dot (texture (sampler_main, uv_1).xyz, vec3(0.32, 0.49, 0.29))));\n  float x_31;\n  x_31 = (fract((\n    (dot (tmpvar_30, vec3(0.32, 0.49, 0.29)) * 3.0)\n   - time)) - 0.5);\n  vec4 tmpvar_32;\n  tmpvar_32.w = 1.0;\n  tmpvar_32.xyz = ((0.637 * abs(\n    mix ((1.5708 - (1.570796 - (\n      sign(tmpvar_29)\n     * \n      (1.570796 - (sqrt((1.0 - \n        abs(tmpvar_29)\n      )) * (1.570796 + (\n        abs(tmpvar_29)\n       * \n        (-0.2146018 + (abs(tmpvar_29) * (0.08656672 + (\n          abs(tmpvar_29)\n         * -0.03102955))))\n      ))))\n    ))), (sign(tmpvar_28) * (1.570796 - (\n      sqrt((1.0 - abs(tmpvar_28)))\n     * \n      (1.570796 + (abs(tmpvar_28) * (-0.2146018 + (\n        abs(tmpvar_28)\n       * \n        (0.08656672 + (abs(tmpvar_28) * -0.03102955))\n      ))))\n    ))), ((3.0 * q15) * mix ((1.5708 - \n      (1.570796 - (sign(tmpvar_15) * (1.570796 - (\n        sqrt((1.0 - abs(tmpvar_15)))\n       * \n        (1.570796 + (abs(tmpvar_15) * (-0.2146018 + (\n          abs(tmpvar_15)\n         * \n          (0.08656672 + (abs(tmpvar_15) * -0.03102955))\n        ))))\n      ))))\n    ), (1.5708 - \n      (1.570796 - (sign(tmpvar_22) * (1.570796 - (\n        sqrt((1.0 - abs(tmpvar_22)))\n       * \n        (1.570796 + (abs(tmpvar_22) * (-0.2146018 + (\n          abs(tmpvar_22)\n         * \n          (0.08656672 + (abs(tmpvar_22) * -0.03102955))\n        ))))\n      ))))\n    ), (\n      sign(tmpvar_27)\n     * \n      (1.570796 - (sqrt((1.0 - \n        abs(tmpvar_27)\n      )) * (1.570796 + (\n        abs(tmpvar_27)\n       * \n        (-0.2146018 + (abs(tmpvar_27) * (0.08656672 + (\n          abs(tmpvar_27)\n         * -0.03102955))))\n      ))))\n    ))))\n  )) + (exp(\n    (-20.0 * sqrt((x_31 * x_31)))\n  ) * q10));\n  ret = tmpvar_32.xyz;\n }"}