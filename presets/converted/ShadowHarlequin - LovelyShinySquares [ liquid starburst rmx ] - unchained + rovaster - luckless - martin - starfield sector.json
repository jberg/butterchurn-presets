{"version":2,"baseVals":{"gammaadj":2.7,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken":1,"wave_a":0.865,"wave_scale":3.75,"wave_smoothing":0,"modwavealphastart":0.4,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.32545,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":9.6,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0.3},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.37,"rad":100,"ang":3.64425,"r":0,"a":0.1,"g2":0,"a2":0.13,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"tex_ang = time*(0.3 + 0.1*t1);\nrad = rad * (0.9 + 0.2*t2);\nr = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));\ng = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));\nb = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));\ng2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));\nb2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));\n//a1 = (bass_att);\na1 = 0.3 + 0.1 * sin(treb_att * .55);\nmv_l = 3 + 1 * (treb_att * .25);\n"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.37,"rad":0.89796,"ang":3.64425,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(mid_att*0.15+3);\ny = y + 0.03*sin(mid_att*0.19+1);\ntex_ang = bass_att*(0.1 + 0.1*treb_att);\nrad = rad * (0.9 + 0.6*treb_att);\n\n\n\nx = x + sin(treb_att * .005);\ny = y + sin(mid_att * .013);\na = 0 + (treb * .1);"},{"baseVals":{"enabled":1,"sides":13,"additive":1,"textured":1,"x":0.77,"y":0.43,"rad":0.51386,"ang":4.20974,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*(bass_att*0.07);\ny = y + 0.03*(bass_att*0.03);\ntex_ang = mid_att*(0.8 + 0.1*t1);\nrad = rad * (0.9 + 0.2*mid_att);\nr = min(1,max(0,r + 0.1*(bass_att*0.417 + 1)));\ng = min(1,max(0,g + 0.1*(mid_att*0.391 + 2)));\nb = min(1,max(0,b + 0.1*(treb_att*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.457 + 3)));\ng2 = min(1,max(0,g2 + 0.1*sin(mid_att*0.437 + 5)));\nb2 = min(1,max(0,b2 + 0.1*sin(treb_att*0.484 + 6)));\nsides = treb_att;\n\nx = x + sin(mid_att * .019);\ny = y + sin(treb_att * .015);\nnum_inst = sin(mid_att * .25);\n\nr = 0.5 + 0.5*sin(frame*2.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 1.188);"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"textured":1,"y":0.7,"rad":1.33692,"r":0,"g":0.8,"b":1,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(treb_att*0.25);\ny = y + 0.1*sin(treb_att*0.5+2);\nrot = mid_att * .45;\n\nr = min(1,max(0,r + 0.1*(bass_att*0.417 + 1)));\ng = min(1,max(0,g + 0.1*(mid_att*0.391 + 2)));\nb = min(1,max(0,b + 0.1*(treb_att*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.457 + 3)));\ng2 = min(1,max(0,g2 + 0.1*sin(mid_att*0.437 + 5)));\nb2 = min(1,max(0,b2 + 0.1*sin(treb_att*0.484 + 6)));\nang = sin(treb_att);\n\nx = x + sin(mid_att * .016);\ny = x + sin(treb_att * .015);\nnum_inst = sin(treb_att * .35);\n\nr = 0.5 + 0.5*sin(frame*2.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 1.188);\n\n\nrad = rad + (treb * .001);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"scaling":9.86086},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\n//a=(above(bass+mid+treb,.8));\n//a = bass_att * .35;\n\nr = sin(treb+att * .45);\nb = sin(treb+att * .65);\ng = sin(treb+att * .25);\n\n"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"scaling":27.42973},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\n//b = min(1,max(0,b + 0.1*sin(mid_att*0.232 + 4)));\n//r2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\n//g2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\n//b2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\n\n\na1 = treb_att * .25;\na2 = mid_att * .15;\na3 = treb_att * .25;\n\n\nr = sin(treb_att);\nb = sin(treb_att);\ng = sin(treb_att);","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\n//a=(above(bass+mid+treb,.8));\n//a = bass_att * .35;\n\nr = sin(treb+att * .45);\nb = sin(treb+att * .65);\ng = sin(treb+att * .25);\n\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":6.62306,"r":0.5,"g":0.5,"b":0.5},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\n//b = min(1,max(0,b + 0.1*(mid_att*0.232 + 4)));\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\ng2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\nb2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\na1 = treb_att * .25;\na2 = mid_att * .15;\na3 = treb_att * .25;\n","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\n//a=(above(bass+mid+treb,.8));\n//a = bass_att * .35;\n\nr = sin(treb+att * .45);\nb = sin(treb+att * .65);\ng = sin(treb+att * .25);\n\n"},{"baseVals":{"enabled":1,"samples":142,"thick":1,"scaling":8.9269,"r":0.6,"g":0},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\n//b = min(1,max(0,b + 0.1*(mid_att*0.232 + 4)));\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\ng2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\nb2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\n\n\nr = 255;\nb = 255;\ng = 255;","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\n//a=(above(bass+mid+treb,.8));\n//a = bass_att * .35;\n\nr = sin(treb+att * .45);\nb = sin(treb+att * .65);\ng = sin(treb+att * .25);\n\n"}],"init_eqs_eel":"","frame_eqs_eel":"//Variables controling the glitch effect////////////////////////////////////////\ndecayrate = 0.09;   //How fast the glitch effect decays back to original image\ntrebresp = 2.8;    //Level of treb needed for effect to take place\n////////////////////////////////////////////////////////////////////////////////\n\n\ncdecay = pow(decayrate, 30/fps);\ncount = above(treb, trebresp)*1 + (1-above(treb, 3))*count;\ncount = count - above(count, cdecay)*cdecay;\nq29=count;\nmonitor = q29;\n\n\n\ndecay = 0;\n\ndt = 0.02;\n\nh = h + v*dt;\n\nv = v*0.986 + a*dt;\na = -(h - 0.5)*0.4 + sqrt(- min(0,(w1v+w2v)*0.1)) - .175;\n\nmonitor = w2;\n\n\nw1 = w1 + w1v*dt;\nw1v = w1v*0.98 + w1a*dt;\nw1a = -(w1)*20 - w2a*0.1   + av*30;\n\nw2 = w2 + w2v*dt;\nw2v = w2v*0.98 + w2a*dt;\nw2a = -(w2-w1)*20;\n\nbb = bb*0.99 + bass*0.02;\nmm = mm*0.99 + mid*0.02;\ntt = tt*0.99 + treb*0.02;\n\nmi = min(min(bb,mm),tt);\nma = max(max(bb,mm),tt);\nav = (bb+mm+tt-mi-ma);\nq5 = av;\navn = (av-mi)/(ma-mi);\nav = abs(avo-avn);\navo = avn;\n\nq1 = h*0.8 + 0.12;\nq2 = (w1);\nq3 = (w2 + w1);\nq4 = 0.1+ avo*0.1;\n\n\n\nwave_r = 0.5 + 0.5*sin(frame*2.5);\nwave_b = 0.5 + 0.5*sin(frame*0.5 + 1.094);\nwave_g = 0.5 + 0.5*sin(frame*0.5 + 1.188);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv * texsize.xy) * 0.08);\n  uv_1 = (uv - ((\n    (sin(tmpvar_3) / cos(tmpvar_3))\n   * texsize.zw) * (treb * 3.0)));\n  vec3 tmpvar_4;\n  tmpvar_4 = (texture (sampler_main, uv_1).xyz + (vec3(dot (texture (sampler_noise_lq, \n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\n  ret_2 = ((mix (tmpvar_4, \n    (1.0 - tmpvar_4.zyx)\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\n    (1.0 - rad)\n  , \n    (treb * 90.0)\n  )));\n  ret_2 = (ret_2 + (ret_2 * (vol * 0.001)));\n  ret_2 = (ret_2 + (ret_2 * (treb * 0.025)));\n  ret_2 = (ret_2 + 0.001);\n  uv_1 = (uv_1 + ((treb_att * 0.001) * texture (sampler_main, uv_1)).xy);\n  ret_2 = (ret_2 + ((\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3) * 0.05));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 crisp_2;\n  vec2 uv3_3;\n  vec2 uv2_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - 0.5);\n  tmpvar_6 = (tmpvar_7 * aspect.xy);\n  float tmpvar_8;\n  tmpvar_8 = (0.1 / (sqrt(\n    dot (tmpvar_6, tmpvar_6)\n  ) + 0.05));\n  vec2 tmpvar_9;\n  float tmpvar_10;\n  tmpvar_10 = (ang / 3.14);\n  tmpvar_9.x = tmpvar_10;\n  tmpvar_9.y = (tmpvar_8 * 1.5);\n  uv2_4.y = (tmpvar_9.y + (0.1 * time));\n  uv2_4.x = (tmpvar_10 + (0.02 * time));\n  uv3_3.y = (tmpvar_8 + q30);\n  uv3_3.x = (tmpvar_10 + (time / 32.0));\n  crisp_2 = ((texture (sampler_main, fract(uv2_4)).xyz + (2.0 * texture (sampler_main, \n    fract(uv3_3)\n  ).xyz)) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_4)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_3)).xyz * scale2) + bias2)\n  )));\n  crisp_2 = ((3.0 * crisp_2) * rad);\n  float tmpvar_11;\n  tmpvar_11 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  ret_5 = ((crisp_2 + (\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_11)) + (tmpvar_11 * texture (sampler_main, fract(uv)).xyz));\n  uv_1 = ((tmpvar_7 * aspect.xy) + 0.5);\n  vec2 tmpvar_12;\n  tmpvar_12 = (1.0 - uv_1);\n  vec3 tmpvar_13;\n  tmpvar_13 = (texture (sampler_main, uv_1).xyz + (2.0 * (\n    (texture (sampler_blur2, uv_1).xyz * scale2)\n   + bias2)));\n  vec3 tmpvar_14;\n  tmpvar_14 = (texture (sampler_main, tmpvar_12).xyz + (2.0 * (\n    (texture (sampler_blur2, tmpvar_12).xyz * scale2)\n   + bias2)));\n  vec3 tmpvar_15;\n  tmpvar_15 = mix (ret_5, mix ((tmpvar_13 * tmpvar_14), (tmpvar_13 + tmpvar_14), vec3((q29 * 0.16))), vec3((q29 * 0.5)));\n  vec3 tmpvar_16;\n  tmpvar_16 = mix (tmpvar_15, (1.0 - tmpvar_15), ((q29 * tmpvar_15) * (rad * \n    (2.0 - q29)\n  )));\n  ret_5 = (tmpvar_16 * (tmpvar_16 + (treb * 0.001)));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_5;\n  ret = tmpvar_17.xyz;\n }"}