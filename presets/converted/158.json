{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"additive":1,"textured":1,"rad":0.13478,"tex_zoom":1.62835,"r":0.3,"g":0.8,"b":1,"a":0.08,"g2":0.5,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":11,"additive":1,"textured":1,"rad":0.1016,"r":0.3,"g":0.6,"b":1,"a":0.38,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.94761,"r":0.5,"g":0.2,"b":0.8,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.a=a.mid_att*a.mid_att*a.mid*.002;","init_eqs_eel":"","frame_eqs_eel":"a=mid_att*mid_att*mid*0.002"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.01,"tex_zoom":0.04027,"g":0.2,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.1*a.time;a.a=a.mid*a.mid_att;a.a=Math.min(a.a,1);a.a=1-.4*a.a*above(a.treb,.9);","init_eqs_eel":"","frame_eqs_eel":"ang=time*0.1;\na=mid*mid_att;\na=min(a,1);\na=1-a*0.4 * above(treb,0.9)"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.3,"g":0.7},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.fade=0;a.spark=0;a.r1=0;a.g2=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.r2=0;a.ang=0;a.b2=0;a.zp=0;a.phase=0;a.g1=0;a.b1=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.flip+=1;a.flip*=below(a.flip,2);a.phase=Math.sin(3*a.n)*Math.sin(7.9*a.n)*Math.sin(16.7*a.n)*Math.sin(63.5*a.n)*6;a.xp=Math.sin(a.n+a.phase);a.yp=Math.cos(a.n+a.phase);a.zp=0;a.ang=2*a.n+a.phase;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.r1=.1;a.g1=.3;a.b1=1;a.r2=.7;a.g2=.1;a.b2=1;a.fade=.5*a.xq+.5;a.r=a.r1*a.fade+a.r2*(1-a.fade);a.g=a.g1*a.fade+a.g2*(1-a.fade);a.b=a.b1*a.fade+a.b2*(1-a.fade);\na.ang=.1*a.time;a.xp=a.xq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.yp=a.yq;a.zp=a.xq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.ang=.17*a.time;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.zq+=3.1;a.xs=div(a.xq,a.zq);a.ys=div(a.yq,a.zq);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=.3*pow(.5*Math.sin(4*a.n+a.time)+.5,2);a.spark=Math.sin(35*a.phase);a.r=.00001<Math.abs(above(a.spark,.93))?.6:a.r;a.g=.00001<Math.abs(above(a.spark,.93))?.8:a.g;a.b=.00001<Math.abs(above(a.spark,\n.93))?1:a.b;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=0.7;g2=0.1;b2=1.0;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\na=(1)*0.3 * (pow(sin(n*4+time)*0.5+0.5,2));\n\nspark=sin(phase*35);\nr=if( above(spark,0.93) , 0.6 , r);\ng=if( above(spark,0.93) , 0.8 , g);\nb=if( above(spark,0.93) , 1.0 , b);\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.fade=0;a.r1=0;a.g2=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.r2=0;a.ang=0;a.b2=0;a.wave=0;a.zp=0;a.phase=0;a.g1=0;a.b1=0;","frame_eqs_str":"","point_eqs_str":"a.n=.03*a.sample+.01*a.time;a.flip+=1;a.flip*=below(a.flip,2);a.phase=Math.sin(3*a.n)*Math.sin(7.9*a.n)*Math.sin(16.7*a.n)*Math.sin(63.5*a.n)*6;a.xp=Math.sin(a.n+a.phase);a.yp=Math.cos(a.n+a.phase);a.zp=0;a.ang=2*a.n+a.phase;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.r1=.1;a.g1=.3;a.b1=1;a.r2=1;a.g2=.1;a.b2=.5;a.fade=.5*a.xq+.5;a.r=a.r1*a.fade+a.r2*(1-a.fade);a.g=a.g1*a.fade+a.g2*(1-a.fade);a.b=a.b1*a.fade+a.b2*\n(1-a.fade);a.ang=.1*a.time;a.xp=a.xq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.yp=a.yq;a.zp=a.xq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.ang=.17*a.time;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.zq+=3.1;a.xs=div(a.xq,a.zq);a.ys=div(a.yq,a.zq);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.wave=Math.sin(8E3*a.n)*Math.sin(690*a.n)*Math.sin(17E3*a.n)*.5+.5;a.a=a.sample*a.wave*.4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=1.0;g2=0.1;b2=0.5;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\n\na=sample*wave*0.4;\n\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.fade=0;a.r1=0;a.g2=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.r2=0;a.ang=0;a.b2=0;a.wave=0;a.zp=0;a.phase=0;a.g1=0;a.b1=0;","frame_eqs_str":"","point_eqs_str":"a.n=.03*a.sample+.01*a.time+2.1;a.flip+=1;a.flip*=below(a.flip,2);a.phase=Math.sin(3*a.n)*Math.sin(7.9*a.n)*Math.sin(16.7*a.n)*Math.sin(63.5*a.n)*6;a.xp=Math.sin(a.n+a.phase);a.yp=Math.cos(a.n+a.phase);a.zp=0;a.ang=2*a.n+a.phase;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.r1=.1;a.g1=.3;a.b1=1;a.r2=1;a.g2=.1;a.b2=.5;a.fade=.5*a.xq+.5;a.r=a.r1*a.fade+a.r2*(1-a.fade);a.g=a.g1*a.fade+a.g2*(1-a.fade);a.b=a.b1*a.fade+a.b2*\n(1-a.fade);a.ang=.1*a.time;a.xp=a.xq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.yp=a.yq;a.zp=a.xq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.ang=.17*a.time;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.zq+=3.1;a.xs=div(a.xq,a.zq);a.ys=div(a.yq,a.zq);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.wave=Math.sin(8E3*a.n)*Math.sin(690*a.n)*Math.sin(17E3*a.n)*.5+.5;a.a=a.sample*a.wave*.4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01+2.1;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=1.0;g2=0.1;b2=0.5;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\n\na=sample*wave*0.4;\n\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.fade=0;a.r1=0;a.g2=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.r2=0;a.ang=0;a.b2=0;a.wave=0;a.zp=0;a.phase=0;a.g1=0;a.b1=0;","frame_eqs_str":"","point_eqs_str":"a.n=.03*a.sample+.01*a.time+4.2;a.flip+=1;a.flip*=below(a.flip,2);a.phase=Math.sin(3*a.n)*Math.sin(7.9*a.n)*Math.sin(16.7*a.n)*Math.sin(63.5*a.n)*6;a.xp=Math.sin(a.n+a.phase);a.yp=Math.cos(a.n+a.phase);a.zp=0;a.ang=2*a.n+a.phase;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.r1=.1;a.g1=.3;a.b1=1;a.r2=1;a.g2=.1;a.b2=.5;a.fade=.5*a.xq+.5;a.r=a.r1*a.fade+a.r2*(1-a.fade);a.g=a.g1*a.fade+a.g2*(1-a.fade);a.b=a.b1*a.fade+a.b2*\n(1-a.fade);a.ang=.1*a.time;a.xp=a.xq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.yp=a.yq;a.zp=a.xq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.ang=.17*a.time;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.zq+=3.1;a.xs=div(a.xq,a.zq);a.ys=div(a.yq,a.zq);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.wave=Math.sin(8E3*a.n)*Math.sin(690*a.n)*Math.sin(17E3*a.n)*.5+.5;a.a=a.sample*a.wave*.4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01+4.2;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=1.0;g2=0.1;b2=0.5;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\n\na=sample*wave*0.4;\n\n"}],"init_eqs_str":"a.index2=0;a.q25=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.dx1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.rot1=0;a.q28=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.96,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,4);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,2);a.rot1+=a.q26;a.q25=.01*a.rot1;a.q27=8-a.index;a.q28=a.index3;a.dx1=a.dec_med*a.dx1+(1-a.dec_med)*bnot(a.index2);a.q29=a.dx1;a.monitor=a.q29;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;","pixel_eqs_str":"a.rot=0;a.dx=.02*a.q29;a.zoom=1;","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%8;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3*3.1416/2;\n\nrot1 = rot1 + q26;\nq25 = .01*rot1;\n\nq27 = 8-index;\nq28 = index3;\n\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\nq29 = dx1;\nmonitor = q29;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;","pixel_eqs_eel":"rot = 0;\ndx = .02*q29;\nzoom = 1;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (((0.985 * texture (sampler_main, \n    (uv + (((\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \n        (q2 + 1.0)\n      ) * tmpvar_1.yx)))\n     * texsize.zw) * 4.0) * (2.0 + q1)))\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.15 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.2));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  float tmpvar_8;\n  tmpvar_8 = (0.15 * time);\n  uv2_3.y = (tmpvar_5 + tmpvar_8);\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_7;\n  tmpvar_9.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_9.y + tmpvar_8);\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.5 * crisp_1) * rad);\n  float tmpvar_10;\n  tmpvar_10 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_10)) + (tmpvar_10 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat3 noiseVal =.03*(tex2D(sampler_noise_lq, uv*.5+.01*rand_frame));\nnoiseVal = 0.01;\nfloat3 Feedback = GetBlur1(1-uv);\n\nfloat2 zz = uv1 *texsize.xy *0.015;\n//zz =mul(zz,float2x2(_qa));\nzz = zz.yx;\nfloat2 h1 = clamp(tan(zz.yx),-12,12) * cos(4*(q2+1)*zz);\n\nuv.xy += h1*texsize.zw * 4*(2+q1);\n\n\nfloat r = tex2D (sampler_noise_hq,uv/14).x*12;\nfloat2 uv6 = uv1;\nuv6 = mul(uv6, float2x2(cos(r),sin(r),-sin(r),cos(r)));\nfloat3 mus = .1/(sqrt(uv6.y));\n\nfloat3 crisp = tex2D(sampler_main,uv);\n//crisp = lerp(crisp.bgr,crisp.rgb,2*crisp);\nret = .985*crisp+noiseVal-.02;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .2;\nfloat rad1 = 0.15/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.15*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.15*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3.5*crisp * pow(rad,1);\n\nfloat mask = saturate(1-200*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}