{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.5274,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"additive":1,"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\ntrel = time/3;\n\nx = .5+sin(trel*2);\ny = .5+cos(trel*1.3);\n\n\n\n\nrad = .1;\na = .8;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27;"},{"baseVals":{"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\ny = .5;\n\nr = .4;\ng = .6;\nb = 1;\nr2 = r;\ng2 = g;\nb2 = b;\n\na2 = min(q21/2 ,1)/2;\n\na = 0;\n\nrad = a2 * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"scaling":7.858,"smoothing":0.1,"r":0,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"x = rand(100)/100;\ny = rand(100)/100;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\nyi = rand(100)/100;\n\nx = xi; y = yi;\n\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .6+avg+peak) * above (time, t0+.4);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %12;\nindexa = (indexa + is_beat) %5;\nindex2 = (index2 + is_beat*bnot(index))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att + 1;\nq27 = index + 1;\nq28 = -index2 + indexa/5;\nq29 = index1+index2;\nmonitor = q29;\nk1 =  is_\nbeat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nds = ds*dec_med + q24*(1-dec_med);\nq25 = q24;\n//q25 = above(q26,4);\n\nt_rel = time*8;\n//q25 = below((t_rel)-int(t_rel),.2);\n\n\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\nq30 = p3 ;\n\np4 = dec_med*p4 + (1-dec_med)*q27;\nq31 = p4;\n\n//zoom = 1 + .05*q1;\n//rot = -0.01 * (index);\n\nzoom = 1.00;\nrot = .0;\n//dy = .01*q25;\ndy = .001*q1;\nwarp = .03;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (vec3((0.051 / sqrt(dot (uv6_2, uv6_2)))) * vec3(0.15, 0.12, 0.075))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  uv_1.x = uv.x;\n  float z_2;\n  uv_1.y = (uv.y - 0.1);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\n  z_2 = (0.3 / tmpvar_3.y);\n  xlat_mutablers0.x = (tmpvar_3.x * z_2);\n  xlat_mutablers0.y = z_2;\n  float tmpvar_4;\n  tmpvar_4 = (time / 2.0);\n  xlat_mutablers.x = (xlat_mutablers0.x + tmpvar_4);\n  xlat_mutablers.y = (z_2 + tmpvar_4);\n  xlat_mutableret1 = (texture (sampler_noise_hq, (xlat_mutablers / 2.0)).xyz - 0.54);\n  float tmpvar_5;\n  tmpvar_5 = clamp ((32.0 * tmpvar_3.y), 0.0, 1.0);\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((\n    (((1.5 * tmpvar_3) * (q28 - abs(tmpvar_3.x))) * (1.0 - ((0.5 * tmpvar_3.y) * (float(mod (q29, 2.0))))))\n   - \n    (q27 / 4.0)\n  ) - (\n    (xlat_mutableret1 * 0.04)\n   * tmpvar_5).xy));\n  vec2 tmpvar_7;\n  tmpvar_7.y = 0.0;\n  tmpvar_7.x = texsize.z;\n  vec2 tmpvar_8;\n  tmpvar_8.x = 0.0;\n  tmpvar_8.y = texsize.w;\n  vec2 tmpvar_9;\n  tmpvar_9.x = dot ((texture (sampler_main, (tmpvar_6 + tmpvar_7)).xyz - texture (sampler_main, (tmpvar_6 - tmpvar_7)).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_9.y = dot ((texture (sampler_main, (tmpvar_6 + tmpvar_8)).xyz - texture (sampler_main, (tmpvar_6 - tmpvar_8)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutableuv3 = (tmpvar_6 + tmpvar_9);\n  xlat_mutableret1 = ((2.0 * (\n    (texture (sampler_blur1, fract(xlat_mutableuv3)).xyz * scale1)\n   + bias1)) + texture (sampler_main, xlat_mutableuv3).xyz);\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 - (tmpvar_5 / 3.0)));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = xlat_mutableret1;\n  ret = tmpvar_10.xyz;\n }"}