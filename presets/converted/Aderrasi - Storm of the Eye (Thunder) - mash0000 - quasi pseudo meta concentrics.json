{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.97,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":0.797,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\nob_r = ob_r + 0.8*sin(1.1*time) + 1.1*cos(2*time);\nob_b = ob_b + 0.9*sin(1.2*time) + cos(1.5*time);\nob_g = ob_g + 0.7*sin(time) + sin(0.4*time);\nwave_r = abs(ob_r+0.2);\nwave_g = abs(ob_g+0.2);\nwave_b = abs(ob_b+0.2);\nib_b = ib_b + 0.44*cos(1.5*time) + 0.7*tan(time);\nib_g = ib_g + 2*sin(time*bass_att);\nib_r = ib_r + 0.8*sin(1.2*time) + 1.3*cos(1.8*time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nzoom = zoom + 0.07*treb*(abs(sin(time*rad)))*(0.3-rad);\ndy = dy + dy_r*below(rad,0.5 - (0.2*time));\ndx = dx + dx_r*below(rad,0.5 - (0.2*time));\nrot = rot + (0.7*bass_att*sin(abs(dx_r*(1-rad)*2*time+cos(rad*12))))*0.2;","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\n   / 256.0) * 28.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":""}