{"version":2,"baseVals":{"rating":1,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":0.653,"wave_smoothing":0,"wave_mystery":-0.5,"warpscale":0.107,"zoomexp":0.34421,"fshader":1,"zoom":2.78167,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":25.6,"mv_y":9.6,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":3.971,"tex_zoom":0.29171,"r":0,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"additive":1,"textured":1,"rad":1.52776,"tex_zoom":0.40839,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = angc;\nangc = angc-treb*.01;\n\nx=.5 + .2*sin(angc);\ny=.5 + .2*sin(.98*angc);"},{"baseVals":{"additive":1,"textured":1,"rad":6.662,"tex_zoom":0.14949,"g":1,"b":1,"a":0.1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + angc;\nangc = angc + bass*.01;\nx = .5 + .045*sin(.234*time);\ny = .5 + .054*sin(.223*time);\n\nr2 = (rand100)*.01"},{"baseVals":{"additive":1,"textured":1,"x":0.18,"y":0.3,"rad":1.5584,"tex_zoom":0.19788,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.05*sin(.23*time + .2*treb_att);\ny = .5+.05*cos(.2*time + .2*bass);\n\nr = .5+sin(time);\nb = .5+sin(time*.556677);\ng = .5+sin(time*.353);"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"bassc = 0;\nbcount = 0;","frame_eqs_eel":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;\na = 0 + (treb_att * .15);","point_eqs_eel":"x = .5+.2*sin(time*.7454);\nx = x+(.0005-int(rand(10))*.008);\ny = .5+.2*cos(time*.455);\ny = y+(.0005-int(rand(10))*.001);\n\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\nx = x - bcount;"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_eel":"x = .5+.2*sin(time*.7454);\nx = x+(.0005+int(rand(10))*.008);\ny = .5+.2*cos(time*.455);\ny = y+(.0005-int(rand(10))*.001);\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\nx = x + bcount;\nma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"}],"init_eqs_eel":"q21 = 1/asin(1);","frame_eqs_eel":"// coordinates spiral 1\nq21 = .5; //sin(time); // X\nq22 = 0 - sin(time * .5); //-0.5; // Y\n\n// coordinates spiral 2\nq23 = 0;\nq24 = 1; //sin(time); //0.5;\n\nq25 = 0.5/asin(1); // pi/4\n\nq26 = time*0.3; // rotation\nq27 = -time*0.6; // growth\n\n\nbassfix=.05+.01*bass;\nmidfix=.05+.01*mid;\ntrebfix=.05+.01*treb;\nbassif=if(above(bass_att,1),bassif+bassfix,if(above(bassif,85),0,bassif*.96));\nmidif=if(above(mid_att,1),midif+midfix,if(above(midif,.85),0,midif*.96));\ntrebif=if(above(treb_att,1),trebif+trebfix,if(above(trebif,.85),0,trebif*.96));\n\nq12=bassif;\nq13=midif;\nq14=trebif;\nq15=abs(cos(bassif-time));\nq16=abs(cos(midif-time));\nq17=abs(cos(trebif-time));","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 mret_1;\n  vec3 ret_2;\n  mret_1 = (texture (sampler_noise_hq, fract((uv_orig * texsize.zw))).xyz - texture (sampler_noise_lq, (uv + (uv_orig - texsize_noise_lq.zw))).xyz);\n  mret_1 = (mret_1 + texture (sampler_noise_hq, fract(uv)).zyx);\n  mret_1.x = (mret_1.x * ((0.5 + \n    (0.2 * sin(((rad * 20.0) + (time * 16.0))))\n  ) + (0.1 * q12)));\n  mret_1.y = (mret_1.y * ((0.5 + \n    (0.2 * sin(((rad * 40.0) + (time * 18.4))))\n  ) + (0.1 * q13)));\n  mret_1.z = (mret_1.z * ((0.5 + \n    (0.2 * sin(((rad * 10.0) - (time * 14.3))))\n  ) + (0.1 * q14)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (0.95 + (0.2 * q17));\n  tmpvar_3.y = (0.95 + (0.2 * q15));\n  tmpvar_3.z = (0.95 + (0.2 * q16));\n  ret_2 = (texture (sampler_noise_hq, uv).xxx * tmpvar_3);\n  ret_2 = mix (ret_2, mret_1, vec3(0.2, 0.2, 0.2)).xzy;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","comp":"vec2 xlat_mutabledenominator;\nvec2 xlat_mutablenumerator;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec3 fret_2;\n  vec2 xy1_3;\n  vec2 uvm_4;\n  vec2 spiral_5;\n  vec2 c_6;\n  vec3 ret_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = ((uv - 0.5) * aspect.wz);\n  vec2 tmpvar_9;\n  tmpvar_9.x = q21;\n  tmpvar_9.y = q22;\n  xlat_mutablenumerator = ((tmpvar_8 + tmpvar_9) * 64.0);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q23;\n  tmpvar_10.y = q24;\n  xlat_mutabledenominator = (tmpvar_8 + tmpvar_10);\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_11.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  c_6 = ((tmpvar_11 / (\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\n   + \n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\n  )) - 0.5);\n  float tmpvar_12;\n  float tmpvar_13;\n  tmpvar_13 = (min (abs(\n    (c_6.x / c_6.y)\n  ), 1.0) / max (abs(\n    (c_6.x / c_6.y)\n  ), 1.0));\n  float tmpvar_14;\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\n  tmpvar_14 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\n  tmpvar_14 = (tmpvar_14 + (float(\n    (abs((c_6.x / c_6.y)) > 1.0)\n  ) * (\n    (tmpvar_14 * -2.0)\n   + 1.570796)));\n  tmpvar_12 = (tmpvar_14 * sign((c_6.x / c_6.y)));\n  if ((abs(c_6.y) > (1e-08 * abs(c_6.x)))) {\n    if ((c_6.y < 0.0)) {\n      if ((c_6.x >= 0.0)) {\n        tmpvar_12 += 3.141593;\n      } else {\n        tmpvar_12 = (tmpvar_12 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_12 = (sign(c_6.x) * 1.570796);\n  };\n  float tmpvar_15;\n  tmpvar_15 = (3.0 * tmpvar_12);\n  vec2 tmpvar_16;\n  tmpvar_16.x = ((tmpvar_15 * q25) + q26);\n  tmpvar_16.y = (((\n    (2.0 * aspect.w)\n   * \n    log(sqrt(dot (c_6, c_6)))\n  ) + (tmpvar_15 * q25)) + q27);\n  spiral_5 = (0.5 + ((0.5 - \n    abs(((fract(\n      (tmpvar_16 * 0.5)\n    ) * 2.0) - 1.0))\n  ) * 1.1));\n  float tmpvar_17;\n  tmpvar_17 = (0.015 * time);\n  uvm_4.x = (spiral_5.x - (0.07 * texture (sampler_noise_hq, vec2((\n    (spiral_5.x * 1.5)\n   + tmpvar_17))).x));\n  uvm_4.y = (spiral_5.y - (0.07 * texture (sampler_noise_hq, vec2((\n    (spiral_5.y * 1.5)\n   + tmpvar_17))).x));\n  uv_1 = uvm_4;\n  uvm_4 = (uvm_4 - 0.5);\n  float tmpvar_18;\n  float tmpvar_19;\n  tmpvar_19 = (min (abs(\n    (uv_1.x / uv_1.y)\n  ), 1.0) / max (abs(\n    (uv_1.x / uv_1.y)\n  ), 1.0));\n  float tmpvar_20;\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\n  tmpvar_20 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\n  tmpvar_20 = (tmpvar_20 + (float(\n    (abs((uv_1.x / uv_1.y)) > 1.0)\n  ) * (\n    (tmpvar_20 * -2.0)\n   + 1.570796)));\n  tmpvar_18 = (tmpvar_20 * sign((uv_1.x / uv_1.y)));\n  if ((abs(uv_1.y) > (1e-08 * abs(uv_1.x)))) {\n    if ((uv_1.y < 0.0)) {\n      if ((uv_1.x >= 0.0)) {\n        tmpvar_18 += 3.141593;\n      } else {\n        tmpvar_18 = (tmpvar_18 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_18 = (sign(uv_1.x) * 1.570796);\n  };\n  vec2 tmpvar_21;\n  tmpvar_21.x = tmpvar_18;\n  tmpvar_21.y = inversesqrt(dot (uv_1, uv_1));\n  uvm_4 = (uvm_4 + 0.5);\n  vec2 tmpvar_22;\n  tmpvar_22 = (uv_1 - vec2(0.5, 0.5));\n  float tmpvar_23;\n  tmpvar_23 = (time * 1.4);\n  xy1_3.x = ((sin(tmpvar_23) * tmpvar_22.x) - (cos(tmpvar_23) * tmpvar_22.y));\n  xy1_3.y = ((cos(tmpvar_23) * tmpvar_22.x) + (sin(tmpvar_23) * tmpvar_22.y));\n  vec2 tmpvar_24;\n  tmpvar_24 = (xy1_3 - 0.5);\n  uv_1 = tmpvar_24;\n  vec3 tmpvar_25;\n  tmpvar_25 = ((texture (sampler_blur1, uvm_4).xyz * scale1) + bias1);\n  vec4 tmpvar_26;\n  tmpvar_26 = texture (sampler_main, fract(uvm_4));\n  vec2 tmpvar_27;\n  tmpvar_27.x = (tmpvar_26.x + cos((uvm_4.x - \n    (roam_sin.y * 4.0)\n  )));\n  tmpvar_27.y = (tmpvar_26.x - sin((uvm_4.y + roam_cos.x)));\n  vec3 tmpvar_28;\n  tmpvar_28 = ((tmpvar_26.xyz - tmpvar_25) - (4.0 * tmpvar_27).xxx);\n  fret_2.yz = tmpvar_28.yz;\n  fret_2.x = (tmpvar_28.x / (tmpvar_26.y / tmpvar_25.y));\n  vec3 tmpvar_29;\n  tmpvar_29 = (1.0 - fret_2);\n  ret_7 = ((texture (sampler_main, tmpvar_24).xyz * tmpvar_29) + (0.8 * fret_2));\n  vec3 tmpvar_30;\n  tmpvar_30 = mix (ret_7, tmpvar_29, vec3((1.5 * clamp (\n    dot (fret_2, tmpvar_29)\n  , 0.0, 1.0))));\n  ret_7 = (mix (tmpvar_30, mix (texture (sampler_main, tmpvar_21).xyz, tmpvar_30, vec3(0.5, 0.5, 0.5)), vec3(0.5, 0.5, 0.5)) - texture (sampler_main, tmpvar_21).xyz);\n  vec4 tmpvar_31;\n  tmpvar_31.w = 1.0;\n  tmpvar_31.xyz = ret_7;\n  ret = tmpvar_31.xyz;\n }"}