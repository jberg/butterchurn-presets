{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.39158,"wave_scale":0.01,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.7,"wave_g":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.3,"rad":0.379365,"tex_ang":0.628319,"tex_zoom":4.141529,"r":0.3,"g":0.7,"b":1,"r2":1,"b2":1,"a2":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1/6 + .5;\ny = q2/6 + .5;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.6,"g2":0,"b2":0.4,"a2":0.3,"border_a":0},"init_eqs_eel":"t_rel = 5*time;\nt1 = int(t_rel);","frame_eqs_eel":"dx =  rand(1000)/1000-.5;\ndy =  rand(1000)/1000-.5;\n\nx = .5 + dx*(1-q22/4);\ny = .5 + dy*(1-q22/4);\n\nang = time;\n\na = 1;\nrad = .1*q24+0.08 +q22/40;"},{"baseVals":{"additive":1,"textured":1,"x":0.51,"rad":0.249779,"tex_ang":0.125664,"tex_zoom":5.536972,"r":0.6,"g":0.3,"b":0.4,"a":0.6,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = max(q22-2,0);"}],"waves":[{"baseVals":{"enabled":1,"samples":256,"spectrum":1,"usedots":1,"scaling":0.5033,"g":0.6,"b":0.4},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\nt_abs = sample;\nt_rel = sample-time/1;\nampl = time;\n\nox = ampl*10*sin (t_abs*68);\noy = ampl*10*cos (t_abs*28);\noz = ampl*10*cos (t_abs*128);\n\n\nr = 1;\ng = .5 ;\nb = 1 ;\na=q26/18;\n\nxang = t1 ;\nyang = t1*2;\nzang = t1;\nfov = 0.12;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = -ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;"},{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"a = max(sin(time/8)-.5,0);\nr = .4; g = .2; b = .7;\n\nx = sample + .01*cos(sample*243+time);\ny = .5+.5*sin(time/13) + .02*sin(sample*143);\na = .7 ;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb);\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_slow * p2+ (1-dec_slow)*p1;\nrott = p2 * 3.14159265359/2;\n\nq27 = 8-index;\nq28 = .5 + sin(time/7)/10;\nq29 = index4;\n\nmv_a = 0.2;\nt_rel = time/3;\nwave_a = max(sin(time/8)-.5,0);\nwave_a = 0;\nwave_x = .5+.5*sin(time/13);\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nmovez = movez + .01 * 30/fps ;\nq29 = movez;\n\n\nzoom = 1;\nrot = .0;\ndx = .003","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.03);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((0.99 * texture (sampler_main, (uv + \n    (((clamp (\n      (sin(tmpvar_1) / cos(tmpvar_1))\n    , vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(\n      (tmpvar_1.yx * tmpvar_1.yx)\n    )) * texsize.zw) * 12.0)\n  )).xyz) - 0.01);\n  ret = tmpvar_2.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_3 = (1.0 - fract((0.25 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, fract(\n    (((2.0 * uv_1) * dist_3) + 0.5)\n  )).xyz * inten_2));\n  xlat_mutableuv2.x = -(uv_1.y);\n  xlat_mutableuv2.y = uv_1.x;\n  dist_3 = (1.0 - fract((0.5 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\n    (((2.0 * xlat_mutableuv2) * dist_3) + 0.5)\n  )).xyz * inten_2));\n  dist_3 = (1.0 - fract((0.75 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\n    (((2.0 * uv_1) * dist_3) + 0.5)\n  )).xyz * inten_2));\n  xlat_mutableuv2.x = -(uv_1.y);\n  xlat_mutableuv2.y = uv_1.x;\n  dist_3 = (1.0 - fract((1.0 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\n    (((2.0 * xlat_mutableuv2) * dist_3) + 0.5)\n  )).xyz * inten_2));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (xlat_mutableret1 * 3.0);\n  ret = tmpvar_4.xyz;\n }"}