{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.02,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":4.8,"mv_dx":0.4,"mv_l":1,"mv_r":0,"mv_g":0.5,"mv_a":0.1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"x":1,"y":0.59,"rad":0.55923,"ang":3.39292,"tex_zoom":100,"r":0,"g":1,"b":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/10)*0.1+0.5+(treb_att*0.1);"},{"baseVals":{"sides":13,"additive":1,"x":0.9,"y":0.84,"rad":0.36457,"ang":3.07876,"tex_zoom":4.14146,"r":0.25,"g":0.05,"a":0.2,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//additive=above(sin(time*50),.95);"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"x":0.3,"y":0.7,"rad":1.08925,"ang":0.81681,"tex_ang":3.14159,"tex_zoom":0.50422,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//tex_ang=(sin(time/4)*0.5+0.5)*6.28;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.28428,"ang":3.14159,"tex_ang":4.90089,"tex_zoom":2.98776,"g":1,"b":1,"r2":0.95,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"ang=time/10;\ntex_zoom=3.4+(bass*0.03);\nvar=above(bass_att,0.7);\na=var;\na2=var;\nborder_a=var;\n\n\n//This preset fluctuates between 53.2 and 55.44 fps on my box.  Texture size_2048 Meshsize_36*24\n//On a SuperScan Pro 800 Hitachi\n//On a Radion_9600\n//1280*1024_Screen_Resolution\n//;) hello! I am ATHEN ANDANDA!"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"a":0.06},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xspout=.5;\nyspout=-.01;\n\npphase=9999*sample*sample*.0001;\npphase2=.1+((sample*3349*sample)%100)*.01;\npheight=((sample*9893)%100)*.002;\nyheight=((sample*1231*sample)%100)*.01;\n\nr=((sample*5454)%100)*.01*abs(sin(time*.25));\ng=((sample*9954)%100)*.01;\n\nxoffset1=(cos((time*pphase2)+pphase)*pheight);\nxoffset2=-1*(cos((time*pphase2)+pphase)*pheight);\n\nlrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);\n\npx=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);\n\npy=yspout+(abs(sin((time*pphase2)+pphase))*yheight);\n\nx=px;\ny=py;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"pphase=(sample*5671*cos(time*.0001));\npheight=((sample*7654)%100)*.005*sin(time*.2);\n\n//xspout=.5;\nxspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),xspout);\n//yspout=.5;\nyspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),yspout);\n\npx=xspout+(cos(time+pphase)*pheight);\npy=yspout+(sin(time+pphase)*pheight);\n\nx=px;\ny=py;\na=abs(sin(time*.2)*.3+(treb_att*.1));\n\nr=treb*2;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs*4;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.1-0.05)*(sample);\nzp=0;\n\n//spin;\nang=tm*20 + sin(tm*76 + time*4)*0.4;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*2);\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*2.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*1)*1.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm);\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+1.5;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1;\n\nt7=.0;\nt8=.45;\n\nddx=.25*cos(5.7119*t1)+2.5963*t1*sin(5.7119*t1);\nddy=.3125*sin(5.7119*t1)-3.2453*t1*cos(5.7119*t1);\nddtan=atan2(ddy,ddx);\nt2=-ddtan;\n\nval1=((-.5*cos(5.7119*t1))*cos(t2)-(-.625*sin(5.7119*t1))*sin(t2));\nval2=((-.5*cos(5.7119*t1))*sin(t2)+(-.625*sin(5.7119*t1))*cos(t2));\n\nt6=-sign(t1);\nt7=t7-val1;\nt8=t8-val2;\n\nt3=q2;","point_eqs_eel":"sample=pow(sample,.85);\n\nc1=6.2831*t1/(1.1-sample);\nc=cos(c1);\ns=sin(c1);\nc2=sqrt(1-sample);\n\nox=t7-.5*c2*c;\noy=t8-.625*c2*s;\n\nx=t7+((ox-t7)*cos(t2)-(oy-t8)*sin(t2));\ny=t8+((ox-t7)*sin(t2)+(oy-t8)*cos(t2));\n\ninv=1/sqr(1.1-sample);\nfdx=-.25*pow(1-sample,-.5)*c-c2*s*3.1415*t1*inv;\nfdy=-.3125*c2*s+3.9268*c2*c*t1*inv;\ninvMag=1/sqrt(sqr(fdx)+sqr(fdy));\nfdx=fdx*invMag;\nfdy=fdy*invMag;\n\nrdx=fdx*cos(1.5707+t2)-fdy*sin(1.5707+t2);\nrdy=fdx*sin(1.5707+t2)+fdx*cos(1.5707+t2);\ntt=int(rand(100))/100;\nx=x+rdx*(.15*tt)*(1-sample);\ny=y+rdy*(.15*tt)*(1-sample);\n\nx=x*.55;\ny=(y-.5)*.55+.5;\n\nr=sample;\ng=1-sample;\nb=1;\na=below(sample,.995);\n\n\ny=y+t3;"}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\n\nframethird = frame%3;\n\nx1 = 0.5 + 0.15*sin(0.416*time) + 0.15*sin(0.832*time) + 0.1*sin(1.324*time);\nx2 = 0.5 + 0.15*sin(0.341*time) + 0.15*sin(0.768*time) + 0.1*sin(1.523*time);\nx3 = 0.5 + 0.15*sin(0.287*time) + 0.15*sin(0.913*time) + 0.1*sin(1.142*time);\nr1 = 0.5 + 0.15*sin(0.512*time) + 0.15*sin(0.943*time) + 0.1*sin(1.024*time);\nr2 = 0.5 + 0.15*sin(0.483*time) + 0.15*sin(0.879*time) + 0.1*sin(1.423*time);\nr3 = 0.5 + 0.15*sin(0.531*time) + 0.15*sin(0.671*time) + 0.1*sin(1.442*time);\ng1 = 0.5 + 0.15*sin(0.248*time) + 0.15*sin(0.829*time) + 0.1*sin(1.623*time);\ng2 = 0.5 + 0.15*sin(0.461*time) + 0.15*sin(0.699*time) + 0.1*sin(1.254*time);\ng3 = 0.5 + 0.15*sin(0.397*time) + 0.15*sin(0.768*time) + 0.1*sin(1.157*time);\nb1 = 0.5 + 0.15*sin(0.211*time) + 0.15*sin(0.652*time) + 0.1*sin(1.865*time);\nb2 = 0.5 + 0.15*sin(0.333*time) + 0.15*sin(0.978*time) + 0.1*sin(1.359*time);\nb3 = 0.5 + 0.15*sin(0.475*time) + 0.15*sin(0.791*time) + 0.1*sin(1.011*time);\nwave_x = if(equal(framethird,0),x1,if(equal(framethird,1),x2,x3));\nwave_r = if(equal(framethird,0),r1,if(equal(framethird,1),r2,r3));\nwave_g = if(equal(framethird,0),g1,if(equal(framethird,1),g2,g3));\nwave_b = if(equal(framethird,0),b1,if(equal(framethird,1),b2,b3));\n\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.99 + (1-above(time - lastbeat, 2*beatrate))*0.998);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\ndx = if(beat,1-2*int(rand(2)),0);\nob_a = if(beat,0,0.65);\nmv_a = if(beat,1,0.05);","pixel_eqs_eel":"dy = 0.004 + 0.0005*sin(10*x+0.459*time) + 0.0005*sin(14*x+0.325*time) + 0.0005*sin(1.231*time);\n//dx = dx + 0.0001*sin(9*y+0.612*time) + 0.0001*sin(13*y+0.429*time) + 0.0001*sin(1.027*time);","warp":" shader_body { \n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv1_2 = (tmpvar_3 + ((-0.01 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv1_2 = (uv1_2 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((0.5 * (\n    ((texture (sampler_main, ((uv1_2 * \n      (0.8 + (0.2 * tmpvar_5))\n    ) + 0.5)).xyz + (vec3((0.01 / \n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\n    )) * (0.3 * \n      (1.0 + roam_cos)\n    ).xyz)) * 0.96)\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }"}