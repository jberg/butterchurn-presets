{"version":2,"baseVals":{"rating":3,"decay":0.975,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":2,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":100,"wave_scale":27.455,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpscale":1.772,"zoomexp":1.001,"zoom":1.007,"warp":0,"mv_y":8.64,"mv_l":1.455,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"x":0.455,"rad":0.43233,"r":0.5,"g":0.5,"r2":0.57,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\n\nrad=rad*sounds*0.6;\n\nr=r+sin(bass)*g;\ng=g+sin(mid)*g;\n\n\nx=x+0.207*cos(time*bass*0.1);\ny=y+0.2029*sin(time*bass*0.09);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"tex_zoom":0.91,"r2":1,"a2":0.318,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\ng2=g2+0.09*sin((treb+mid)*1.23);\ng=g+0.09*cos((bass+mid)*1.37);\n\nsounds=(bass+mid+treb)/3;\n\nrad=rad*(treb+mid)/3;\n\nx=x+0.300*sin(time*bass);\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.445,"b2":0.94,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\natt=(bass_att+treb_att+mid_att)/3;\natt=(bass_att+treb_att+mid_att)/3;\nr2=r2+(0.25*sin(time*6.28))-bass;\ng2=g2+(0.25*sin(time*6.28))-bass;\n\nrad=rad;\nx=x+0.243*cos(time*2.3)+sounds*0.09;\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"x":0.475,"border_g":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"smoothing":0.435,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"smoothing":0.51,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.91,"smoothing":0.45,"b":0.91,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.08,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_x = wave_x + 0.2*( 0.60*sin(2.121*time) + 0.5*sin(1.621*time) );\nwave_y = wave_y + 0.2*( 0.60*sin(1.742*time) + 0.5*sin(2.322*time) );\nwave_r = wave_r + 0.200*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );\nwave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );","pixel_eqs_eel":"zoom = zoom + 0.01 * ( sin(2*cos(3*(sqrt(2)-rad)*ang)) + 1 );","warp":" shader_body { \n  vec2 my_uv_1;\n  vec2 d_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  d_2 = -(tmpvar_4);\n  float tmpvar_8;\n  tmpvar_8 = (d_2 * 4.0).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.y;\n  tmpvar_9.y = tmpvar_6.y;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_5.x;\n  tmpvar_10.y = tmpvar_6.x;\n  vec2 tmpvar_11;\n  tmpvar_11 = ((uv - (tmpvar_9 * d_2)) - (tmpvar_10 * tmpvar_8));\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\n  ret_3.y = (ret_3.y + ((\n    (ret_3.y - tmpvar_7.y)\n   * 0.042) + -0.0075));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_5.x;\n  tmpvar_12.y = tmpvar_6.x;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_5.z;\n  tmpvar_13.y = tmpvar_6.z;\n  my_uv_1 = ((uv - (tmpvar_12 * d_2)) - (tmpvar_13 * tmpvar_8));\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\n  ret_3.x = (ret_3.x + ((\n    (ret_3.x - tmpvar_7.x)\n   * 0.042) + -0.0075));\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_5.z;\n  tmpvar_14.y = tmpvar_6.z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_5.y;\n  tmpvar_15.y = tmpvar_6.y;\n  my_uv_1 = ((uv - (tmpvar_14 * d_2)) - (tmpvar_15 * tmpvar_8));\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_3.z = (ret_3.z + ((\n    (ret_3.z - tmpvar_7.z)\n   * 0.042) + -0.0075));\n  vec4 tmpvar_16;\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.04, 0.02, 0.02) * my_uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(2.3, 2.3, 1.8)) * q29)));\n  if (((ret_3.x > (q21 * q13)) && (ret_3.x <= (q24 * q11)))) {\n    ret_3.y = (ret_3.y - (tmpvar_16.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * q11)) && (ret_3.y <= (q25 * q12)))) {\n    ret_3.z = (ret_3.z - (tmpvar_16.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * q12)) && (ret_3.z <= (q26 * q13)))) {\n    ret_3.x = (ret_3.x - (tmpvar_16.z * 0.5));\n  };\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_3;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (((vec3(2.8, 2.8, 1.2) * tmpvar_2.x) + (vec3(2.0, 0.4, 2.0) * tmpvar_2.y)) + (vec3(0.1, 1.3, 1.2) * tmpvar_2.z));\n  ret_1 = (ret_1 * 0.37);\n  ret_1 = ((ret_1 * ret_1) * (1.0 + (\n    clamp (((cos(\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 17.0) + 3.0) + (uv.x * 30.0))\n    ) * 3.0) - 2.7), 0.0, 1.0)\n   * 4.0)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }"}