{"version":2,"baseVals":{"rating":1,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":4.77802,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.005,"ob_a":0.5,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\nyq=-yp;\nzq=zp;\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.72,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=0;\n\n//wrist movement;\nang=sin(tm*1.9)*0.5 +0.5;\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm*0.9)*0.5 - 0.5;\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=-xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.7,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=0;\n\n//wrist movement;\nang=sin(tm*1.9)*0.5 +0.5;\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\nyq=-yp;\nzq=zp;\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm*0.9)*0.5 - 0.5;\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=-xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.999;\nwrap=sin(time*10);\nmv_dx=bass;\nib_a=.005;\n\n\nvol=(bass+mid+treb)*0.55;\nvol=vol*vol;\n\nmtime=mtime+vol*0.01*(48/fps);\n\nq1=mtime*0.5;\n\n\ndt=1/FPS;\nmytime=mytime+dt;\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.133 ) ,2 ) ;\nq2=contvol;\nq3=mytime;\necho_zoom=1+(vol*0.01);\nsx=-.019-sin(time)*0.1+0.5;","pixel_eqs_eel":"zoom=1.005-(rad/100);\nrot=rad/100;\n//sy=-1.02;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz * 0.85);\n  ret_1 = (ret_1 - 0.002);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (tmpvar_5 * 2.5);\n  uv2_3.y = (tmpvar_6.y + (0.25 * time));\n  uv2_3.x = (tmpvar_7 + (time / 32.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 2.5);\n  uv3_2.x = tmpvar_8.x;\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.5 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }"}