{"version":2,"baseVals":{"rating":3,"gammaadj":1.07,"decay":0.95,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"invert":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nvol = (bass_att + mid_att + treb_att)*0.33;\nvol = 0.2 + 0.5*(value1 + value2);\nvol = .2;\n\nmod = if(below(mid_att,1.8),mid_att+.2,2);\n\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\noy = (sample - 0)*mod;\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\n\nxang = time*0.672;\naxang = 0;\nyang = time*-1.351;\nayang = 0;\nzang = time*-0.401;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = abs(oz) - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1 + sin(sp);\nb = 0.5 + 0.5*sin(sample*1.57);\ng = 0.5 + 0.5*cos(sample*1.57);\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nvol = (bass_att + mid_att + treb_att)*0.33;\nvol = 0.2 + 0.5*(value1 + value2);\nvol = .2;\n\nmod = if(below(bass_att,1.8),bass_att+.2,2);\n\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\noy = (sample - 0)*mod;\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\n\nxang = time*-0.321;\naxang = 0;\nyang = time*1.531;\nayang = 0;\nzang = time*-0.101;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = abs(oz) - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\ng = 1 + sin(sp);\nr = 0.5 + 0.5*sin(sample*1.57);\nb = 0.5 + 0.5*cos(sample*1.57);\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nvol = (bass_att + mid_att + treb_att)*0.33;\nvol = 0.2 + 0.5*(value1 + value2);\nvol = .2;\n\nmod = if(below(treb_att,1.8),treb_att+.2,2);\n\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\noy = (sample - 0)*mod;\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\n\nxang = time*0.221;\naxang = 0;\nyang = time*-0.411;\nayang = 0;\nzang = time*1.201;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = abs(oz) - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nb = 1+sin(sp);\ng = 0.5 + 0.5*sin(sample*1.57);\nr = 0.5 + 0.5*cos(sample*1.57);\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;","pixel_eqs_eel":"it = 0.3*sin(time*0.2);\nradm = rad*0.5;\nrot = 0.02*sin((radm+it)*20);\nmod = sin(ang*5);\nmod = mod*mod*mod*mod*mod;\nzoom = 1 + abs(0.01*mod);\n\nzoom *= min(1.05,max(1,max(bass,treb)));","warp":" shader_body { \n  vec3 xfer_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  tmpvar_3 = texture (sampler_main, (tmpvar_4 + 0.5));\n  ret_2 = (tmpvar_3.xyz / ((tmpvar_3.x + tmpvar_3.y) + tmpvar_3.z));\n  ret_2 = texture (sampler_main, ((tmpvar_4 * dot (ret_2, vec3(1.0, 0.975, 0.95))) + 0.5)).xyz;\n  vec3 tmpvar_5;\n  tmpvar_5 = clamp (((ret_2 - 0.05) * 99.0), 0.0, 1.0);\n  xfer_1.x = tmpvar_5.x;\n  xfer_1.yz = (tmpvar_5.yz * clamp ((\n    (0.1 - ret_2.xy)\n   * 99.0), 0.0, 1.0));\n  ret_2 = (ret_2 + (vec3(-0.014, 0.014, 0.0) * tmpvar_5.xxx));\n  ret_2 = (ret_2 + (vec3(0.0, -0.08, 0.08) * xfer_1.yyy));\n  ret_2 = (ret_2 + (vec3(0.0, 0.0, -0.02) * xfer_1.zzz));\n  ret_2 = (ret_2 + (vec3(5.0, 15.0, 40.0) * (\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":""}