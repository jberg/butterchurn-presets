{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.99,"echo_zoom":0.9996,"wave_mode":1,"wave_a":3.072644,"wave_scale":1.285746,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.5*Math.sin(1.13*a.time);a.wave_g+=.5*Math.sin(1.23*a.time);a.wave_b+=.5*Math.sin(1.33*a.time);","pixel_eqs_str":"a.zoom+=.05*(Math.sin(6*a.ang)+.3*Math.sin(Math.sin(2*a.time*Math.sin(a.time)*a.rad))-.1*Math.cos(a.rad));a.rot+=.5*Math.sin(.5-a.rad)*Math.cos(.02*(.5-a.rad)+a.time);a.sx+=.01*(.99-a.rad)*Math.sin(.733*a.time)*below(Math.sin(a.time),0);a.sy+=.01*(.99-a.rad)*Math.cos(.953*a.time)*above(Math.sin(a.time),0);a.zoom-=.05*(1-a.rad)*below(a.rad,.5);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\nwave_g = wave_g + 0.5*sin(time*1.23);\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.05*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\nrot = rot + 0.5*sin(0.5-rad)*cos(0.02*(0.5-rad)+time);\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\nzoom = zoom - 0.05*(1-rad)*below(rad,0.5);","warp":"","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = cos((uv.x * 37.0));\n  tmpvar_1.y = sin((uv.y * 29.0));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, (uv + (0.045 * tmpvar_1))).xyz);\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    //uv.y = rad*rad;\n    float srad = sqrt(rad)+ 0.05;\n\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = max(ret, tex2D(sampler_main, uv + 0.045*float2(cos(uv.x*37),sin(uv.y*29))).xyz);\n\n    //ret += GetBlur1(uv) - 0.07;\n    //ret *= float3(1.3,0.8,0.5);\n    //ret *= 0.8;    \n}"}