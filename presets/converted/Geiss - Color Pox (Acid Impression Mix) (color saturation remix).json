{"version":2,"baseVals":{"rating":3,"decay":1,"wave_mode":6,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":2.965,"wave_scale":23.563,"wave_smoothing":0.9,"modwavealphastart":0.83,"modwavealphaend":1.15,"warpscale":1.772,"zoomexp":4.401,"zoom":1.011,"rot":0.003,"warp":0,"wave_r":0.49,"wave_g":0.49,"wave_b":0.49,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"t = time*12.3;\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time*5) + 0.30*sin(1.821*time*15) );\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time*5) + 0.70*sin(2.522*time*15) );\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\nrot = rot + 0.030*( 0.60*sin(0.38*time) + 0.40*sin(0.54*time+4) );\nzoom = zoom + 0.015*( 0.60*sin(0.29*time+1) + 0.40*sin(0.43*time+2) );\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    ((texture (sampler_main, uv).xyz - ((\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1) * 5.0)).xy * texsize.zw)\n   * 3.0))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * texsize_noise_lq.zw)).xyz * 2.0)\n   - 1.0) * 0.013));\n  ret_1 = (ret_1 - 0.00014);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  tmpvar_3.xy = texsize.zw;\n  vec3 tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * 1.25);\n  ret_1 = (mix (vec3(dot (tmpvar_2.xyz, vec3(0.3333, 0.3333, 0.3333))), tmpvar_2.xyz, vec3(1.8, 1.8, 1.8)) * 0.5);\n  ret_1 = (ret_1 + (vec3(5.4, 3.78, 1.62) * clamp (\n    (dot (((texture (sampler_blur1, \n      (uv + tmpvar_4.xz)\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \n      (uv - tmpvar_4.xz)\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\n  , 0.0, 1.0)));\n  ret_1 = (ret_1 + (vec3(1.08, 2.7, 3.78) * clamp (\n    (dot (((texture (sampler_blur1, \n      (uv + tmpvar_4.zy)\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \n      (uv - tmpvar_4.zy)\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\n  , 0.0, 1.0)));\n  ret_1 = (ret_1 * 1.6);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }"}