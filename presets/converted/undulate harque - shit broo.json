{"version":2,"baseVals":{"rating":5,"gammaadj":2.63,"decay":0.91,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":0.18,"zoom":0.99951,"warp":0.00909,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":5.3898,"tex_ang":1.19381,"tex_zoom":0.18923,"g":0.97,"b":1,"a":0.94,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":3.99882,"tex_zoom":0.25005,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":18,"textured":1,"num_inst":10,"x":0.463,"rad":1.60089,"tex_zoom":0.67634,"g":1,"b":1,"r2":0.7,"g2":0.8,"b2":0.8,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"num_inst":353,"x":0.503,"rad":0.0376,"tex_zoom":1.11234,"g":1,"b":1,"g2":0,"border_a":0.06},"init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\nrad=.05+.04*sin(sample);\n\n/////  Knot\n\nq10=250*sample;\nmy_x = -.22*cos(q10)-1.28*sin(q10)-.44*cos(3*q10)-.78*sin(3*q10);\nmy_y= -.1*cos(2*q10)-.27*sin(2*q10)+.38*cos(4*q10)+.46*sin(4*q10);\nmy_z=.7*cos(3*q10)-.4*sin(3*q10);\n\n\n/////// rotations... by flexi\n\nd = .2; \nzoom = 1;\n\nw3 = q1;\nw2 = q2;\nw1 = q3;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\np1 = .2*sin(sample*50);\np2 = .2*sin(sample*80);\n\nx = .5+my_x*p1;\ny = .5+my_y*p2;\n\nr = .4*sin(sample*80);\nb = .8*sin(sample*66);\ng = .6*sin(sample*120);"}],"waves":[{"baseVals":{"spectrum":1,"additive":1,"smoothing":0,"r":0.4,"g":0.4,"b":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"r":0,"g":0,"b":0,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 2;\ny1= 2;\nz1 = 2;","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1   = (vvb+vvm+vvt)*10;\nq2   = (vvb+vvm+vvt)*10;\nq3   = (vvb+vvm+vvt)*10;\nq4   = (vvb+vvm+vvt)*10;\nq5   = (vvb+vvm+vvt)*10;\nq6   = (vvb+vvm+vvt)*10;\nq7   = (vvb+vvm+vvt)*10;\nq8   = (vvb+vvm+vvt)*10;\nq9   = (vvb+vvm+vvt)*10;\nq10  = (vvb+vvm+vvt)*10;\nq11  = (vvb+vvm+vvt)*10;\nq12  = (vvb+vvm+vvt)*10;\nq13  = (vvb+vvm+vvt)*10;\nq14  = (vvb+vvm+vvt)*10;\nq15  = (vvb+vvm+vvt)*10;\nq16  = (vvb+vvm+vvt)*10;\nq17  = (vvb+vvm+vvt)*10;\nq18  = (vvb+vvm+vvt)*10;\nq19  = (vvb+vvm+vvt)*10;\nq20  = (vvb+vvm+vvt)*10;\nq21  = (vvb+vvm+vvt)*10;\nq22  = (vvb+vvm+vvt)*10;\nq23  = (vvb+vvm+vvt)*10;\nq24  = (vvb+vvm+vvt)*10;\nq25  = (vvb+vvm+vvt)*10;\nq26  = (vvb+vvm+vvt)*10;\nq27  = (vvb+vvm+vvt)*10;\nq28  = (vvb+vvm+vvt)*10;\nq29  = (vvb+vvm+vvt)*10;\nq30  = (vvb+vvm+vvt)*10;\nq31  = (vvb+vvm+vvt)*10;\nq32  = (vvb+vvm+vvt)*10;\n\nq1 = aspectx;\nq2 = aspecty;\nwave_a = 0;\nv = 0.5;\nj1 = j1*0.95 + sqr(bass*4)*v;\nj2 = j2*0.95 + sqr(mid*4)*v;\nj3 = j3*0.95 + sqr(treb*4)*v;\n\nn = n + j1*0.0052;\nn1 = n1 + j2*0.0052;\nn2 = n2 + j3*0.0052;\n\n\nq3 = n*0.01; // passing the 3 room angles\nq4 = n1*0.01;\nq5 = n2*0.01;\n\n\n// lorenz-attractor calc\na = 10;\nb = 28;\nc = 8/3;\ndx1 = a*(y1-x1);\ndy1 = x1*(b-z1)-y1;\ndz1 = x1*y1-c*z1;\nd = 1;\ndd = sqrt(dx1*dx1 + dy1*dy1 + dz1*dz1);\nx1 = x1 + d*dx1/dd;\ny1 = y1 + d*dy1/dd;\nz1 = z1 + d*dz1/dd;\n\nq11 = x1;\nq12 = y1;\nq13 = z1;\nq14 = a;\nq15 = b;\nq16 = c;\nq17 = d;","pixel_eqs_eel":"cx1 = 0.5+sin(time*0.618)*0.2;\ncy1 = 0.5+cos(time*1.618)*0.2;\n\ndir = bass;\n\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\n\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\n\n\ncx1 = 0.5+sin(time*2.618)*0.3;\ncy1 = 0.5+cos(time*3.14)*0.3;\n\ndir = -mid*2;\n\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\n\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\n\ncx1 = 0.5+sin(-time*2.618)*0.4;\ncy1 = 0.5+cos(-time*1.14)*0.4;\n\ndir = treb*3;\n\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\n\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\n\n\ndx = dx+x1+x2+x3;\ndy = dy+y1+y2+y3;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_main, (\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \n      mix (uv_orig, uv, vec2(4.0, 4.0))\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\n   + \n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\n  )).xyz + (\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\n   * 0.006).xyz) + -0.0006);\n  ret = tmpvar_2.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\nvec2 xlat_mutableuv4;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec3 ret_4;\n  uv_1 = (uv - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (time / 4.0);\n  dist_3 = (1.0 - fract(tmpvar_5));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_6;\n  tmpvar_6.y = 0.0;\n  float tmpvar_7;\n  tmpvar_7 = (time / 8.0);\n  tmpvar_6.x = tmpvar_7;\n  xlat_mutableuv3 = (((\n    (2.0 * uv_1)\n   * dist_3) + 0.4) + tmpvar_6);\n  vec2 tmpvar_8;\n  tmpvar_8.y = 0.0;\n  tmpvar_8.x = texsize.z;\n  vec2 tmpvar_9;\n  tmpvar_9.y = 0.0;\n  tmpvar_9.x = texsize.z;\n  xlat_mutabledz.x = (inten_2 * dot ((texture (sampler_main, \n    (xlat_mutableuv3 + tmpvar_8)\n  ).xyz - texture (sampler_main, \n    (xlat_mutableuv3 - tmpvar_9)\n  ).xyz), vec3(0.32, 0.49, 0.29)));\n  vec2 tmpvar_10;\n  tmpvar_10.x = 0.0;\n  tmpvar_10.y = texsize.w;\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.0;\n  tmpvar_11.y = texsize.w;\n  xlat_mutabledz.y = (inten_2 * dot ((texture (sampler_main, \n    (xlat_mutableuv3 + tmpvar_10)\n  ).xyz - texture (sampler_main, \n    (xlat_mutableuv3 - tmpvar_11)\n  ).xyz), vec3(0.32, 0.49, 0.29)));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\n  dist_3 = (1.0 - fract((0.2 + tmpvar_5)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_12;\n  tmpvar_12.y = 0.0;\n  tmpvar_12.x = tmpvar_7;\n  xlat_mutableuv3 = (((\n    (2.0 * uv_1)\n   * dist_3) + 0.4) + tmpvar_12);\n  vec2 tmpvar_13;\n  tmpvar_13.y = 0.0;\n  tmpvar_13.x = texsize.z;\n  vec2 tmpvar_14;\n  tmpvar_14.y = 0.0;\n  tmpvar_14.x = texsize.z;\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_13)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_14)).xyz)\n  , vec3(0.32, 0.49, 0.29))));\n  vec2 tmpvar_15;\n  tmpvar_15.x = 0.0;\n  tmpvar_15.y = texsize.w;\n  vec2 tmpvar_16;\n  tmpvar_16.x = 0.0;\n  tmpvar_16.y = texsize.w;\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_15)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_16)).xyz)\n  , vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\n  dist_3 = (1.0 - fract((0.4 + tmpvar_5)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_17;\n  tmpvar_17.y = 0.0;\n  tmpvar_17.x = tmpvar_7;\n  xlat_mutableuv3 = (((\n    (2.0 * uv_1)\n   * dist_3) + 0.4) + tmpvar_17);\n  vec2 tmpvar_18;\n  tmpvar_18.y = 0.0;\n  tmpvar_18.x = texsize.z;\n  vec2 tmpvar_19;\n  tmpvar_19.y = 0.0;\n  tmpvar_19.x = texsize.z;\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_18)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_19)).xyz)\n  , vec3(0.32, 0.49, 0.29))));\n  vec2 tmpvar_20;\n  tmpvar_20.x = 0.0;\n  tmpvar_20.y = texsize.w;\n  vec2 tmpvar_21;\n  tmpvar_21.x = 0.0;\n  tmpvar_21.y = texsize.w;\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_20)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_21)).xyz)\n  , vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\n  dist_3 = (1.0 - fract((0.6 + tmpvar_5)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_22;\n  tmpvar_22.y = 0.0;\n  tmpvar_22.x = tmpvar_7;\n  xlat_mutableuv3 = (((\n    (2.0 * uv_1)\n   * dist_3) + 0.4) + tmpvar_22);\n  vec2 tmpvar_23;\n  tmpvar_23.y = 0.0;\n  tmpvar_23.x = texsize.z;\n  vec2 tmpvar_24;\n  tmpvar_24.y = 0.0;\n  tmpvar_24.x = texsize.z;\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_23)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_24)).xyz)\n  , vec3(0.32, 0.49, 0.29))));\n  vec2 tmpvar_25;\n  tmpvar_25.x = 0.0;\n  tmpvar_25.y = texsize.w;\n  vec2 tmpvar_26;\n  tmpvar_26.x = 0.0;\n  tmpvar_26.y = texsize.w;\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_25)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_26)).xyz)\n  , vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\n  uv_1 = (uv_1 + (xlat_mutabledz * 14.0));\n  xlat_mutableuv4 = (uv_1 - vec2(0.2, -0.1));\n  float tmpvar_27;\n  tmpvar_27 = (0.5 * clamp ((1.0/(\n    (abs(uv_1.y) + 0.1)\n  )), 0.0, 12.0));\n  vec2 tmpvar_28;\n  tmpvar_28.x = (uv_1.x * tmpvar_27);\n  tmpvar_28.y = tmpvar_27;\n  vec3 tmpvar_29;\n  tmpvar_29.xy = vec2(0.0, 0.0);\n  tmpvar_29.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\n  ret_4 = (vec3(0.0, 0.1, 0.1) + (0.1 * tmpvar_29));\n  ret_4 = (ret_4 + (vec3(dot (texture (sampler_noise_hq, \n    (tmpvar_28 + (0.04 * time))\n  ), vec4(0.32, 0.49, 0.29, 0.0))) * (\n    (clamp ((1.0 - (12.0 * uv_1.y)), 0.0, 1.0) * 0.1)\n   / \n    (0.03 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4)))\n  )));\n  ret_4 = (ret_4 + ((0.4 * xlat_mutableret1) + (xlat_mutableret1 * q22)));\n  vec4 tmpvar_30;\n  tmpvar_30.w = 1.0;\n  tmpvar_30.xyz = ret_4;\n  ret = tmpvar_30.xyz;\n }"}