{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_dots":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":4.574,"wave_scale":1.286,"wave_smoothing":0.81,"modwavealphastart":0.54,"modwavealphaend":1,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_l":0,"mv_a":0,"b3x":0.2},"shapes":[{"baseVals":{"enabled":1,"sides":16,"textured":1,"rad":1.18647,"tex_zoom":1.66609,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = .8;\na = max(0,q29);"},{"baseVals":{"sides":40,"textured":1,"x":0.1,"y":0.8,"rad":0.83346,"ang":3.14159,"tex_ang":5.40354,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"textured":1,"x":0.8,"y":0.2,"rad":0.41532,"ang":3.14159,"tex_ang":5.40354,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"textured":1,"rad":1.84754,"ang":3.14159,"tex_ang":5.59203,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nra = .1;\nlen = if(above(q6,0),if(below(len,sz),len + ra*sz*tic,min(sz,len)),if(above(len,0),len - ra*sz*tic,max(0,len)));\nt4 = len;","point_eqs_eel":"ang = 0;\nlen = t4;\nmad = .6;\n\nit = if(above(sample,0),(it+equal(lev,7)),1);\nita = (ita + 1)*above(sample,0);\n\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\n\nsw = sw - 1;\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\n\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\na = lev*.1*1.46;\na = equal(lev,7) + equal(lev,4) + equal(lev,1);\n\nar = if(above(sample,0),ar,1);\nar = if(equal(lev,0),ar*-1,ar);\nbr = if(above(sample,0),br,1);\nbr = if(equal(lev,1),br*-1,br);\ncr = if(above(sample,0),cr,1);\ncr = if(equal(lev,2),cr*-1,cr);\ndr = if(above(sample,0),dr,1);\ndr = if(equal(lev,3),dr*-1,dr);\ner = if(above(sample,0),er,1);\ner = if(equal(lev,4),er*-1,er);\nfr = if(above(sample,0),fr,1);\nfr = if(equal(lev,5),fr*-1,fr);\ngr = if(above(sample,0),gr,1);\ngr = if(equal(lev,6),gr*-1,gr);\n\nmlev = lev*above(sample,0);\n\nswi = equal(q4,0)*equal(sample,0);\n\nha = if(swi,1-2*rand(2),ha);\nhb = if(swi,1-2*rand(2),hb);\nhc = if(swi,1-2*rand(2),hc);\nhd = if(swi,1-2*rand(2),hd);\nhe = if(swi,1-2*rand(2),he);\nhf = if(swi,1-2*rand(2),hf);\nhg = if(swi,1-2*rand(2),hg);\n\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\n\nlen = len*mad;\nx = .5 + above(lev,0)*sin(aang)*len*ar;\ny = 0.5 + above(lev,0)*cos(aang)*len;\n\nan = bang*(ar + br)*br;\nlen = len*mad;\nx = x + above(lev,1)*sin(an)*len*br;\ny = y + above(lev,1)*cos(an)*len;\n\nan = cang*(ar + br + cr)*cr;\nlen = len*mad;\nx = x + above(lev,2)*sin(an)*len*cr;\ny = y + above(lev,2)*cos(an)*len;\n\nan = dang*(ar + br + cr + dr)*dr;\nlen = len*mad;\nx = x + above(lev,3)*sin(an)*len*dr;\ny = y + above(lev,3)*cos(an)*len;\n\nan = eang*(ar + br + cr + dr + er)*er;\nlen = len*mad;\nx = x + above(lev,4)*sin(an)*len*er;\ny = y + above(lev,4)*cos(an)*len;\n\nan = fang*(ar + br + cr + dr + er + fr)*fr;\nlen = len*mad;\nx = x + above(lev,5)*sin(an)*len*fr;\ny = y + above(lev,5)*cos(an)*len;\n\nan = gang*(ar + br + cr + dr + er + fr + gr)*gr;\nlen = len*mad;\nx = x + above(lev,6)*sin(an)*len*gr;\ny = y + above(lev,6)*cos(an)*len;\n\nx = (x-.5)*.75 + .5;\n\ng = t1 + lev*.1;\nr = t2 - lev*.1;\nb = t3;\n\nr = if(equal(q5,1),1,r);\ng = if(equal(q5,2),1,g);\nb = if(equal(q5,3),1,b);\n\nr = r - int(r);\ng = g - int(g);\nb = b - int(b);\n\ny = (y-.5)/q20+.5;"}],"init_eqs_eel":"index = rand(32);\nindex2 = rand(32);","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb);\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, -.5+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %64;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nq29 = 2 * (index2%2-.5);\nq25 = min(1,q22/2);\n\nk1 =  is_beat*equal(index%4,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nq26 = (8+index2*8);\nq27 = index;\nq28 = index2;\n\n\ntrot = index*6.28/4;\nq5 = cos(trot);\nq6 = sin(trot);\nq7 = -q6;\nq8 = q5;\n\nq29= sin(time/4);\nwave_mystery = q29/2;\n\nq30 = .03*(index%32)/32;\n\nmonitor = q30;","pixel_eqs_eel":"zoom = 1 +.02*rad;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\n  float tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  tmpvar_3 = (((tmpvar_4.xyz * scale1) + bias1) * 4.0).x;\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\n  tmpvar_5[1u].x = sin(tmpvar_3);\n  tmpvar_5[1u].y = cos(tmpvar_3);\n  uv_1 = ((tmpvar_2 + (\n    (0.2 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\n   * \n    (tmpvar_2 * tmpvar_5)\n  )) - 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6 = ((uv_1 * texsize.xy) * q30);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\n  uv_1 = (uv_1 - ((tmpvar_7 * texsize.zw) * q26));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ((texture (sampler_main, uv_1).xyz * 0.996) - 0.006);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (1.0 - uv.x);\n  tmpvar_2.y = uv.y;\n  vec3 tmpvar_3;\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\n  vec2 tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur1, uv);\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \n    ((tmpvar_5.xyz * scale1) + bias1)\n  .zzz).xy) + 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = (tmpvar_3 + clamp ((\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_3.x * 2.0))\n  ), 0.0, 1.0));\n  vec3 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 + clamp ((\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_6.x * 2.0))\n  ), 0.0, 1.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 0.0;\n  tmpvar_8.xyz = mix ((vec3((\n    ((tmpvar_5.xyz * scale1) + bias1)\n  .x + \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  .x)) + (\n    ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1)\n  .x + \n    ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3)\n  .x)), tmpvar_7, tmpvar_7);\n  vec2 tmpvar_9;\n  tmpvar_9.x = uv.x;\n  tmpvar_9.y = (1.0 - uv.y);\n  ret_1 = (pow (tmpvar_8, (0.5 + \n    (4.0 * roam_cos)\n  )).xyz + pow ((texture (sampler_main, tmpvar_9).yyy + texture (sampler_main, \n    (1.0 - uv)\n  ).yyy), vec3(0.6, 0.95, 5.0)));\n  ret_1 = (1.0 - exp((-2.0 * ret_1)));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }"}