{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.964,"echo_zoom":1.168,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wave_a":1.204,"wave_scale":1.99,"wave_smoothing":0.963,"wave_mystery":0.104,"modwavealphastart":0.94,"modwavealphaend":1.287,"warpanimspeed":0.01,"warpscale":0.01,"rot":-0.02,"cx":0.53,"warp":0.01,"wave_r":0.97,"wave_g":1.21,"wave_b":0.88,"wave_x":0.98,"wave_y":0.565,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":0.235,"mv_x":10.08,"mv_y":7.47,"mv_l":0.711,"mv_r":1.02,"mv_g":0.79,"mv_b":0.79,"mv_a":0,"b2x":0.85},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"x":0.57,"y":0.49,"rad":0.5516,"tex_zoom":0.83,"r":0.82,"g":1.11,"b":0.96,"a":1.21,"r2":0.89,"g2":1.09,"b2":0.89,"a2":0.83,"border_r":0.86,"border_g":0.87,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.49;\nro = 0;\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.22*((bass_att+treb_att+mid_att)/3);\nbob = bob*above(bob,0.0091) - 0.0091 + 1*(1 - above(bob,0.0091));\nbob = 0.32 + 0.32*sin(time*0.99);\nbob = bob*vol;\nrad = bob;\nborder_1 = 0.46;\nsides = 30;\nro = ro + 0.022;\nang = ro;\nrad = 0.55;\n\nsp = red*0.0253;\nspi = 0.54 - sp;\ntm = time*0.12;\nborder_r = 0.56 + sp*sin(tm*0.68) + spi*cos(tm*1.212);\nborder_g = 0.48 + sp*sin(tm*1.087) + spi*cos(tm*0.705);\nborder_b = 0.49 + sp*sin(tm*1.2337) + spi*cos(tm*0.692);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.4,"y":0.415,"rad":0.113,"tex_zoom":1.24,"r":1.12,"g":1,"b":0.94,"a":1.06,"g2":0,"border_r":0.98,"border_g":1.15,"border_b":1.23,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.43 + 0.43*(sin(time*1.25)*0.24 + 0.466*sin(time*0.43));\nx = 0.51 + 0.2543*sin(time);\ny = 0.59 + 0.31*cos(time);\n\nrad = rad*mid_att;\nr = 0.61 + 0.61*sin(frame*0.61);\nb = 0.5151 + 0.5151*sin(frame*0.5151 + 2.1778);\ng = 0.43 + 0.43*sin(frame*0.43 + 3.1829);\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.38,"y":0.44,"rad":0.084,"tex_zoom":0.95,"r":0.97,"g":0.81,"b":0.78,"a":0.83,"g2":0,"border_r":1.2,"border_g":1.02,"border_b":0.83,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.43 + 0.43*(sin(time*1.05)*0.28 + 0.86*sin(time*0.43));\nx = 0.4 + 0.2183*sin(time + 1.839);\ny = 0.41 + 0.25*cos(time + 1.965);\n\nrad = rad*bass_att;\nr = 0.484 + 0.484*sin(frame*0.484);\nb = 0.41 + 0.41*sin(frame*0.41 + 2.3453);\ng = 0.61 + 0.61*sin(frame*0.61 + 3.6017);\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.41,"y":0.555,"rad":0.083,"tex_zoom":0.83,"r":1.12,"g":1,"b":1.17,"a":1.01,"g2":0,"border_r":1.09,"border_g":0.94,"border_b":0.88,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.42 + 0.42*(sin(time*1.1)*0.26 + 0.86*sin(time*0.42));\nx = 0.52 + 0.2587*sin(time + 4.777);\ny = 0.51 + 0.34*cos(time + 4.902);\n\nrad = rad*treb_att;\nr = 0.428 + 0.428*sin(frame*0.428);\nb = 0.46 + 0.46*sin(frame*0.46 + 2.5547);\ng = 0.411 + 0.411*sin(frame*0.411 + 4.4812);\n"}],"waves":[{"baseVals":{"scaling":1.11,"smoothing":0.485,"r":1.16,"g":0.84,"b":0.9,"a":1.06,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.1,"smoothing":0.4,"r":0.91,"g":0.77,"b":0.93,"a":0.8,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.78,"smoothing":0.465,"r":0.98,"g":1.05,"b":1.22,"a":0.85,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.79,"smoothing":0.62,"r":1.19,"g":0.85,"b":1.12,"a":0.84,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nob_r = 1- 0.4*abs(q1);\nob_g = 0.3*abs(q2);\nob_b = 0.4*abs(q1);\nwave_x = 1-abs(q2)-0.05;\nwave_y = 1-abs(q1)-0.056;\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"zoom = zoom + 0.06*sin(rad*12 + ang*3 + time*-3.4)*(1-rad);\nrot = rot * (1-rad);","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((ret_2.y - \n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\n  .y) * 0.2));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 0.0;\n  tmpvar_17.xyz = ret_2;\n  vec3 tmpvar_18;\n  tmpvar_18 = mix (tmpvar_17, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\n  ret_2 = tmpvar_18;\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = tmpvar_18;\n  ret = tmpvar_19.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv);\n  ret_1 = (mix (vec3((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .x + \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  .x)), tmpvar_2.xxx, pow (tmpvar_2.xxx, vec3(0.5, 0.5, 0.5))) * 2.7);\n  vec2 tmpvar_4;\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \n    ((tmpvar_3.xyz * scale1) + bias1)\n  .zzz).xy) + 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = (ret_1 + clamp ((\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    ((1.0 - ((tmpvar_3.xyz * scale1) + bias1).x) - ret_1.x)\n  ), 0.0, 1.0));\n  ret_1 = (((\n    pow ((tmpvar_5 + clamp ((\n      pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n     * \n      ((1.0 - ((tmpvar_3.xyz * scale1) + bias1).x) - tmpvar_5.x)\n    ), 0.0, 1.0)), vec3(0.9, 0.7, 0.6))\n   * 1.25) - 0.25) - tmpvar_2.yyy);\n  ret_1 = (ret_1 * ret_1);\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(1.0, 0.0, 1.0)) * q30)));\n  if (((ret_1.x > (q26 * q3)) && (ret_1.x <= (q23 * q1)))) {\n    ret_1.z = (ret_1.z - (tmpvar_6.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q1)) && (ret_1.y <= (q22 * q2)))) {\n    ret_1.x = (ret_1.x - (tmpvar_6.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q2)) && (ret_1.z <= (q21 * q3)))) {\n    ret_1.y = (ret_1.y - (tmpvar_6.z * 0.5));\n  };\n  ret_1 = (ret_1 - 0.15);\n  ret_1 = (ret_1 * normalize(texture (sampler_noise_hq, (\n    (uv + (q4 / 2.0))\n   / 6.0))).xyz);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }"}