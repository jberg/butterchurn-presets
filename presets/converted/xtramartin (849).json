{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"textured":1,"num_inst":3,"x":0.73,"rad":0.29466,"tex_zoom":1.87511,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q25;\na = trig*.8; a2 = 0;\n\nx0 = x0 *bnot(trig) + trig*rand(100)/100;\ny0 = y0 *bnot(trig) + trig*rand(100)/100;\ntex_ang = rand(20);\nrad = .1+rand(10)/8;\n\nx = x0; y = y0;\nr = .7+.3*sin(time/12);\nb = .7+.3*sin(time/15);\ng = .7+.3*sin(time/8);\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"enabled":1,"sides":36,"thickoutline":1,"textured":1,"num_inst":4,"x":0.3,"rad":0.05429,"ang":1.25664,"tex_ang":0.37699,"tex_zoom":1.02841,"g":0.7,"b":0.5,"r2":1,"g2":0,"border_g":0.59,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q31; y = q32;\nrad = .06;\ntex_ang = time;\na = q30;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"textured":1,"x":0.7,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":1,"b":0.99,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":0.04505,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"t0a = time; t0 = time+.5;\nspb_ = .5; ;\nvolb = .5; volx = .5;\nvol_= 1; index = 0; mov1 = 0;\nsdev = .1; wamp_ = .1;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps); dec_slow = pow (0.95, 30/fps);\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\n\nis_beat = above(vol, vol_+2*peak) * above (time, t0+spb_*.45);\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\npeak = if(is_beat,vol,peak*dec_med);\nindex = (index + is_beat) %128;\n\nspb = min(t0-t0a + .01,2);\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\n\n\nq20 = vol_;\nq21 = above(vol,2.7*vol_);\nq22 = max(0,peak-.0)+.01;\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\nq23 = hpeak * (1+rand(8));\nq24 = is_beat;\nq25 = q22*(1+rand(8))/8;\n\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\nsdev = if(is_beat,sdev * .8 + .2*pow(mindev+.02,2),sdev);\n\nspeed = 1/fps/spb_;\ntrel = trel + speed;\nq10 = trel;\n\nwamp =  min(.001/sdev,.15);\nwamp_ = wamp_*dec_slow + (1-dec_slow)*wamp;\nq11 = sin(trel/2)*wamp_;\nq12 = wamp_/2;\n\nrota = 2*wamp_*sin(trel/3);\n//rota = .2*sin(wamp_*32);\nq5 = cos(rota);\nq6 = sin(rota);\nq7 = -q6;\nq8 = q5;\n\nq15 = -sin(trel*.5)*.05;\nq16 = cos(trel)*wamp_/2;\n\nq19 = .1*sin(trel/12);\n\n//ODD PLANET MOVEMENT\ntrig1 = bnot(vis)*bnot(rand(100*fps));\nvis = if (trig1,1,vis*below(mov1,1));\nq30 = vis;\nmov1 = if (vis,mov1+2*speed/fps,-1);\ndir = if(trig1,rand(100),dir); \nq31 = .5+.5*cos(dir)*mov1;\nq32 = .5+.5*sin(dir)*mov1;\n\nq29 = (2+sin(time/17)); //reflection water\n\nmonitor = wamp;","pixel_eqs_eel":"zoom = 1+.02*rad*q20;\ndy = -.00;\nwarp =.1; dx = .0;","warp":"mat2 ofs;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablezv;\n shader_body { \n  mat2 tmpvar_1;\n  tmpvar_1[uint(0)].x = texsize.z;\n  tmpvar_1[uint(0)].y = 0.0;\n  tmpvar_1[1u].x = 0.0;\n  tmpvar_1[1u].y = texsize.w;\n  ofs = (tmpvar_1 * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = ((uv.x - 0.5) + q19);\n  tmpvar_2.y = (uv.y - 0.5);\n  vec2 v_3;\n  v_3.x = ofs[0].x;\n  v_3.y = ofs[1].x;\n  vec2 v_4;\n  v_4.x = ofs[0].x;\n  v_4.y = ofs[1].x;\n  vec2 v_5;\n  v_5.x = ofs[0].y;\n  v_5.y = ofs[1].y;\n  vec2 v_6;\n  v_6.x = ofs[0].y;\n  v_6.y = ofs[1].y;\n  vec2 tmpvar_7;\n  tmpvar_7.x = (texture (sampler_main, (uv + v_3)) - texture (sampler_main, (uv - v_4))).z;\n  tmpvar_7.y = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).z;\n  xlat_mutablezv = (time * 0.08);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (0.02 * time);\n  tmpvar_8.y = (-0.05 * time);\n  xlat_mutableuv2 = ((3.0 * tmpvar_2) + tmpvar_8);\n  vec3 tmpvar_9;\n  tmpvar_9.xy = xlat_mutableuv2;\n  tmpvar_9.z = xlat_mutablezv;\n  vec3 tmpvar_10;\n  tmpvar_10.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\n  tmpvar_10.z = (xlat_mutablezv * 2.0);\n  vec3 tmpvar_11;\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\n  tmpvar_11.z = (xlat_mutablezv * 3.0);\n  vec3 tmpvar_12;\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\n  tmpvar_12.z = (xlat_mutablezv * 7.0);\n  xlat_mutableuv2 = (tmpvar_2 + ((\n    (((texture (sampler_noisevol_hq, tmpvar_9).z + (texture (sampler_noisevol_hq, tmpvar_10).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_11).z / 4.0)) + (texture (sampler_noisevol_hq, tmpvar_12).z / 8.0))\n   - 1.0) * 0.1));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = (((\n    (((0.2 + (\n      (((1.0 + bass_att) * 0.01) / sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)))\n     * \n      (1.0 + normalize(slow_roam_cos))\n    .xyz)) + ((rand_preset.z - 0.5) * xlat_mutableuv2.y)) * 0.1)\n   / 2.0) + (texture (sampler_main, \n    (uv - (0.02 * tmpvar_7))\n  ).xyz * 0.9)) - 0.01);\n  ret = tmpvar_13.xyz;\n }","comp":"float xlat_mutablerain;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv_wat;\nfloat xlat_mutablewater;\nfloat xlat_mutablez;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  float tmpvar_2;\n  tmpvar_2 = (time * 0.25);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.wz);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (tmpvar_3.x / tmpvar_3.y)\n  ), 1.0) / max (abs(\n    (tmpvar_3.x / tmpvar_3.y)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\n    if ((tmpvar_3.y < 0.0)) {\n      if ((tmpvar_3.x >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\n  };\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((0.3183098 * tmpvar_4) + tmpvar_2);\n  tmpvar_7.y = (((\n    (aspect.w * log(sqrt(dot (tmpvar_3, tmpvar_3))))\n   * 0.7) + (0.3183098 * tmpvar_4)) - (tmpvar_2 * 4.0));\n  vec2 tmpvar_8;\n  tmpvar_8 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_7 * 0.5)) * 2.0) - 1.0)\n  )));\n  mat2 tmpvar_9;\n  tmpvar_9[uint(0)] = _qb.xy;\n  tmpvar_9[1u] = _qb.zw;\n  vec2 tmpvar_10;\n  tmpvar_10.x = q15;\n  tmpvar_10.y = q16;\n  uv_1 = (((\n    (((tmpvar_8 - 0.5) * tmpvar_9) * 0.7)\n   * aspect.xy) + 0.5) + tmpvar_10);\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.5;\n  tmpvar_11.y = ((q11 + 0.6) + (q12 * (\n    sin(((uv_1.x * 6.0) + q10))\n   * \n    cos(((uv_1.y * 8.0) + (time * 0.6)))\n  )));\n  vec2 tmpvar_12;\n  tmpvar_12.x = (uv_1.x * 4.0);\n  tmpvar_12.y = uv_1.y;\n  vec2 tmpvar_13;\n  tmpvar_13.x = (uv_1.x * 4.0);\n  tmpvar_13.y = uv_1.y;\n  xlat_mutablerain = (texture (sampler_noise_lq, ((tmpvar_12 * 0.2) - time)).x + texture (sampler_noise_lq, ((tmpvar_13 * 0.5) - time)).x);\n  float tmpvar_14;\n  tmpvar_14 = (time / 4.0);\n  xlat_mutablerain = (xlat_mutablerain * clamp ((\n    (q20 / 2.0)\n   - \n    abs(sin((tmpvar_8.x - tmpvar_14)))\n  ), 0.0, 1.0));\n  xlat_mutableuv1 = ((uv_1 - tmpvar_11) + (xlat_mutablerain * 0.01));\n  float tmpvar_15;\n  tmpvar_15 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\n  xlat_mutablez = (0.4 / xlat_mutableuv1.y);\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\n  xlat_mutablers0.y = xlat_mutablez;\n  vec2 tmpvar_16;\n  tmpvar_16.x = (xlat_mutablers0.x + tmpvar_14);\n  tmpvar_16.y = (xlat_mutablez + (time * 4.0));\n  xlat_mutablers = (tmpvar_16 * tmpvar_15);\n  xlat_mutablewater = (texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))).x;\n  xlat_mutablewater = (xlat_mutablewater - 1.0);\n  vec2 tmpvar_17;\n  tmpvar_17.x = (xlat_mutableuv1.x + 0.5);\n  tmpvar_17.y = abs((0.5 - xlat_mutableuv1.y));\n  xlat_mutableuv_wat = (tmpvar_17 - ((0.2 * xlat_mutablewater) / pow (xlat_mutablez, 0.5)));\n  xlat_mutableret1 = (((texture (sampler_main, uv_1).xyz * \n    (1.0 - tmpvar_15)\n  ) + (\n    (((texture (sampler_main, xlat_mutableuv_wat).xyz * tmpvar_15) / pow (xlat_mutablez, 0.4)) * 2.0)\n   * \n    (1.0 - rand_preset.y)\n  )) + ((\n    ((rand_preset.y * (1.0 + (rand_preset.x * xlat_mutablewater))) * tmpvar_15)\n   / xlat_mutablez) * vec3(0.0, 0.1, 0.1)));\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 + (0.2 * xlat_mutablerain)));\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = (1.0 - exp((\n    -(pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5)))\n   * 8.0)));\n  ret = tmpvar_18.xyz;\n }"}