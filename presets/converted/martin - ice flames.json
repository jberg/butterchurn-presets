{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_brighten":0,"darken":1,"wave_a":0.002,"wave_scale":0.14,"wave_smoothing":0,"wave_mystery":-0.84,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0.6,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"textured":1,"rad":0.72143,"tex_ang":0.62832,"tex_zoom":0.0402,"g":1,"b":1,"a":0.9,"r2":0.9,"b2":1,"a2":0.3,"border_a":0},"init_eqs_str":"a.vis=0;a.q27=0;a.q22=0;","frame_eqs_str":"a.vis=div(bnot(mod(a.q27,8))*a.q22,2);a.vis=Math.min(a.vis,1);a.a=div(a.vis,2);a.a2=div(a.vis,2);a.tex_zoom=1;a.rad=.3*a.vis;","init_eqs_eel":"","frame_eqs_eel":"vis = bnot(q27%8)*q22/2;\nvis = min(vis,1);\na = vis/2; a2 = vis/2;\n//tex_ang = 3*(1-vis);\n\ntex_zoom = 1;\nrad = vis*.3; "},{"baseVals":{"sides":5,"textured":1,"rad":4.77803,"tex_zoom":1.78051,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0.99,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang =sin(time/65) ;\nrad = q24/8;","init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;\nrad = q24/8;"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":4,"x":0.9,"rad":0.24732,"tex_zoom":0.40839,"g":0.6,"a":0.4,"g2":0,"b2":0.6,"border_a":0},"init_eqs_str":"a.blue=0;a.ampl=0;a.steps=0;a.k1=0;a.q24=0;a.green=0;a.red=0;a.trig=0;a.q27=0;a.q28=0;","frame_eqs_str":"a.steps=a.q28+1;a.steps=4;a.ampl=.2;a.x=.5+a.ampl*Math.cos(6.28*(div(a.q27,a.steps)+div(a.instance,4)));a.y=.5+a.ampl*Math.sin(6.28*(div(a.q27,a.steps)+div(a.instance,4)));a.a=.4;a.a2=0;a.trig=a.q24*bnot(mod(a.q27,4));a.red=bnot(a.trig)*a.red+div(rand(100),100)*a.trig;a.green=bnot(a.trig)*a.green+div(rand(100),100)*a.trig;a.blue=bnot(a.trig)*a.blue+div(rand(100),100)*a.trig;a.k1=div(a.instance,a.num_inst);a.r=a.red*a.k1;a.g=a.green*(1-a.k1);a.b=4*a.blue*a.k1*(1-a.k1);a.r=a.red;\na.g=a.green;a.b=a.blue;a.r2=a.r;a.b2=a.b;a.g2=a.g;","init_eqs_eel":"","frame_eqs_eel":"steps = q28+1;\nsteps = 4;\nampl = .2; //.2 bis .5 praktisch\n\nx = .5 + ampl*cos((q27/steps+instance/4)*6.28);\ny = .5 + ampl*sin((q27/steps+instance/4)*6.28);\n\na = .4; a2 = .0;\n\n\ntrig = q24 * bnot(q27%4);\nred = bnot(trig)*red+ (rand(100)/100)*trig;\ngreen = bnot(trig)*green+ (rand(100)/100)*trig;\nblue = bnot(trig)*blue+ (rand(100)/100)*trig;\n\nk1 = instance / num_inst;\n\nr = red *k1;\ng = green * (1-k1);\nb = blue * 4*k1*(1-k1);\n\nr = red;\ng = green;\nb = blue;\n\n\n\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"sides":36,"additive":1,"rad":0.01,"r":0,"g":0.12,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"r":0.5,"g":0.1,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index=0;a.q22=0;a.q21=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.stag=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.drot=0;a.p3=0;a.q3=0;a.t0=0;a.q32=0;a.q28=0;a.q30=0;a.q20=0;a.p4=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.1+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,12);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.q27=a.index+1;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=.01*a.q1;a.drot=div(30*(mod(a.index,4)-2),a.fps);a.p3=a.p3*a.dec_slow+div(30*(1-a.dec_slow),a.fps)*a.drot;a.q30=a.p3;a.stag=a.q27+1*a.index2;a.stag=Math.max(a.stag,1);a.p4=a.dec_med*a.p4+\n(1-a.dec_med)*a.stag;a.q31=a.p4;a.zoom=1+.05*a.q1;a.rot=-.007*a.index;a.q32=pow(.996,div(30,a.fps));a.monitor=a.index2;","pixel_eqs_str":"a.dy=-.005;","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %12;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nq27 = index + 1;\nq28 = index2;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nq5 = q1*.01;\n\ndrot = (index%4-2) * 30/fps;\np3 = p3*dec_slow + (1-dec_slow)*30/fps * drot;\nq30 = p3 ;\n\nstag = (q27+index2*1);\nstag = max(stag,1);\np4 = dec_med*p4 + (1-dec_med)*stag;\nq31 = p4;\n\nzoom = 1 + .05*q1;\nrot = -0.007 * index;\n\nq32 = pow(0.996, 30/fps); //fade\n\nmonitor = index2;","pixel_eqs_eel":"dy = -.005;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  tmpvar_3.xyz = ((tmpvar_4.xyz * scale1) + bias1);\n  float tmpvar_5;\n  tmpvar_5 = (dot (tmpvar_3, roam_sin) * 8.0);\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\n  tmpvar_6[uint(0)].y = -(sin(tmpvar_5));\n  tmpvar_6[1u].x = sin(tmpvar_5);\n  tmpvar_6[1u].y = cos(tmpvar_5);\n  uv_1 = (((tmpvar_2 + \n    ((0.2 * dot ((\n      (tmpvar_4.xyz * scale1)\n     + bias1), vec3(0.32, 0.49, 0.29))) * (tmpvar_2 * tmpvar_6))\n  ) - 0.5) + q5);\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv_1 * texsize.xy) * 0.02);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (cos((tmpvar_7.y * q1)) * sin(-(tmpvar_7.y)));\n  tmpvar_8.y = (sin(tmpvar_7.x) * cos((tmpvar_7.y * q2)));\n  uv_1 = (uv_1 - ((tmpvar_8 * texsize.zw) * 12.0));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((texture (sampler_main, uv_1).xyz * 0.99) - 0.01);\n  ret = tmpvar_9.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nfloat xlat_mutablez;\n shader_body { \n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\n  xlat_mutablez = (8.0 / pow (xlat_mutableuv1.y, 0.05));\n  xlat_mutablers.x = (xlat_mutableuv1.x * xlat_mutablez);\n  xlat_mutablers.y = ((xlat_mutablez / 2.0) + time);\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, xlat_mutablers);\n  xlat_mutableret1 = ((tmpvar_1.xyz * vec3(\n    greaterThanEqual (tmpvar_1.xyz, vec3(0.0, 0.0, 0.0))\n  )) - 0.5);\n  vec2 tmpvar_2;\n  tmpvar_2 = fract(((xlat_mutableuv1 - 0.5) - (\n    (xlat_mutableret1 * 0.1)\n   * \n    clamp ((xlat_mutableuv1.y * 32.0), 0.0, 1.0)\n  ).xy));\n  vec2 tmpvar_3;\n  tmpvar_3.x = (1.0 - tmpvar_2.x);\n  tmpvar_3.y = tmpvar_2.y;\n  vec3 tmpvar_4;\n  tmpvar_4 = (texture (sampler_main, tmpvar_2) + texture (sampler_main, tmpvar_3)).xyz;\n  xlat_mutableret1 = tmpvar_4;\n  xlat_mutableuv1 = (xlat_mutableuv1 * aspect.xy);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((tmpvar_4 * (1.0 + \n    dot (tmpvar_4, vec3(0.32, 0.49, 0.29))\n  )) / 3.0);\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat2 d = (uv1);\nfloat3 mus = GetBlur1(uv);\nfloat k = dot(mus,roam_sin)*8;\n\nd = mul(uv1,float2x2(cos(k),sin(k),-sin(k),cos(k)));\nuv1 += .20*lum(GetBlur1(uv))*d;\nuv = uv1-.5 + q5;;\n\nfloat3 ret1 = GetBlur1(uv) ;\n\nfloat2 zz = uv * texsize.xy *.02;\nfloat h1 = (cos(zz.y*q1) * sin(-zz.y));\nfloat h2 = (sin(zz.x) * cos(zz.y*q2));\n\nuv -= float2(h1,h2)*texsize.zw * 12;\n\nfloat3 crisp = tex2D(sampler_main,uv) ;\n\nret = crisp*.99 -.01;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\nfloat z, h1;\nfloat2 rs, uv1, uv2, uv3;\nfloat3 noise, ret1, ret2, rets;\n\nshader_body {\nuv1 = (uv-.5)*aspect.xy;\n\nh1 = 8;\nfloat hori = (uv1.y+0*uv1.x*uv1.x); \nz = h1/(pow(hori,.05));\nrs.x = uv1.x * z + 0*time * sign(uv1.x);\nrs.y = z/2 + time;\nnoise = tex2D(sampler_noise_hq,rs);\nnoise *= (noise >= .0);\nret1 = noise-.5;\n\nuv2 = 1*uv1 * (1-0*abs(uv1.x)) ;\nfloat mask = saturate(hori*32);\n//mask = 1;\nuv3 =frac(uv2-.5-ret1*.1* mask);\n\nret1 = tex2D (sampler_main, uv3) + tex2D (sampler_main, float2(1-uv3.x,uv3.y));\n\nuv1 *= aspect.xy;\nfloat moon  = saturate(.05/length(cos(uv1*2+2 )));\n\nret = ret1* (1+1*lum(ret1))/3 \n+ (0*moon)* (1-mask);    \n}"}