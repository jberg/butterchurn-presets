{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"wave_a":1.105,"wave_scale":100,"wave_smoothing":0.18,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.95,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\ntrans2 = rand(int(q30))/15+instance-instance;\ntrans3 = rand(int(q30))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q30))/15+instance-instance;\nr=rand(q30)*.1+instance-instance;\ng=rand(q30)*.1+instance-instance;\nb=rand(q30)*.1+instance-instance;\nr2=rand(q30)*.1+instance-instance;\ng2=rand(q30)*.1+instance-instance;\nb2=rand(q30)*.1+instance-instance;\nborder_r=rand(q30)*.1+instance-instance;\nborder_g=rand(q30)*.1+instance-instance;\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nwave_a = 0;\n\n\n\n//Thanks to Zylot for rainbow generator\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\nib_rr = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\nib_gg = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\nib_bb = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\n\n\n\n\n\nib_r=tan(time*24);\nib_r=min(ib_r,1);\nib_r=max(ib_r,0);\nib_g=tan(time*24+3.14);\nib_g=min(ib_g,1);\nib_g=max(ib_g,0);\nib_b=tan(time*24+6.28);\nib_b=min(ib_b,1);\nib_b=max(ib_b,0);\n\nob_r=ib_r-0.5;\nob_g=ib_g-0.5;\nob_b=ib_b-0.5;\nq1=ib_rr;\nq2=1-ib_gg;\nq3=ib_bb;\n\n\n\ndecay = 1;\n\n\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\n//solarize=above(0.5,bass);\n//darken=above(0.4,treb);\n\nmusictime=musictime+(mid*mid*mid)*0.01*(75/fps);\n\nxpos=sin(musictime*0.6)*0.5;\nypos=sin(musictime*0.4)*0.5;\nq4=xpos;\nq5=ypos;\n\n\n//invert=above(sin(time),0.5);\nq30=bass+treb+mid;","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\n//var=(bass+mid+treb)/3;\n//rot=((ang&rad/rad)/(var*20))/10;\n//sx=.99-(var*0.01);\n//cx=var*0.1*(ang/12);\n//sy=sx;\n\nzoom=.91;\n\ncx=0.5+q4;\ncy=0.5-q5;\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\n//zm=(1.1-(rd/4));\nzm=1.00;\n\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\nstar=(sin(ag/5)*(2-rd)+pow((tan(rd*6.28*32)*0.5+0.5),2)*0.1)+(rd/3);\nstar=min(star,8);star=max(star,-8);\nzm=zm+star/20;\nsx=zm;\nsy=zm;\nrot=above(rd,0.7)/(rd+7)*(bass_att*0.1)/rd;\ndx=sin(x*50)*(bass*0.005)*ag;\ndy=cos(y*50)*(bass*0.005)*ag;\n\nb1a=mid*0.13;\nb1b=(bass+mid+treb)*0.12;\nb1=b1b *1.1*rd*rd*rd*rd;\nzoom=0.97+(b1*.1);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_2.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_2.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_2.z * 0.5));\n  };\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.04)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 128.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = (0.001 * cos((ret_1 * \n    cos(ret_1)\n  )));\n  ret_1 = mix (ret_1.xyzz, vec4(dot ((ret_1 * ret_1), vec3(0.32, 0.49, 0.29))), tmpvar_3).xyz;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 bird_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 2.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.y;\n  tmpvar_6.y = tmpvar_5.y;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv + (tmpvar_6 * 0.05));\n  vec2 x_8;\n  x_8 = (tmpvar_7 - uv);\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.y;\n  tmpvar_9.y = tmpvar_5.y;\n  bird_1 = (pow (vec3(max (texture (sampler_main, tmpvar_7).x, texture (sampler_main, \n    ((0.5 + ((uv - 0.5) * vec2(-1.0, 1.0))) + (tmpvar_9 * 0.05))\n  ).x)), vec3(1.4, 1.4, 1.4)) * (hue_shader * hue_shader));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.y;\n  tmpvar_10.y = tmpvar_5.y;\n  vec3 tmpvar_11;\n  tmpvar_11 = (((texture (sampler_blur1, \n    (uv + (tmpvar_10 * 0.1))\n  ).xyz * scale1) + bias1) * clamp (1.0, 0.0, 1.0));\n  ret_2 = (((\n    ((((\n      (((tmpvar_4.y + tmpvar_5.y) * 4.0) + 0.5)\n     * vec3(0.0, 0.0, 1.0)) + (\n      sqrt(dot (x_8, x_8))\n     * vec3(64.0, 96.0, 0.0))) + (vec3(1.0, 0.0, 0.0) * texture (sampler_main, uv).y)) - vec3(0.0, 0.0, 0.3))\n   * 0.6) * clamp (\n    (1.0 - (bird_1.x * 4.0))\n  , 0.0, 1.0)) + bird_1);\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_7.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\n    ret_2.z = (ret_2.z - (tmpvar_12.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\n    ret_2.x = (ret_2.x - (tmpvar_12.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (ret_2.y - (tmpvar_12.z * 0.5));\n  };\n  ret_2 = (ret_2 * mix (ret_2, vec3(1.0, 1.0, 1.0), (\n    (tmpvar_11.z * 6.0)\n   * \n    (1.0 - (bird_1 * 3.0))\n  )));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }"}