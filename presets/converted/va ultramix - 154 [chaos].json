{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":1.766,"zoomexp":1.00016,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);\nwave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);\nwave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);\nwarp = 0;\n\nob_r = wave_g;\nob_b = wave_r;\nob_g = wave_b;\nib_r = wave_r;\nib_b = wave_g;\nib_g = wave_r;","pixel_eqs_eel":"sx=1- .01;\nrot=.02;\nkdx=dx;\nkdy=dy;\nksx=sx;\nksy=sy;\nkrt=rot;\nkzm=zoom;\nkcx=cx;\nkcy=cy;\nkwp=warp;\n\ndx=0;\ndy=0;\nsx=1;\nsy=1;\nrot=0;\nzoom=1;\ncx=.5;\ncy=.5;\nwarp=0;\n\ndx = 0.01*sin(100*y+q8/y);\ndy = 0.01*sin(100*x+q8/x);\ncr1=0*.01;\ncr2=99*.01;;\ncrx=cr2-cr1;\nci=rad;\nci=x*4-1+sin(time/3)*6  ;\ncrs=2;\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\nkx1=crr;\njx1=1-crr;\n\njdx=dx;\njdy=dy;\njsx=sx;\njsy=sy;\njrt=rot;\njzm=zoom;\njcx=cx;\njcy=cy;\njwp=warp;\n\ndx=(jx1*jdx+kx1*kdx);\ndy=(jx1*jdy+kx1*kdy);\nsx=(jx1*jsx+kx1*ksx);\nsy=(jx1*jsy+kx1*ksy);\nrot=(jx1*jrt+kx1*krt);\nzoom=(jx1*jzm+kx1*kzm);\ncx=(jx1*jcx+kx1*kcx);\ncy=(jx1*jcy+kx1*kcy);\nwarp=(jx1*jwp+kx1*kwp);\n\ngkdx=dx;//////////////////////////////////////////\ngkdy=dy;\ngksx=sx;\ngksy=sy;\ngkrt=rot;\ngkzm=zoom;\ngkcx=cx;\ngkcy=cy;\ngkwp=warp;\n\ndx=0;\ndy=0;\nsx=1;\nsy=1;\nrot=0;\nzoom=1;\ncx=.5;\ncy=.5;\nwarp=0;/////////////////////////////////////////////////////\n\nw=sin(ang*22+sin(time/8) )/2+.5;\ncc=w*w*w*w*w*w*w*w*w*w*w*w;\nzoom=cc/22+1;\n///////////////////////////////////////\ncr1=(int(sin(time*2)/2+.5+.2));\ncr2=cr1;\ncrx=cr2-cr1;\nci=rad;\ncb=.25  ;\ncrs=2;\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\njx1=crr;\nkx1=1-crr;\n\ngjdx=dx;\ngjdy=dy;\ngjsx=sx;\ngjsy=sy;\ngjrt=rot;\ngjzm=zoom;\ngjcx=cx;\ngjcy=cy;\ngjwp=warp;\n\ndx=(jx1*gjdx+kx1*gkdx);\ndy=(jx1*gjdy+kx1*gkdy);\nsx=(jx1*gjsx+kx1*gksx);\nsy=(jx1*gjsy+kx1*gksy);\nrot=(jx1*gjrt+kx1*gkrt);\nzoom=(jx1*gjzm+kx1*gkzm);\ncx=(jx1*gjcx+kx1*gkcx);\ncy=(jx1*gjcy+kx1*gkcy);\nwarp=(jx1*gjwp+kx1*gkwp);////////////////////////////////////////////////////","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 12.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur3, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale3) + bias3)).y;\n  tmpvar_3.y = (((texture (sampler_blur3, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale3) + bias3)).y;\n  ret_1.y = texture (sampler_fw_main, fract((uv + (\n    (tmpvar_3 * texsize.zw)\n   * 48.0)))).y;\n  ret_1.y = (ret_1.y + ((\n    (ret_1 - ((texture (sampler_blur3, (uv - \n      floor(uv)\n    )).xyz * scale3) + bias3))\n  .y * 0.01) - 0.004));\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\n  ).y - 0.5) * 0.06));\n  ret_1.x = texture (sampler_main, uv).x;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).yyy;\n  ret = tmpvar_1.xyz;\n }"}