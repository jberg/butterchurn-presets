MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.958
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.500
ob_b=0.500
ob_a=0.100
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=25.600
nMotionVectorsY=9.600
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=282
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=3.91581
wavecode_0_smoothing=0.10000
wavecode_0_r=0.200
wavecode_0_g=0.300
wavecode_0_b=1.000
wavecode_0_a=0.600
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.090
shapecode_0_y=0.900
shapecode_0_rad=0.22437
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.76002
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.600
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=6.19589
shapecode_1_r=0.000
shapecode_1_g=0.550
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.400
shapecode_1_b2=0.400
shapecode_1_a2=0.070
shapecode_1_border_r=0.300
shapecode_1_border_g=0.700
shapecode_1_border_b=0.800
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=44
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.503
shapecode_2_y=0.500
shapecode_2_rad=0.03886
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.60986
shapecode_2_r=1.000
shapecode_2_g=0.100
shapecode_2_b=0.000
shapecode_2_a=0.900
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=
per_frame_init_2=//******** INITIALIZATION *********
per_frame_init_3=myzoom = .1; //MyZoom
per_frame_init_4=
per_frame_init_5=tele = 1.5; //tele
per_frame_init_6=ffac = 2.4; //fractal density factor ffac
per_frame_init_7=start = 1;
per_frame_init_8=
per_frame_init_9=n = 0; loop (10000, gmegabuf(n)=0; n=n+1; );
per_frame_init_10=n = 0; loop (10000,  megabuf(n)=0; n=n+1; );
per_frame_init_11=
per_frame_init_12=gmegabuf(0) = 0;  gmegabuf (1) = 2;  gmegabuf(2) = 1;  gmegabuf (3) = -4;
per_frame_init_13=gmegabuf(4) = 3;  gmegabuf (5) = 0;  gmegabuf(6) = 1;  gmegabuf (7) = 5;
per_frame_init_14=gmegabuf(8) = 1;  gmegabuf (9) = -3;  gmegabuf(10) = 2; gmegabuf (11) = -4;
per_frame_init_15=gmegabuf(12) = -4; gmegabuf (13) = 1; gmegabuf(14) = 2; gmegabuf (15) = 0;
per_frame_init_16=
per_frame_init_17=
per_frame_init_18=gvol = 1;
per_frame_init_19=wait = 1;
per_frame_1=fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25));
per_frame_2=dec_s = 1-.05*30/fps_;
per_frame_3=dec_xs = 1-.01*30/fps_;
per_frame_4=
per_frame_5=dvol = (bass_att + mid_att + treb_att) - (bass+mid+treb);
per_frame_6=gvol = gvol*dec_xs + (1-dec_xs) * max(0.1,dvol)*6;
per_frame_7=q8 = min(gvol*.9,1);
per_frame_8=
per_frame_9=trel = trel + sqrt(gvol)/fps_;
per_frame_10=ctrl = pow(max(0,sin(trel*.25)*5-4),4);
per_frame_11=q31 = ctrl;
per_frame_12=q32 = .2/(ctrl+.05);
per_frame_13=
per_frame_14=change = (ctrl >= 0.8) && (t0 > 2) || (start == 1);
per_frame_15=t0 = if ( change, 0, t0 + 1/fps);
per_frame_16=
per_frame_17=q7 = myzoom;
per_frame_18=q16 = tele;
per_frame_19=q17 = ffac;
per_frame_20=
per_frame_21=//Find random starting point
per_frame_22=if (change == 1,
per_frame_23=  par1 =  rand(100)/40-.5; //fractal parameter
per_frame_24=  q19 = par1;
per_frame_25=  while (exec2(
per_frame_26=    up = rand(120)/100; //look up
per_frame_27=
per_frame_28=    ran1 = rand(800)/100;  ran2 = 0;  ran3 = 1.5 + up;
per_frame_29=    PosX = rand(10);   PosY = rand(10);
per_frame_30=    PosZ = if ((up >= 0.4) && (rand(10)> 5), 1.8+rand(100)/100, 2*(rand(100)/100-.5)-.75);
per_frame_31=
per_frame_32=    index = 0; mindist = 1; maxdist = 0; avg = 0;
per_frame_33=    loop (17,
per_frame_34=      dax = (index%4-1.5) * q16/8; day = (floor(index/4) -1.5) * q16/8;
per_frame_35=      if (index==16, dax=0; day=0; ,0);
per_frame_36=      c1 = cos(ran1+dax); c2 = cos(ran2); c3 = cos(ran3+day);
per_frame_37=      s1 = sin(ran1+dax); s2 = sin(ran2); s3 = sin(ran3+day);
per_frame_38=
per_frame_39=      reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;
per_frame_40=      reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;
per_frame_41=      reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;
per_frame_42=
per_frame_43=      //***********BOT*************
per_frame_44=      //Coord. Trans. must exactly match def in warp S. !!!!
per_frame_45=      dist = 0.004;
per_frame_46=      while (exec2(
per_frame_47=        uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;
per_frame_48=        uvx += PosX; uvy += PosY; uvz += PosZ;
per_frame_49=
per_frame_50=        uv3x = (floor(uvx+511.99))%4;
per_frame_51=        uv3y = (floor(uvy+511.99))%4;
per_frame_52=
per_frame_53=        uvx = 1-abs( 2*(uvx*.5-.25 - int(uvx*.5-.25))-1);
per_frame_54=        uvy = 1-abs( 2*(uvy*.5-.25 - int(uvy*.5-.25))-1);
per_frame_55=
per_frame_56=       ang1 = atan2(uvy,uvx); len = sqrt(uvx*uvx+uvy*uvy)*7.5;
per_frame_57=        mod1 = .3*gmegabuf( uv3y+uv3x*4);
per_frame_58=        uvz -= mod1;
per_frame_59=        len *= 1-.3*floor(uvz*12*mod1+q19);
per_frame_60=        uvx = len; uvy = ang1; uvz = uvz;
per_frame_61=
per_frame_62=        uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;
per_frame_63=        loop (7+1,
per_frame_64=          uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));
per_frame_65=          uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));
per_frame_66=          uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));
per_frame_67=          slen = uvx*uvx + uvy*uvy + uvz*uvz;
per_frame_68=          uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *q17 + uvx0;
per_frame_69=          uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *q17 + uvy0;
per_frame_70=          uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *q17 + uvz0;
per_frame_71=        );
per_frame_72=        len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);
per_frame_73=        dist *= 1.05;
per_frame_74=      ,(dist < 0.8) && (len > 15)));
per_frame_75=       if (dist > maxdist, maxdist = dist, 0);
per_frame_76=       if (dist < mindist, mindist = dist, 0);
per_frame_77=       avg += dist/17;
per_frame_78=      index += 1;
per_frame_79=    ); //loop 17
per_frame_80=  , (avg > 0.7) || (mindist < 0.1))); //end while
per_frame_81=
per_frame_82=  lposx = rand(100)/100;
per_frame_83=  lposy = rand(100)/100;
per_frame_84=
per_frame_85=,0);
per_frame_86=
per_frame_87=
per_frame_88=//Position
per_frame_89=q4 = PosX; q5 = PosY; q6 = PosZ;
per_frame_90=q1 = lposx+.3*sin(time*.07);
per_frame_91=q2 = lposy+.3*sin(time*.1);
per_frame_92=
per_frame_93=  //Multiply new RotMat by old one
per_frame_94=  q20 = reg20;
per_frame_95=  q21 = reg21;
per_frame_96=  q22 = reg22;
per_frame_97=  q23 = reg23;
per_frame_98=  q24 = reg24;
per_frame_99=  q25 = reg25;
per_frame_100=  q26 = reg26;
per_frame_101=  q27 = reg27;
per_frame_102=  q28 = reg28;
per_frame_103=
per_frame_104=q14 =  (start + ctrl)*.05;
per_frame_105=start = start * .95;
per_frame_106=
per_frame_107=warp = 0.0; zoom = 1; dx = 0; dy = 0; rot = 0;
per_frame_108=monitor = dist;
per_frame_109=q30 = start;
per_frame_110=q3 = up;
per_frame_111=q19 = par1;
per_frame_112=
per_frame_113=if (time > ttrig + wait, trig = 1, trig = 0);
per_frame_114=if (trig, ttrig = time; wait = rand(20)/100, 0);
per_frame_115=if (trig, flashx = rand(100)/70-.2; flashy = rand(100)/70-.2,0);
per_frame_116=q10 = flashx; q11 = flashy;
per_frame_117=
per_frame_118=monitor = q31;
warp_1=`//changes: MinDist using float4s, pix now constant
warp_2=`//res & res2 replaced by 255 and 64. Simplified "shadow" code
warp_3=`//Dist est. in uv corr now using 1-GetPixel(uv).b instead GetDist
warp_4=`//noise gen changed. Set compxy = 0, ds = 0, tdist = dist; uv = uv_orig
warp_5=`
warp_6=`#define sat saturate
warp_7=`sampler sampler_pw_noise_lq;
warp_8=`float limit, dist, struc, len; float2 uv0, uv1; float3 uv2; float4 box;
warp_9=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
warp_10=`static const float2 compxy = float2(q12,q13)*0;
warp_11=`static const float3 CamPos = float3(q4,q5,q6);
warp_12=`static const float myzoom = q7, tele = q16;
warp_13=`static const float sustain = .98 - 2*q14, ds = 0*q10, tic8 = 1.0/255, ffac = q17;
warp_14=`static const float2 lpos = float2 (q1,q2);
warp_15=`static const float4x4 tab1 = .3*float4x4 (0,2,1,-4,  3,0,1,5,  1,-3,2,-4,  -4,1,2,0) ;
warp_16=`
warp_17=`float aTan2(float y, float x) {float angle;	 float abs_y = abs(y);
warp_18=`if (x >= 0) {float r = (x - abs_y) / (x + abs_y); angle = 1-r;}
warp_19=`else {float r = (x + abs_y) / (abs_y - x); angle = 3-r; }
warp_20=`angle = angle * M_PI/4.0;
warp_21=`return y < 0 ? -angle : angle;}
warp_22=`
warp_23=`float2 GP (float2 uvi) {return tex2D (sampler_pc_main, uvi).gb;}
warp_24=`
warp_25=`float2 fstep2 (float2 xy) {return 0.0039216*round(255.0*xy);}
warp_26=`float4 fstep4 (float4 xy) {return round(255.0*xy);}
warp_27=`
warp_28=`float GetDist(float2 uvi) {float2 tmp; tmp = fstep2(tex2D (sampler_pc_main, uvi).gb);
warp_29=`return 1.0078125-tmp.y -0.015625*tmp.x;} // = 1-(tmp.y + 1.0/res2*(tmp.x-.50));}
warp_30=`
warp_31=`float2 PutDist(float x) {float tmp; x = 1-x; tmp = fstep2(x);
warp_32=`  return (float2(64.0*(x-tmp)+.495,tmp));}
warp_33=`
warp_34=`float tdist (float d) {return d + pow(d,5)*0;}
warp_35=`
warp_36=`float MinDist (float2 uvi)
warp_37=`{  float tmp; float4 na; float4 nb; float4 nc; float4 nd; float2 pix;
warp_38=`   pix = texsize.zw;
warp_39=`   na = fstep4(float4(GP(uvi+pix*float2(0,1)),  GP(uvi+pix*float2(-1,0))));
warp_40=`   nb = fstep4(float4(GP(uvi+pix*float2(-1,-1)),GP(uvi+pix*float2(1,-1))));
warp_41=`   nc = fstep4(float4(GP(uvi+pix*float2(1,1)),  GP(uvi+pix*float2(-1,1))));
warp_42=`   nd = fstep4(float4(GP(uvi+pix*float2(0,-1)), GP(uvi+pix*float2(1,0))));
warp_43=`   //Eo.S. more efficient usage of min to get min value of all 8 GetDist calls, removes 11ALU
warp_44=`   na = float4 (na.yw + 0.015625*na.xz, nb.yw + 0.015625*nb.xz);
warp_45=`   nb = float4 (nc.yw + 0.015625*nc.xz, nd.yw + 0.015625*nd.xz);
warp_46=`   na    = max(na,nb);
warp_47=`   na.xy = max(na.xy,na.zw);
warp_48=`   return 1.0078125 -  max(na.x, na.y)*0.0039216;}
warp_49=`
warp_50=`float3 Get1 (float2 uvi) {return lerp (GetPixel(uvi), GetBlur1(uvi),0);}
warp_51=`
warp_52=`float3 mbox (float3 uvi) {float3 zz, zz0, zzlo; float2 uv3; float tmp, ang1, len, mod1;
warp_53=`  uv3 = floor(uvi.xy+63.99);
warp_54=`  mod1 = tab1[uv3.x%4][uv3.y%4];
warp_55=`
warp_56=`  uvi.xy = 1- abs( frac((uvi.xy-.5) * 0.5 ) * 2 - 1.0 ); // Eo.S. mirror code
warp_57=`  ang1 = aTan2(uvi.y,uvi.x); len = length(uvi.xy)*7.5;
warp_58=`  uvi.z -= mod1;
warp_59=`  len *= 1-.3*floor(12*uvi.z*mod1+q19);
warp_60=`  zz = float3 (len, ang1, uvi.z);
warp_61=`  zz0 = zz;
warp_62=`  for (int n = 0; n <= 7; n++) {
warp_63=`    zz = 2.0*clamp(zz,-1,1)-zz;  tmp = dot(zz,zz);
warp_64=`    zz *= saturate(max(.25/tmp, .25))*4;
warp_65=`    zz = ffac*zz + zz0; if (n == 5) {zzlo = zz;}}
warp_66=`return float3(length(zzlo), length(zz), (ang1-mod1-frac(zz.y*.0001))*.3);}
warp_67=`
warp_68=`shader_body {uv0 = uv_orig; uv = uv_orig;
warp_69=`uv1 = (uv0-.5)*aspect.xy*tele;
warp_70=`float3 noise = (tex2D (sampler_pw_noise_lq,uv*texsize.xy*texsize_noise_lq.zw+rand_frame.yz));
warp_71=`float3 noiseBiased = noise - 0.5;
warp_72=`
warp_73=`bool seed = (noise.g < .2);
warp_74=`if (seed) {dist = noise.r;} else {dist = MinDist(uv) + 0.0013 * (noiseBiased.x);}
warp_75=`dist = min(dist,GetDist(uv));
warp_76=`
warp_77=`limit = 15 + 15 * dist;
warp_78=`uv2 = mul(float3(uv1*tdist(dist),tdist(dist))/myzoom,RotMat)+CamPos;
warp_79=`float3 box = mbox(uv2);
warp_80=`len = lerp(box.y,box.x,dist);
warp_81=`struc = sat((-limit+box.y)*.02+1 + box.z) ;
warp_82=`
warp_83=`float2 uv3 =  (uv + .1*(lpos-.5) );
warp_84=`struc -=  (GetDist(uv) > 1.1-GetBlur1(uv3).b)*.5;
warp_85=`
warp_86=`float sus = sustain; if (seed) {sus = 1;}
warp_87=`float3 inside  = float3 (lerp(sat(struc),Get1(uv).r,sus), PutDist(dist));
warp_88=`float3 outside = Get1(uv)*sus-tic8;
warp_89=`ret = lerp (inside,outside,saturate(len-limit) );
warp_90=`
warp_91=`ret.r += noiseBiased.x*-.02;
warp_92=`}
warp_93=`//This is Martin's code
comp_1=`#define sat saturate
comp_2=`sampler sampler_pw_noise_lq;
comp_3=`float cloud, tmp, dist, bdist, z;
comp_4=`float2 dz, uv1, uv2, uv3;
comp_5=`float3 struc;
comp_6=`static const float up = q3;
comp_7=`static const float gvol = q8;
comp_8=`static const float3 skycol = float3 (.4,.5,1)/3*(2-gvol);
comp_9=`static const float2 lpos = float2 (q1,q2), fpos = float2 (q10,q11);
comp_10=`float3 lavcol (float t) {return saturate(pow(t,float3(1,1.8,4)));}
comp_11=`
comp_12=`float2 noise4 (float2 uvi) { float2 n1,n2,n3, zv; zv = 0.00;
comp_13=`  n1 = tex2D(sampler_noise_hq, (uvi));
comp_14=`  n2 = tex2D(sampler_noise_hq, (uvi*2+zv));
comp_15=`//  n3 = tex2D(sampler_noise_hq, (uvi*4+zv));
comp_16=`  return n1 + 1*n2/2  ;}
comp_17=`
comp_18=`
comp_19=`shader_body {
comp_20=`uv = uv+texsize.zw*.5;
comp_21=`//uv = (uv-.5)*q32/4 + 0.5;
comp_22=`uv += q31 * .1*(tex2D (sampler_pw_noise_lq,(uv-.5)*q32+rand_frame.xy*q31)-.5);
comp_23=`uv1 = uv-float2(.5,.5+up);
comp_24=`float3 Get1 = lerp(GetPixel(uv), GetBlur1(uv),.2);
comp_25=`
comp_26=`bdist = 1-Get1.b;;
comp_27=`float struc0 = Get1.r;
comp_28=`
comp_29=`cloud = 0;
comp_30=`float z0 = clamp(.25/(uv1.y-.3),-.7,.0) ;
comp_31=`float2 trel =  .015*time * float2(q20,q21);
comp_32=`
comp_33=`for (int n = 1; n <= 4; n++) {
comp_34=`  z = z0 + cloud*.015;
comp_35=`  uv2 = float2 (uv1.x*z,z*1)*1 - trel;
comp_36=`  cloud = lum(tex2D (sampler_noise_hq,uv2 +.015*noise4(uv2*3+2*trel)));
comp_37=`}
comp_38=`float flash0 = sat(bass_att-1);
comp_39=`float3 flash = flash0/length(uv.xy-cloud*.2-fpos)*(1-cloud)*float3(0,0.3,.6);
comp_40=`
comp_41=`float3 sky = (1-cloud)*skycol+ flash;
comp_42=`
comp_43=`uv3 = uv*float2(6,3);
comp_44=`sky *= sat(16*GetBlur1(frac(uv3+floor(uv3.x)*.3)).r -64*(uv1.y+.1));//background
comp_45=`sky *= sat(bdist*16-15) ;
comp_46=`
comp_47=`struc = lerp(gvol*lavcol(struc0),struc0,bdist)*(1.2-bdist) * sat(1.25-length(uv-lpos));
comp_48=`
comp_49=`//uv = (uv-.5)*1+.5;
comp_50=`float2 shlen = (2-fpos);
comp_51=`float2 uv3 =  frac(uv - shlen*.01*(1-0*Get1.b) );
comp_52=`float fac = 1.2-sat(4*((GetBlur1(uv3).b)-.1 - Get1.b ));
comp_53=`
comp_54=`float relief = 1+0*(Get1 - GetBlur1(uv+.001*rand_frame.xy)).r;
comp_55=`
comp_56=`struc  += 8*struc0*struc0 * relief*sat(2*treb_att-3) * lerp(bdist,1-bdist,rand_frame.x>.5)*fac*skycol;
comp_57=`
comp_58=`ret = sky + struc;
comp_59=`
comp_60=`//ret = struc0 * fac;
comp_61=`}
comp_62=`
comp_63=`//-------------------------------------------
comp_64=`//Written by martin
comp_65=`
