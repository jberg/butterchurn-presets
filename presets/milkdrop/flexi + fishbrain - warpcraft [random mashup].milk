MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=2.000
fGammaAdj=1.140
fDecay=0.999
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.550
fWaveScale=2.000
fWaveSmoothing=0.630
fWaveParam=1.000
fModWaveAlphaStart=1.600
fModWaveAlphaEnd=2.000
fWarpAnimSpeed=0.137
fWarpScale=13.125
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.99213
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.000
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx*1.25-0.1;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx*1.25-0.125;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx*1.25-0.125;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx*1.25-0.125;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.79142
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=// elastic thread code
per_frame_2=
per_frame_3=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_4=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_5=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_6=x1 = 0.5 + (xx1-xx2)*2;
per_frame_7=y1 = 0.4 + yy1*1.5;
per_frame_8=dt = 0.03/fps;
per_frame_9=vx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);
per_frame_10=vy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);
per_frame_11=vx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);
per_frame_12=vy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);
per_frame_13=vx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);
per_frame_14=vy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);
per_frame_15=x2 = x2 + vx2; y2 = y2 + vy2;
per_frame_16=x3 = x3 + vx3; y3 = y3 + vy3;
per_frame_17=x4 = x4 + vx4; y4 = y4 + vy4;
per_frame_18=vx2 = if(above(x2,0),vx2,abs(vx2)*0.5);
per_frame_19=vx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);
per_frame_20=vx3 = if(above(x3,0),vx3,abs(vx3)*0.5);
per_frame_21=vx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);
per_frame_22=vx4 = if(above(x4,0),vx4,abs(vx4)*0.5);
per_frame_23=vx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);
per_frame_24=vy2 = if(above(y2,0),vy2,abs(vy2)*0.5);
per_frame_25=vy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);
per_frame_26=vy3 = if(above(y3,0),vy3,abs(vy3)*0.5);
per_frame_27=vy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);
per_frame_28=vy4 = if(above(y4,0),vy4,abs(vy4)*0.5);
per_frame_29=vy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);
per_frame_30=q1 = x1;q2 = x2;q3 = x3;q4 = x4;
per_frame_31=q5 = y1;q6 = y2;q7 = y3;q8 = y4;
per_frame_32=q9 = 1/aspectx;
per_frame_33=q10 = 1/aspecty;
per_frame_34=q11 = aspectx;
per_frame_35=q12 = aspecty;
per_frame_36=q13 = sqrt(vx4*vx4 + vy4*vy4);
per_frame_37=q14 = atan2(vx4,vy4);
per_frame_38=q15 = sin(q14);
per_frame_39=q16 = cos(q14);
per_frame_40=
per_frame_41=// Flexis dampened sound response functions
per_frame_42=
per_frame_43=db = db*0.98 + bass*0.2; // dampener
per_frame_44=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_45=
per_frame_46=ddt = ddt*0.98 + treb*0.2;
per_frame_47=tt = tt + ddt*0.1;
per_frame_48=
per_frame_49=dm = dm*0.98 + mid*0.2;
per_frame_50=mm = mm + dm*0.1;
per_frame_51=
per_frame_52=
per_frame_53=//***** [q21-q28] variables for Flexis caleidoscope shader code *****
per_frame_54=
per_frame_55=// change
per_frame_56=q23 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_57=q24 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_58=w = (bb-tt)*0.1;                   // angle
per_frame_59=q26 = 0.25 - (db-ddt)*0.025;        // size
per_frame_60=
per_frame_61=//don't change
per_frame_62=q21 = sin(w);
per_frame_63=q22 = cos(w);
per_frame_64=q27 = sin(-w);
per_frame_65=q28 = cos(-w);
per_frame_66=q25 = 1/q26;
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).x*0.5;
warp_5=`
warp_6=`
warp_7=`float2 d = texsize.zw*4;
warp_8=`float2 uv_z = (uv_orig-0.5)*0.996 + 0.5; // a small dose of zoom-in
warp_9=`float3 dx = ( 2*GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) )*0.5;
warp_10=`float3 dy = ( 2*GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) )*0.5;
warp_11=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2;
warp_12=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2),
warp_13=`             tex2d(sampler_fc_main,uv_z).z);
warp_14=`ret.z += (2*tex2d(sampler_fc_main,uv_z).z - 2*GetBlur1(saturate(uv_z)).z)*0.01;
warp_15=`
warp_16=`
warp_17=`float2 uv_y = lerp(uv,uv_orig,0.9996);
warp_18=`ret.y =max(tex2d(sampler_fc_main,uv_y).y ,tex2d(sampler_fc_main,uv_orig).z)-0.008;
warp_19=`}
comp_1=`float sigmoid(float t, float c){
comp_2=`   return 1 / ( 1 + exp(t*c));
comp_3=`}
comp_4=`
comp_5=`shader_body
comp_6=`{
comp_7=`// ***** Flexis rotating caleidoscope code *****
comp_8=`
comp_9=`float2 cntr = float2(q23,q24); float sin = q21; float cos = q22; float scale = q25;
comp_10=`float2 uv_r = (uv-cntr)*aspect.xy;
comp_11=`       uv_r = scale*float2( cos*uv_r.x - sin*uv_r.y, sin*uv_r.x + cos*uv_r.y); // rotation
comp_12=`       uv_r = cntr + uv_r*aspect.zw;
comp_13=`       uv_r = 1.0 - abs( frac( uv_r * 0.5 ) * 2.0 - 1.0 ); // mirror
comp_14=`
comp_15=`sin = q27; cos = q28; scale = q26;
comp_16=`float2 uv_rr = (uv_r-cntr)*aspect.xy;
comp_17=`       uv_rr = scale*float2( cos*uv_rr.x - sin*uv_rr.y, sin*uv_rr.x + cos*uv_rr.y); // counter-rotation
comp_18=`       uv_rr = cntr + (uv_rr)*aspect.zw;
comp_19=`
comp_20=`float2 caleidoscope_uv = uv_rr;
comp_21=`
comp_22=`// *****
comp_23=`
comp_24=`uv = uv_rr;
comp_25=`
comp_26=`    float2 d = texsize.zw;
comp_27=`    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_28=`    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_29=`float2 dz = float2(dx.y,dy.y)*3;
comp_30=`
comp_31=`d = texsize.zw*2;
comp_32=`dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_33=`dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_34=`
comp_35=`dz +=float2(dx.y,dy.y);
comp_36=`
comp_37=`float3 bg = pow(length(dz)*0.8+0,0.7) + GetBlur2(uv).y*0.4-0.1;
comp_38=`
comp_39=`ret = bg*float3(0.3,0.5,0.7);
comp_40=`ret = lerp(ret,float3(0.2,0.1,0),GetPixel(uv + float2(dx.x,dy.x)*texsize.zw*18).x*6);
comp_41=`ret = lerp(ret,1,GetPixel(uv).z);
comp_42=`
comp_43=`//ret = GetPixel(uv);
comp_44=`
comp_45=`//ret = sigmoid(length((uv-0.5)*aspect)-0.04,50);
comp_46=`}
