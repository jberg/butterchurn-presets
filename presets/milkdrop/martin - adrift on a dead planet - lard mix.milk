MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=3
PSVERSION_COMP=4
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.700
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=0.88026
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.200
wave_0_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_0_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_0_per_point3=s = sample*3.14*100;
wave_0_per_point4=ss = sample*6.28*1000;
wave_0_per_point5=
wave_0_per_point6=//draw
wave_0_per_point7=xs = 0.5*sin(s)*cos(ss)*equal(q5,0) +
wave_0_per_point8=(0.6 + 0.1*cos(s))*cos(ss)*equal(q5,1) +
wave_0_per_point9=0.5*sin(s)*cos(ss)*equal(q5,2);
wave_0_per_point10=ys = 0.5*sin(s)*sin(ss)*equal(q5,0) +
wave_0_per_point11=(0.6 + 0.1*cos(s))*sin(ss)*equal(q5,1) +
wave_0_per_point12=0.5*sin(s)*sin(ss)*equal(q5,2);
wave_0_per_point13=zs = 0.5*cos(s)*equal(q5,0) +
wave_0_per_point14=0.1*sin(s)*equal(q5,1) +
wave_0_per_point15=0.5*sin(s)*equal(q5,2);
wave_0_per_point16=
wave_0_per_point17=
wave_0_per_point18=
wave_0_per_point19=xtor = (0.6 + 0.1*cos(s))*cos(ss);
wave_0_per_point20=ytor = (0.6 + 0.1*cos(s))*sin(ss);
wave_0_per_point21=ztor = 0.1*sin(s);
wave_0_per_point22=
wave_0_per_point23=
wave_0_per_point24=//rotate x axis
wave_0_per_point25=angle = q1*0.3;
wave_0_per_point26=yx = ys*cos(angle) - zs*sin(angle);
wave_0_per_point27=zx = ys*sin(angle) + zs*cos(angle);
wave_0_per_point28=xx = xs;
wave_0_per_point29=
wave_0_per_point30=//rotate y axis
wave_0_per_point31=angle2 = q1*0.5;
wave_0_per_point32=xd = xx*cos(angle2) - zx*sin(angle2);
wave_0_per_point33=zd = xx*sin(angle2) + zx*cos(angle2);
wave_0_per_point34=yd = yx;
wave_0_per_point35=
wave_0_per_point36=//rotaye z axis
wave_0_per_point37=angle3 = q1*0.41;
wave_0_per_point38=xn = xd*cos(angle3) - yd*sin(angle3);
wave_0_per_point39=yn = xd*sin(angle3) + yd*cos(angle3);
wave_0_per_point40=
wave_0_per_point41=zd = zd + 2;
wave_0_per_point42=
wave_0_per_point43=//do that falloff effect
wave_0_per_point44=peek1 = (value1 + value2)*10;
wave_0_per_point45=
wave_0_per_point46=//if sample louder set that to level else decrement level
wave_0_per_point47=level = if(above(peek1,level),peek1,level - 0.00025);
wave_0_per_point48=level = if(below(level,0),0,level);
wave_0_per_point49=
wave_0_per_point50=//add to z
wave_0_per_point51=zd = zd + 2  + level;
wave_0_per_point52=
wave_0_per_point53=
wave_0_per_point54=x = xn*zd*0.05 + 0.5;
wave_0_per_point55=y = yn*zd*0.05*1.2 + 0.5;
wave_0_per_point56=
wave_0_per_point57=
wave_0_per_point58=r = 0.5 + 0.5*sin(q1*1.2 + x + x);
wave_0_per_point59=g = 0.5 + 0.5*sin(q1*1.5 + x + y);
wave_0_per_point60=b = 0.5 + 0.5*sin(q1*1.36 + y + y);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=0.88026
wavecode_1_smoothing=1.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.200
wave_1_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_1_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_1_per_point3=s = sample*3.14*100;
wave_1_per_point4=ss = sample*6.28*1000;
wave_1_per_point5=
wave_1_per_point6=//draw
wave_1_per_point7=xs = 0.5*sin(s)*cos(ss)*equal(q5,2) +
wave_1_per_point8=(0.6 + 0.1*cos(s))*cos(ss)*equal(q5,0) +
wave_1_per_point9=0.5*sin(s)*cos(ss)*equal(q5,1);
wave_1_per_point10=ys = 0.5*sin(s)*sin(ss)*equal(q5,2) +
wave_1_per_point11=(0.6 + 0.1*cos(s))*sin(ss)*equal(q5,0) +
wave_1_per_point12=0.5*sin(s)*sin(ss)*equal(q5,1);
wave_1_per_point13=zs = 0.5*cos(s)*equal(q5,2) +
wave_1_per_point14=0.1*sin(s)*equal(q5,0) +
wave_1_per_point15=0.5*sin(s)*equal(q5,1);
wave_1_per_point16=
wave_1_per_point17=
wave_1_per_point18=xtor = (0.6 + 0.1*cos(s))*cos(ss);
wave_1_per_point19=ytor = (0.6 + 0.1*cos(s))*sin(ss);
wave_1_per_point20=ztor = 0.1*sin(s);
wave_1_per_point21=
wave_1_per_point22=
wave_1_per_point23=//rotate x axis
wave_1_per_point24=angle = q1*0.3;
wave_1_per_point25=yx = ys*cos(angle) - zs*sin(angle);
wave_1_per_point26=zx = ys*sin(angle) + zs*cos(angle);
wave_1_per_point27=xx = xs;
wave_1_per_point28=
wave_1_per_point29=//rotate y axis
wave_1_per_point30=angle2 = q1*0.5;
wave_1_per_point31=xd = xx*cos(angle2) - zx*sin(angle2);
wave_1_per_point32=zd = xx*sin(angle2) + zx*cos(angle2);
wave_1_per_point33=yd = yx;
wave_1_per_point34=
wave_1_per_point35=//rotaye z axis
wave_1_per_point36=angle3 = q1*0.41;
wave_1_per_point37=xn = xd*cos(angle3) - yd*sin(angle3);
wave_1_per_point38=yn = xd*sin(angle3) + yd*cos(angle3);
wave_1_per_point39=
wave_1_per_point40=zd = zd + 2;
wave_1_per_point41=
wave_1_per_point42=//do that falloff effect
wave_1_per_point43=peek1 = (value1 + value2)*10;
wave_1_per_point44=
wave_1_per_point45=//if sample louder set that to level else decrement level
wave_1_per_point46=level = if(above(peek1,level),peek1,level - 0.00025);
wave_1_per_point47=level = if(below(level,0),0,level);
wave_1_per_point48=
wave_1_per_point49=//add to z
wave_1_per_point50=zd = zd + 2  + level;
wave_1_per_point51=
wave_1_per_point52=
wave_1_per_point53=x = xn*zd*0.05 + 0.5;
wave_1_per_point54=y = yn*zd*0.05*1.2 + 0.5;
wave_1_per_point55=
wave_1_per_point56=
wave_1_per_point57=r = 0.5 + 0.5*sin(q1*1.2 + x + x);
wave_1_per_point58=g = 0.5 + 0.5*sin(q1*1.5 + x + y);
wave_1_per_point59=b = 0.5 + 0.5*sin(q1*1.16 + y + y);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.500
wave_2_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_2_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_2_per_point3=s = sample*3.14;
wave_2_per_point4=ss = sample*6.28*100;
wave_2_per_point5=
wave_2_per_point6=//draw
wave_2_per_point7=xs = 0.5*sin(s)*cos(ss);
wave_2_per_point8=ys = 0.5*sin(s)*sin(ss);
wave_2_per_point9=zs = 0.5*sin(s);
wave_2_per_point10=
wave_2_per_point11=
wave_2_per_point12=//plot x,y,z to point on circle
wave_2_per_point13=//smp=sample*6.283;
wave_2_per_point14=//xp=sin(smp )*0.30;
wave_2_per_point15=//yp=cos(smp )*0.30;
wave_2_per_point16=//zp=0;
wave_2_per_point17=
wave_2_per_point18=
wave_2_per_point19=//alter shape;
wave_2_per_point20=///angy=sin(sample*6.28*4 +t1 )*6.28;
wave_2_per_point21=//xq=xp*cos(angy) - zp*sin(angy);
wave_2_per_point22=//zq=xp*sin(angy) + zp*cos(angy);
wave_2_per_point23=//xp=xq;
wave_2_per_point24=//zp=zq;
wave_2_per_point25=
wave_2_per_point26=
wave_2_per_point27=
wave_2_per_point28=//rotate on y axis;
wave_2_per_point29=//angy=t1*0.1;
wave_2_per_point30=//xq=xp*cos(angy) - zp*sin(angy);
wave_2_per_point31=//zq=xp*sin(angy) + zp*cos(angy);
wave_2_per_point32=//xp=xq;
wave_2_per_point33=//zp=zq;
wave_2_per_point34=
wave_2_per_point35=//rotate on x axis
wave_2_per_point36=//axs1 = sin(t1*0.15) + 1.6;
wave_2_per_point37=//yq= yp*cos(axs1) - zp*sin(axs1);
wave_2_per_point38=//zq= yp*sin(axs1) + zp*cos(axs1);
wave_2_per_point39=//yp=yq;
wave_2_per_point40=//zp=zq;
wave_2_per_point41=
wave_2_per_point42=//rotate on y axis again
wave_2_per_point43=//axs2 = sin(t1*0.1)*3.3;
wave_2_per_point44=//xq=xp*cos(axs2) - zp*sin(axs2);
wave_2_per_point45=//zq=xp*sin(axs2) + zp*cos(axs2);
wave_2_per_point46=//xp=xq;
wave_2_per_point47=//zp=zq;
wave_2_per_point48=
wave_2_per_point49=
wave_2_per_point50=
wave_2_per_point51=
wave_2_per_point52=//rotate x axis
wave_2_per_point53=angle = sin(q1*0.15 + 3.14);
wave_2_per_point54=yx = ys*cos(angle) - zs*sin(angle);
wave_2_per_point55=zx = ys*sin(angle) + zs*cos(angle);
wave_2_per_point56=xx = xs;
wave_2_per_point57=
wave_2_per_point58=//rotate y axis
wave_2_per_point59=angle2 = sin(q1*0.2 + 3.14);
wave_2_per_point60=xd = xx*cos(angle2) - zx*sin(angle2);
wave_2_per_point61=zd = xx*sin(angle2) + zx*cos(angle2);
wave_2_per_point62=yd = yx;
wave_2_per_point63=
wave_2_per_point64=zd = zd + 2;
wave_2_per_point65=
wave_2_per_point66=x = xd*zd*0.3*1.2 + 0.5;
wave_2_per_point67=y = yd*zd*0.3*1.2 + 0.5;
wave_2_per_point68=
wave_2_per_point69=
wave_2_per_point70=r = 0.5 + 0.5*sin(q1*1.2 + x + x);
wave_2_per_point71=g = 0.5 + 0.5*sin(q1*1.5 + x + y);
wave_2_per_point72=b = 0.5 + 0.5*sin(q1*1.36 + y + y);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=0.500
wave_3_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_3_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_3_per_point3=s = sample*20;
wave_3_per_point4=
wave_3_per_point5=//draw
wave_3_per_point6=xs = 0.5*sin(s)*cos(s*v);
wave_3_per_point7=ys = 0.5*sin(s)*sin(s*v);
wave_3_per_point8=zs = 0.5*sin(u);
wave_3_per_point9=
wave_3_per_point10=
wave_3_per_point11=//plot x,y,z to point on circle
wave_3_per_point12=//smp=sample*6.283;
wave_3_per_point13=//xp=sin(smp )*0.30;
wave_3_per_point14=//yp=cos(smp )*0.30;
wave_3_per_point15=//zp=0;
wave_3_per_point16=
wave_3_per_point17=
wave_3_per_point18=//alter shape;
wave_3_per_point19=///angy=sin(sample*6.28*4 +t1 )*6.28;
wave_3_per_point20=//xq=xp*cos(angy) - zp*sin(angy);
wave_3_per_point21=//zq=xp*sin(angy) + zp*cos(angy);
wave_3_per_point22=//xp=xq;
wave_3_per_point23=//zp=zq;
wave_3_per_point24=
wave_3_per_point25=
wave_3_per_point26=
wave_3_per_point27=//rotate on y axis;
wave_3_per_point28=//angy=t1*0.1;
wave_3_per_point29=//xq=xp*cos(angy) - zp*sin(angy);
wave_3_per_point30=//zq=xp*sin(angy) + zp*cos(angy);
wave_3_per_point31=//xp=xq;
wave_3_per_point32=//zp=zq;
wave_3_per_point33=
wave_3_per_point34=//rotate on x axis
wave_3_per_point35=//axs1 = sin(t1*0.15) + 1.6;
wave_3_per_point36=//yq= yp*cos(axs1) - zp*sin(axs1);
wave_3_per_point37=//zq= yp*sin(axs1) + zp*cos(axs1);
wave_3_per_point38=//yp=yq;
wave_3_per_point39=//zp=zq;
wave_3_per_point40=
wave_3_per_point41=//rotate on y axis again
wave_3_per_point42=//axs2 = sin(t1*0.1)*3.3;
wave_3_per_point43=//xq=xp*cos(axs2) - zp*sin(axs2);
wave_3_per_point44=//zq=xp*sin(axs2) + zp*cos(axs2);
wave_3_per_point45=//xp=xq;
wave_3_per_point46=//zp=zq;
wave_3_per_point47=
wave_3_per_point48=
wave_3_per_point49=
wave_3_per_point50=
wave_3_per_point51=//rotate x axis
wave_3_per_point52=angle = sin(q1*0.15 - 1.57);
wave_3_per_point53=yx = ys*cos(angle) - zs*sin(angle);
wave_3_per_point54=zx = ys*sin(angle) + zs*cos(angle);
wave_3_per_point55=xx = xs;
wave_3_per_point56=
wave_3_per_point57=//rotate y axis
wave_3_per_point58=//angle2 = sin(q1*0.2 - 1.57);
wave_3_per_point59=xd = xx*cos(angle2) - zx*sin(angle2);
wave_3_per_point60=zd = xx*sin(angle2) + zx*cos(angle2);
wave_3_per_point61=yd = yx;
wave_3_per_point62=
wave_3_per_point63=
wave_3_per_point64=x = xd*zd + 0.5;
wave_3_per_point65=y = yd*zd + 0.5;
wave_3_per_point66=
wave_3_per_point67=
wave_3_per_point68=r = 0.5 + 0.5*sin(q1*1.2 + x + x);
wave_3_per_point69=g = 0.5 + 0.5*sin(q1*1.5 + x + y);
wave_3_per_point70=b = 0.5 + 0.5*sin(q1*1.36 + y + y);
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66717
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.400
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.400
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=r = sin(q1);
shape_0_per_frame2=g = sin(q1*1.1);
shape_0_per_frame3=b = sin(q1*1.4);
shape_0_per_frame4=r2 = sin(q1*1.25);
shape_0_per_frame5=g2 = sin(q1*1.45);
shape_0_per_frame6=b2 = sin(q1*1.12);
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=t0a = time; t0 = time+.5;
per_frame_init_2=//sdev = .01;
per_frame_init_3=//spb_ = .5; spb = .51;
per_frame_init_4=p1 = 0; p2 = 0;
per_frame_init_5=height = 1.5;
per_frame_init_6=speed = .2;
per_frame_init_7=p1 = int(rand(100)); p2 = int(rand(100)); //starting pos
per_frame_init_8=sidestep = (int(rand(10))-5)/20;
per_frame_1=dec_m = pow (0.85, 30/fps); dec_s = pow (0.96, 30/fps); dec_f = pow (0.7, 30/fps);
per_frame_2=
per_frame_3=beat = bass+mid+treb; 
per_frame_4=avg = avg*dec_s + beat*(1-dec_s);
per_frame_5=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_m;
per_frame_8=index = (index + is_beat) %16;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_10=hpeak = hpeak*dec_f + above(peak,6)*is_beat;
per_frame_11=
per_frame_12=q20 = vol_;
per_frame_13=q22 = max(0,peak-.0)+.01;
per_frame_14=q24 = is_beat;
per_frame_15=q27 = index +1;
per_frame_16=
per_frame_17=//*********** Tele****************
per_frame_18=tele = 18*(sin(time/14+(p1-p2)/73)-.75);
per_frame_19=q29 = max(min(tele,1),0);
per_frame_20=ob_size= (q29 - max(min(tele-1,1),0))/2 ;
per_frame_21=q29 = q29*3+1;
per_frame_22=
per_frame_23=trig = is_beat*below(int(rand(100)),avg);
per_frame_24=ran1 = ran1 + trig*(int(rand(100))/50-1)*3; //dir
per_frame_25=
per_frame_26=trig = is_beat*below(int(rand(100)),3*avg);
per_frame_27=ran2 = ran2*bnot(trig) + trig*(int(rand(100))/50-1.1); //vdir
per_frame_28=
per_frame_29=trig = is_beat*below(int(rand(100)),5*avg);
per_frame_30=ran3 = ran3*bnot(trig) + trig*(avg/32+.05); //speed
per_frame_31=
per_frame_32=speed = speed + 1/fps*(max(min(ran3+(q29-1)/6-speed,.05),-.05));
per_frame_33=//speed = -.0;
per_frame_34=rota =  0;
per_frame_35=
per_frame_36=ddir = ddir *dec_s + (1-dec_s)*(ran1*2-dir);
per_frame_37=//ddir = 61/fps; vdir = 0;
per_frame_38=ddir_ = ddir_ *dec_s + ddir *(1-dec_s);
per_frame_39=dir = dir + ddir_/fps*abs(speed) ;
per_frame_40=//dir = 0;
per_frame_41=//dir = dir + sin(time/2)/fps*above(sin(time/2),0);
per_frame_42=q9 = dir;
per_frame_43=
per_frame_44=vdir1 = vdir1*dec_s + (1-dec_s)*(ran2)/fps*8;
per_frame_45=vdir = vdir*dec_s + (1-dec_s)*vdir1;
per_frame_46=vdir =  if (below(vdir,0), vdir*if(below(height,3),1-pow(height-3,2)/4,1),vdir);
per_frame_47=vdir =  if (above(vdir,0), vdir*if(above(height,4),1-pow(height-4,2)/4,1),vdir);
per_frame_48=
per_frame_49=height = height + speed/fps * vdir*16;
per_frame_50=height = min(max(height,1),6);
per_frame_51=
per_frame_52=q7 = vdir; //Blick vertikal; verschiebt nur uv1.y
per_frame_53=q8 = if (above(vdir,0),height,height-4*vdir); //Flughoehe; 
per_frame_54=
per_frame_55=
per_frame_56=//***** Tilt
per_frame_57=//q1 = cos(ddir*20*speed);
per_frame_58=//q2 = sin(-ddir*20*speed);
per_frame_59=//q1 = 1; q2 = 0;
per_frame_60=//***** moving direction
per_frame_61=
per_frame_62=q3 = cos(dir);
per_frame_63=q4 = sin(dir);
per_frame_64=
per_frame_65=//***** x-y-Position
per_frame_66=p1 = p1 + q3/fps*speed*cos(vdir);
per_frame_67=p2 = p2 + q4/fps*speed*cos(vdir);
per_frame_68=
per_frame_69=q5 = -p2+time*sidestep;
per_frame_70=q6 = p1;
per_frame_71=
per_frame_72=//*******landscape
per_frame_73=q10 = .5*sin(time/77+(p1+p2)/47); // cloud density, -1 bis .5
per_frame_74=//q10 =-.4;
per_frame_75=q11 = .8 + cos(p1/11)/3; //rock smooth/-brightness, 0.5 - 3; //use for daylight ?#
per_frame_76=q12 = 0.5 + .3 * sin(time/22+p1); //hormask;
per_frame_77=q13 = .1+.3*sin(p1/3); // glow; -.4 - max ca 0.4, nicht ersetzen durch lavmod2
per_frame_78=q14 =  (1+cos(p2/5))/3;  //lava structure harshness, 0 bis 1
per_frame_79=q30 = .3*(cos(time/75+p2/123)+1); //horizon brightness (moon effect)
per_frame_80=q31 = .2 + .1 * sin(time/94); //cloud size
per_frame_81=q32 = -.2-sin(time/22)/4; //Planet Y
per_frame_82=//****** daytime
per_frame_83=q15 = abs(sin(time/45+p1/87))-.75; //daytime
per_frame_84=
per_frame_85=// q10 = -.4;
per_frame_86=
per_frame_87=//******sunpos xy
per_frame_88=q16 =  0.2/height; //sky_gnd
per_frame_89=
per_frame_90=q17 = tan(dir/2);
per_frame_91=q18 = q16-q15;
per_frame_92=//*************** flash ****************
per_frame_93=q21 = min(hpeak,1) * int(rand(10))/10 * below(q15,-.5) * above(q10,.3);
per_frame_94=
per_frame_95=//side = below(speed,.3)*below(q29,2)*below(ddir_,.1)*(index2%3-1);
per_frame_96=monitor = q13; 
per_frame_97=rot = -ddir_*speed/2 + rota;
per_frame_98=dx = .5; dy = .25+q7 ;
per_frame_99=
warp_1=`sampler sampler_pw_noise_lq;
warp_2=`static const float quality = 3, depth = .2;
warp_3=`float3 rsl, rsl2, rss, ret1, rs2,rs3;
warp_4=`float2 dz, uv0, uv1, uv2, uv3, uv4, dz1,tmp2, ditch2;
warp_5=`float  ditch,lprof,lprof2,sprof,sprof2, n,noise, stone,stone_lit,sun,cloud,sky,lava,hor;
warp_6=`float flashmask, hormask, lavmask,ilavmask,lavmask_s,cldmask,lavmod;
warp_7=`static float lav_gnd = 0,hordist = (3+q8), tele = q29, sky_gnd = q16;
warp_8=`static float2 mov = float2 (q5,q6), sunpos = float2(q17,q18), planpos = float2(q17+.5,q32);
warp_9=`static float3 skycol = float3 (.1,.1,.2);
warp_10=`float3 lavcol (float t) {return smoothstep(0,.8,float3(t,pow(t,2.2),pow(t,5)));}
warp_11=`float nmod (float2 uvi) {return lerp(.7,tex2D (sampler_noise_hq,uvi),q14);} 
warp_12=`
warp_13=`float flash (float2 uvi) {return .5/pow(abs(uvi.x),.5);}
warp_14=`float hq_n (float3 uvi) {return lum(tex3D (sampler_noisevol_hq ,uvi));}
warp_15=`float noise4 (float3 uvi) { float tmp,k1,k2,k3,k4,z;
warp_16=`  z = uvi.z/2048;
warp_17=`  k1 = saturate(1-z/2); k2 = saturate(1-z*2)/2; k3 = saturate(1-z*4)/4 ; k4 = saturate(1-z*8)/4*0 ;
warp_18=`  float mean = k1+k2 + k3 + k4; 
warp_19=`  uvi.z = .01*time; 
warp_20=`  tmp2 = hq_n(uvi*(k1>=0))*k1+hq_n(uvi*2*(k2>=0))*k2
warp_21=`  +hq_n(uvi*4*(k3>=0))*k3+hq_n(uvi*8*(k4>=0))*k4 -mean/2;
warp_22=`  return tmp2;}
warp_23=`
warp_24=`float noise2 (float3 uvi) {uvi.z=0; return saturate(lerp(hq_n(uvi),hq_n(uvi*4),q31)-q10);}
warp_25=`
warp_26=`float3 rs_lav (float2 uvi, float berg) {  float z; float2 rs;
warp_27=`//  uvi.y += .06*lum(tex2D (sampler_noise_hq,(uv1.x*.06-q9*.04)))-.015;
warp_28=`  z = 2/(uvi.y)*(q8-4*berg); z = clamp(z,-.1,32*hordist); //#final check !
warp_29=`  rs.x = uvi.x*2*z ; rs.y = z;  //rs.x = (uvi.x) * (z+.464/z)*2 ; rs.y = z; //#
warp_30=`  rs = mul(rs,float2x2(q3,q4,-q4,q3));  
warp_31=`  return float3(rs/64 + mov,z); } 
warp_32=`
warp_33=`float3 rs_sky (float2 uvi, float berg) {  float z; float2 rs;
warp_34=`  z = (10-q8)/(uvi.y - berg); z = clamp(z,-150,16);
warp_35=`  rs.x = (uvi.x)*2*z ; rs.y = z; 
warp_36=`  rs = mul(rs,float2x2(q3,q4,-q4,q3));
warp_37=`  return float3(-rs/64+mov/4,z); }
warp_38=`
warp_39=`shader_body {
warp_40=`uv1 = uv; uv0 = uv; uv2 = uv1*aspect.xy*tele;
warp_41=`
warp_42=`rsl = rs_lav(tele*(float2(uv1.x*0,-.2)),-q8); 
warp_43=`lav_gnd = (tex2D (sampler_noise_hq, rsl/4))*.2/q8-.15; //#
warp_44=`
warp_45=`for (n=1; n <= quality; n++) {
warp_46=`  rsl = rs_lav(tele*uv1,lav_gnd); //#spiele an uv-Vorfakt - zoom, auch bei sky !
warp_47=`  lprof =  (tex2D (sampler_noise_hq,rsl.xy/4)) - .75; //mittelwert null !#
warp_48=`  lprof +=  (tex2D (sampler_noise_hq,rsl.xy/2))/2 ; 
warp_49=`//  lprof +=  (tex2D (sampler_noise_hq,rsl.xy))/4 ; 
warp_50=`  ditch = saturate(6*length(sin(rsl.xy/2+lprof*.0))-7)*0; 
warp_51=`  lprof = lerp(lprof,1,ditch);
warp_52=`  lav_gnd -= lprof/quality*depth; } //#?
warp_53=`lavmod = tex2D (sampler_noise_hq,rsl.x/16)-.5;  
warp_54=`float lavmod2 = tex2D (sampler_noise_hq,rsl/16); 
warp_55=`lprof += lavmod;
warp_56=`
warp_57=`rsl2 = rsl + float3(0,0.03,0);
warp_58=`lprof2 = (tex2D (sampler_noise_hq,rsl2.xy/4)) - .75; //mittelwert null !#
warp_59=`lprof2 +=  (tex2D (sampler_noise_hq,rsl2.xy/2))/2 ; 
warp_60=`lprof2 += lavmod; // ditch fehlt !#
warp_61=`
warp_62=`sun = saturate(.02/length(uv2-sunpos)); 
warp_63=`
warp_64=`rss = rs_sky(tele*uv1,sky_gnd) ; 
warp_65=`sprof = noise2(rss);  sky_gnd -= sprof/rss.z*2;
warp_66=`rss = rs_sky(tele*uv1,sky_gnd);
warp_67=`sprof = noise2(rss);  sky_gnd -= sprof/rss.z*2;
warp_68=`
warp_69=`float3 rss2 = rss + float3(0,.01,0);
warp_70=`sprof2 = noise2(rss2);
warp_71=`
warp_72=`rsl = 8*rs_lav(tele*uv1,lav_gnd); 
warp_73=`
warp_74=`noise = pow(noise4(rsl+ditch*lprof),q11)/q8*2; //aliasing reduzieren
warp_75=`lava = nmod((rsl+noise/2)*rand_preset.x/2)+ditch*0;
warp_76=`lava *= lerp (lprof,1,q13); //# zusatzglow, blosse addition uebersteuert ditch
warp_77=`float layers = pow(tex2D (sampler_noise_hq,lprof+rsl/4),6)*.25*(1-ditch) ;
warp_78=`lava *= 1+layers*lavmod2;
warp_79=`//lava *= .2+saturate(.1/abs(length(sin(rsl.xy/8))-q22));
warp_80=`
warp_81=`stone = (1-lava)*noise;
warp_82=`stone_lit = (lprof2-lprof);
warp_83=`
warp_84=`//------------------- masking -----------------------------------------
warp_85=`lavmask = saturate (hordist-rsl.z/200) * (rsl.z >= 0); // # !
warp_86=`ilavmask = saturate(1-lavmask);
warp_87=`cldmask = saturate(-16/rss.z-.1);
warp_88=`hormask = saturate (abs(rss.z)/64)*saturate(2-512/rsl.z);
warp_89=`hormask = saturate (1-8*abs(uv1.y-.04))/q29;
warp_90=`flashmask = saturate(hormask*4-2*(1+rand_frame)) ;
warp_91=`cloud =  (1-sprof)*cldmask*ilavmask;
warp_92=`float ncloud = saturate(1-5*cloud);
warp_93=`
warp_94=`float k1 = saturate(q15)+.01 ; //durch daytime ersetzen aber nicht negativ oder null#
warp_95=`float daylight = saturate(k1*(.2+q30)*3); 
warp_96=`
warp_97=`float asym = (q30); 
warp_98=`hor = (daylight/length((uv2-float2(q17,.1)))) ;
warp_99=`sky = ncloud*k1;
warp_100=`
warp_101=`
warp_102=`//----------------Planet----------------
warp_103=`float2 rsk = (uv2 - planpos) ;
warp_104=`float2 dz1 = normalize(rsk);
warp_105=`float rad3 =12*length (rsk);
warp_106=`float2 uv4 =  tan(rad3)*dz1;
warp_107=`float2 noise = abs(tex2D (sampler_noise_hq,uv4/2)-.5);
warp_108=`float mask3 = saturate(32-22*rad3);
warp_109=`float2 Planet = (uv4*(1+noise.x))*mask3;
warp_110=`
warp_111=`
warp_112=`//----------------- colour mixing starts here---fuck--------
warp_113=`//---------------- skylight first-----------------
warp_114=`float3 col_hor = (1+slow_roam_cos)/2;
warp_115=`ret1 = hor*col_hor; 
warp_116=`ret1 += sun*ncloud;
warp_117=`ret1 *= ilavmask;  
warp_118=`
warp_119=`//------------ clouds ----------------------
warp_120=`float3 shine = lavcol(.1+q13)+.1;
warp_121=`//ret1 += shine*cloud/2 + daylight*cloud*(1+col_hor)/4;// bedenke +cloud tagsueber
warp_122=`ret1 += col_hor*(cloud)*daylight*(1-q10) + shine*(cloud);
warp_123=`
warp_124=`//----------------lava / stone  -----------------
warp_125=`ret1 += lavcol(saturate(lava-daylight*(1-ditch))) * lavmask ; 
warp_126=`ret1 += stone *lavmask*(shine+.5*daylight);
warp_127=`ret1 += (.5+stone)*(1-ditch)*stone_lit*lavmask*saturate(k1*4)*(1+col_hor)/2;
warp_128=`
warp_129=`//--------------------flash------------------
warp_130=`float fl = 0;//flashmask*flash(uv1+rand_frame/2-q4+hq_n(float3(8*uv1,q21))*.02);
warp_131=`fl += 8*saturate(stone)*lavmask;
warp_132=`fl += 4*saturate(1-sprof)*cldmask;
warp_133=`ret1 += fl*float3(.7,.4,1)*q21;
warp_134=`
warp_135=`ret1.b += lavmask*saturate(-q15)*saturate(-q13*2)*(uv1.y);
warp_136=`
warp_137=`
warp_138=`ret1 = ret1 + ilavmask*clamp(-1+1*dot(Planet,normalize(sunpos-planpos)),-.1,4)
warp_139=`              *mask3/2*ncloud*(1-daylight);
warp_140=`//---------------- fog ------------------------------------
warp_141=`float3 fogcol = lerp(shine,1,daylight);
warp_142=`ret1 = lerp(ret1,1*fogcol,hormask*q12); // what the#
warp_143=`
warp_144=`k1 = (q29-1)/6;
warp_145=`//ret1 = lerp(GetPixel(uv_orig)*.7,ret1,1-k1);
warp_146=`ret = 1-exp(-ret1*2); //finally !
warp_147=`//ret = hormask;
warp_148=`}
warp_149=`
warp_150=`written by martin
warp_151=`END
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`//uv = (uv-.5) * aspect.xy + .5;
comp_5=`
comp_6=`
comp_7=`float2 hor = float2 (texsize.z,0)*2;
comp_8=`float2 ver = float2 (0,texsize.w)*2;
comp_9=`float dx = GetBlur1 (uv-hor) - GetBlur1 (uv+hor);
comp_10=`float dy = GetBlur1 (uv-ver) - GetBlur1 (uv+ver);
comp_11=`float2 dz = float2 (dx,dy)*0.5;
comp_12=`
comp_13=`
comp_14=`
comp_15=`float3 crisp = tex2D(sampler_main, uv + dz) * 
comp_16=`               tex2D(sampler_main, 1-uv - dz);
comp_17=`float3 blur = GetBlur1(frac(uv + dz));
comp_18=`
comp_19=`float2 uv1 = uv-.5 + dz/4;
comp_20=`float2 uv2 = uv1*0+.2*float2 (cos(uv1*4+time));;
comp_21=`float3 dots = saturate(.01/(length(uv2))) * float3 (1,1,1);
comp_22=`
comp_23=`
comp_24=`ret = (crisp + blur*2) + q21*dots * (1-blur);
comp_25=`ret *= .7 ;
comp_26=`}
