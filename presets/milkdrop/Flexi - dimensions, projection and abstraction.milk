MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=2.000000
fGammaAdj=1.000
fDecay=0.995
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.900
fWaveScale=2.997
fWaveSmoothing=0.000
fWaveParam=-0.500
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=0.274
fWarpScale=7.980
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.20929
sx=1.00000
sy=1.00000
wave_r=0.020
wave_g=0.020
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=1.000
ob_g=0.050
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=1.000
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.200
wavecode_0_enabled=1
wavecode_0_samples=495
wavecode_0_sep=4
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=100.00000
wavecode_0_smoothing=1.00000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.990
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=ab = 1;
wave_0_per_frame1=t1 = q1;
wave_0_per_frame2=t2 = q2;
wave_0_per_frame3=t3 = q3;
wave_0_per_frame4=t4 = q4;
wave_0_per_frame5=t5 = q5;
wave_0_per_frame6=t6 = q6;
wave_0_per_frame7=t8 = .07;
wave_0_per_frame8=t7 = 1;
wave_0_per_point1=t7 = -t7;
wave_0_per_point2=pi = asin(1);
wave_0_per_point3=n = 180;
wave_0_per_point4=rd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;
wave_0_per_point5=my_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);
wave_0_per_point6=my_z = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);
wave_0_per_point7=my_y = sin(sample*pi*n)*rd;
wave_0_per_point8=
wave_0_per_point9=
wave_0_per_point10=
wave_0_per_point11=d = 1.4; // makes the perspective impact
wave_0_per_point12=zoom = 0.55;
wave_0_per_point13=
wave_0_per_point14=w3 = -q8;
wave_0_per_point15=w2 = q9;
wave_0_per_point16=w1 = q10;
wave_0_per_point17=
wave_0_per_point18=x1 = cos(w1)*my_x + sin(w1)*my_y;
wave_0_per_point19=y1 = -sin(w1)*my_x + cos(w1)*my_y;
wave_0_per_point20=z1 = my_z;
wave_0_per_point21=
wave_0_per_point22=x2 = cos(w2)*x1 + sin(w2)*z1;
wave_0_per_point23=z2 = -sin(w2)*x1 + cos(w2)*z1;
wave_0_per_point24=y2 = y1;
wave_0_per_point25=
wave_0_per_point26=y3 = cos(w3)*y2 + sin(w3)*z2;
wave_0_per_point27=z3 = -sin(w3)*y2 + cos(w3)*z2;
wave_0_per_point28=x3 = x2;
wave_0_per_point29=
wave_0_per_point30=// perspective calculation
wave_0_per_point31=
wave_0_per_point32=l = sqrt(x3*x3 + y3*y3);
wave_0_per_point33=w = atan2(x3,y3);
wave_0_per_point34=p = tan(asin(1) + atan2(d+z3,l));
wave_0_per_point35=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
wave_0_per_point36=
wave_0_per_point37=my_x = zoom*sin(w)*p;
wave_0_per_point38=my_y = zoom*cos(w)*p;
wave_0_per_point39=
wave_0_per_point40=x = 0.5 + my_x;
wave_0_per_point41=y = 0.5 + my_y;
wave_0_per_point42=
wave_0_per_point43=b = -z3 + 0.5;
wave_0_per_point44=b = min(1,max(0,b))*0.5;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=20
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.07000
wavecode_1_smoothing=0.65000
wavecode_1_r=0.000
wavecode_1_g=0.300
wavecode_1_b=0.300
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=30
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=0.07000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.300
wavecode_2_g=0.300
wavecode_2_b=0.300
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=60
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=99
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=1.000
shapecode_0_y=0.630
shapecode_0_rad=1.30000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.76300
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.970
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.550
shapecode_1_rad=0.22500
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.970
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.850
shapecode_2_y=0.000
shapecode_2_rad=1.30000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=2.06800
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.970
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.970
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.020
shapecode_3_y=0.500
shapecode_3_rad=0.73300
shapecode_3_ang=1.31900
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=100.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.970
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.970
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=q21 = 1/asin(1);
per_frame_1=zoom = 1;
per_frame_2=wave_a = 0;
per_frame_3=
per_frame_4=q1 = 0.25/asin(1);
per_frame_5=
per_frame_6=
per_frame_7=v = 0.4;
per_frame_8=j1 = j1*0.95 + sqr(bass*4)*v;
per_frame_9=j2 = j2*0.95 + sqr(mid*4)*v;
per_frame_10=j3 = j3*0.95 + sqr(treb*4)*v;
per_frame_11=
per_frame_12=n = n + j1*0.0052;
per_frame_13=n1 = n1 + j2*0.0052;
per_frame_14=n2 = n2 + j3*0.0052;
per_frame_15=
per_frame_16=//n = time*100;
per_frame_17=//n1 = time*100;
per_frame_18=//n2 = time*100;
per_frame_19=
per_frame_20=angle1 = n*0.01;
per_frame_21=angle2 = n1*0.01;
per_frame_22=angle3 = n2*0.01;
per_frame_23=
per_frame_24=
per_frame_25=q2 = cos(angle1);
per_frame_26=q3 = sin(angle1);
per_frame_27=
per_frame_28=q4 = cos(angle2);
per_frame_29=q5 = sin(angle2);
per_frame_30=
per_frame_31=q6 = cos(angle3);
per_frame_32=q7 = sin(angle3);
per_frame_33=
per_frame_34=
per_frame_35=q8 = angle1;
per_frame_36=q9 = angle2;
per_frame_37=q10 = angle3;
per_pixel_1=x = 0.5 + (x-0.51)*q1;
per_pixel_2=y = 0.5 - (y-0.5)*q2;
per_pixel_3=dx = (x*(1-x)-q5*x*y/(x+q6));
per_pixel_4=dy = -q7*y*(1-y/x);
per_pixel_5=
per_pixel_6=dx = -dx*0.02/q1;
per_pixel_7=dy = -dy*0.02/q2;
warp_1=`float2 complex_div(float2 numerator, float2 denominator){
warp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_5=`}
warp_6=`
warp_7=`float2 uv_polar(float2 domain, float2 center){
warp_8=`   float2 c = domain - center;
warp_9=`   float rad_hq = length(c);
warp_10=`   float ang_hq = atan2(c.x,c.y);
warp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
warp_12=`}
warp_13=`
warp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
warp_15=`   float2 polar = uv_polar(domain, center);
warp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
warp_17=`}
warp_18=`
warp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
warp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
warp_21=`}
warp_22=`
warp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
warp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
warp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
warp_26=`}
warp_27=`
warp_28=`
warp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
warp_30=`   float2 uv_r = (domain-center);
warp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
warp_32=`}
warp_33=`
warp_34=`float3 maxNeumann(float2 domain){
warp_35=`   float3 maxneumann = float3(0,0,0);
warp_36=`   float2 pixel = texsize.zw;
warp_37=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2(-1, 0) ));
warp_38=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0,-1) ));
warp_39=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0, 0) ));
warp_40=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0, 1) ));
warp_41=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 1, 0) ));
warp_42=`   return maxneumann;
warp_43=`}
warp_44=`
warp_45=`shader_body
warp_46=`{
warp_47=`   float3 noise = (tex2D(sampler_noise_lq, uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy).y-0.5);
warp_48=`   float2 uvo = uv;
warp_49=`
warp_50=`   uv = uv_orig;
warp_51=`
warp_52=`   float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q7, -q6, 2) + noise.xy*texsize.zw*4;
warp_53=`   float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q9*0.5,q8*0.5));
warp_54=`   float2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
warp_55=`
warp_56=`   ret.x = GetBlur1(mirror_uv).x*0.97-0.02;
warp_57=`
warp_58=`
warp_59=`   ret.z = GetPixel(0.5+(uv-0.5)*0.985 + noise.xy*texsize.zw*0.5).z*0.85 - 0.004;
warp_60=`
warp_61=`   float2 d = texsize.zw*4;
warp_62=`   float dx = (2*GetBlur1(uv+d*float2(1,0))-2*GetBlur1(uv+d*float2(-1,0)) ).y*0.5;
warp_63=`   float dy = (2*GetBlur1(uv+d*float2(0,1))-2*GetBlur1(uv+d*float2(0,-1)) ).y*0.5;
warp_64=`
warp_65=`   d = float2(dx,dy)*texsize.zw;
warp_66=`
warp_67=`   ret.y = maxNeumann(uv-d*2.5).y + (GetPixel(uv+d*4).y - GetBlur1(uv + d*4).y)*0.206 - 0.09;
warp_68=`
warp_69=`   ret.y += GetBlur1(mirror_uv).z*0.25;
warp_70=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`float2 polar, factorA, factorB, product;
comp_35=`sampler sampler_wrenches;
comp_36=`
comp_37=`shader_body
comp_38=`{
comp_39=`float2 c = (uv-0.5)*aspect.xy;float z = 0.08;polar = float2( atan2(c.x,z), atan2(c.y,z));
comp_40=`float3 p = float3( sin(polar.x)*cos(polar.y),sin(polar.y)*cos(polar.x),cos(polar.x)*cos(polar.y));
comp_41=`factorA = p.zy;factorB = float2(q2,q3);
comp_42=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_43=`p.zy = product.xy;factorA = p.zx;factorB = float2(q4,q5);
comp_44=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_45=`p.zx = product.xy;factorA = p.yx;factorB = float2(q6,q7);
comp_46=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_47=`p.yx = product.xy;polar = float2( atan2(p.x,p.z)*q1,atan2(p.y,length(p.xz))*q1*2 + 0.5);
comp_48=`
comp_49=`float2 uvo = uv;
comp_50=`
comp_51=`float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q7, -q6, 2);
comp_52=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q9*0.5,q8*0.5));
comp_53=`float2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
comp_54=`
comp_55=`ret = lerp(ret, 1-pow(hue_shader,4), GetPixel(mirror_uv).x*1.5);
comp_56=`
comp_57=`//ret = lerp(ret, float3(0,0,0), GetPixel(uv).y);
comp_58=`
comp_59=`float2 d = texsize.zw;
comp_60=`float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_61=`float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_62=`float2 dz = float2(dx.y,dy.y)*3; d = texsize.zw*2;
comp_63=`dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_64=`dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_65=`dz +=float2(dx.y,dy.y);
comp_66=`
comp_67=`ret = lerp(ret, 1.5, GetBlur1(frac(polar) - float2(dx.x,dy.x)*texsize.zw*256).z);
comp_68=`
comp_69=`ret = lerp(ret, 1, length(dz) + GetPixel(uv + float2(dx.y,dy.y)*texsize.zw*18).y*0.25);
comp_70=`
comp_71=`ret = lerp(ret, pow(hue_shader,4)*1.4, GetBlur1(mirror_uv).z);
comp_72=`
comp_73=`ret = lerp(ret, 0, GetPixel(frac(polar)).z*0.76);
comp_74=`
comp_75=`
comp_76=`//ret = GetPixel(uv).y;
comp_77=`}
